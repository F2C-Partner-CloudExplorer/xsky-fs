/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.OSSearchEngineAddGatewaysReq;
import xio.sds.client.model.OSSearchEngineCreateReq;
import xio.sds.client.model.OSSearchEngineRemoveGatewaysReq;
import xio.sds.client.model.OSSearchEngineResp;
import xio.sds.client.model.OSSearchEngineSamplesResp;
import xio.sds.client.model.OSSearchEngineUpdateReq;
import xio.sds.client.model.OSSearchEnginesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for OsSearchEnginesApi
 */
@Ignore
public class OsSearchEnginesApiTest {

    private final OsSearchEnginesApi api = new OsSearchEnginesApi();

    /**
     * 
     *
     * Create new OS Search gateways on OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addOSSearchGatewaysTest() throws Exception {
        OSSearchEngineAddGatewaysReq body = null;
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.addOSSearchGateways(body, osSearchEngineId);

        // TODO: test validations
    }
    /**
     * 
     *
     * change OS search engine falvor or data size
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void changeOSSearchEngineTest() throws Exception {
        OSSearchEngineUpdateReq body = null;
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.changeOSSearchEngine(body, osSearchEngineId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createOSSearchEngineTest() throws Exception {
        OSSearchEngineCreateReq body = null;
        String clusterId = null;
        OSSearchEngineResp response = api.createOSSearchEngine(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteOSSearchEngineTest() throws Exception {
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.deleteOSSearchEngine(osSearchEngineId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get a OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOSSearchEngineTest() throws Exception {
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.getOSSearchEngine(osSearchEngineId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get an object storage search engine&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOSSearchEngineSamplesTest() throws Exception {
        Long osSearchEngineId = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OSSearchEngineSamplesResp response = api.getOSSearchEngineSamples(osSearchEngineId, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * List OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listOSSearchEnginesTest() throws Exception {
        String clusterId = null;
        Long limit = null;
        Long offset = null;
        OSSearchEnginesResp response = api.listOSSearchEngines(clusterId, limit, offset);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove OS search gateways from OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeOSSearchGatewaysTest() throws Exception {
        OSSearchEngineRemoveGatewaysReq body = null;
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.removeOSSearchGateways(body, osSearchEngineId);

        // TODO: test validations
    }
    /**
     * 
     *
     * start OS search gateways from OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void startOSSearchEngineTest() throws Exception {
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.startOSSearchEngine(osSearchEngineId);

        // TODO: test validations
    }
    /**
     * 
     *
     * stop OS search gateways from OS search engine
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void stopOSSearchEngineTest() throws Exception {
        Long osSearchEngineId = null;
        OSSearchEngineResp response = api.stopOSSearchEngine(osSearchEngineId);

        // TODO: test validations
    }
}
