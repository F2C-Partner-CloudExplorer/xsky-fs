/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.AlertContactReq;
import xio.sds.client.model.AlertContactResp;
import xio.sds.client.model.AlertContactStrategyResp;
import xio.sds.client.model.AlertContactsResp;
import xio.sds.client.model.AlertsActionReq;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AlertContactsApi
 */
@Ignore
public class AlertContactsApiTest {

    private final AlertContactsApi api = new AlertContactsApi();

    /**
     * 
     *
     * check the relationship between alert contact and alert strategy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void checkAlertContactTest() throws Exception {
        Long alertContactId = null;
        AlertContactStrategyResp response = api.checkAlertContact(alertContactId);

        // TODO: test validations
    }
    /**
     * 
     *
     * create contact of alert
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAlertContactTest() throws Exception {
        AlertContactReq body = null;
        AlertContactReq response = api.createAlertContact(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete alert contact
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAlertContactTest() throws Exception {
        Long alertContactId = null;
        api.deleteAlertContact(alertContactId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get an alert contact
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAlertContactTest() throws Exception {
        Long alertContactId = null;
        AlertContactResp response = api.getAlertContact(alertContactId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List all alert contacts
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAlertContactsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String name = null;
        String durationBegin = null;
        String durationEnd = null;
        Long durationLimit = null;
        Long durationOffset = null;
        String q = null;
        String sort = null;
        AlertContactsResp response = api.listAlertContacts(limit, offset, name, durationBegin, durationEnd, durationLimit, durationOffset, q, sort);

        // TODO: test validations
    }
    /**
     * 
     *
     * update alert contact
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateAlertContactTest() throws Exception {
        AlertsActionReq body = null;
        Long alertContactId = null;
        api.updateAlertContact(body, alertContactId);

        // TODO: test validations
    }
}
