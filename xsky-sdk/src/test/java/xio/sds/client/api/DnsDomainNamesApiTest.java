/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DNSDomainNameCreateReq;
import xio.sds.client.model.DNSDomainNameResp;
import xio.sds.client.model.DNSDomainNameUpdateReq;
import xio.sds.client.model.DNSDomainNamesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DnsDomainNamesApi
 */
@Ignore
public class DnsDomainNamesApiTest {

    private final DnsDomainNamesApi api = new DnsDomainNamesApi();

    /**
     * 
     *
     * Create a DNS domain name.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createDNSDomainNameTest() throws Exception {
        DNSDomainNameCreateReq body = null;
        DNSDomainNameResp response = api.createDNSDomainName(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete a DNS domain nam.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteDNSDomainNameTest() throws Exception {
        Long nameId = null;
        api.deleteDNSDomainName(nameId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get a dns domain name
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDNSDomainNameTest() throws Exception {
        Long nameId = null;
        DNSDomainNameResp response = api.getDNSDomainName(nameId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List dns domain names
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listDNSDomainNamesTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long dnsZoneId = null;
        Long dfsGatewayZoneId = null;
        DNSDomainNamesResp response = api.listDNSDomainNames(limit, offset, dnsZoneId, dfsGatewayZoneId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update a DNS domain name
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDNSDomainNameTest() throws Exception {
        DNSDomainNameUpdateReq body = null;
        Long nameId = null;
        DNSDomainNameResp response = api.updateDNSDomainName(body, nameId);

        // TODO: test validations
    }
}
