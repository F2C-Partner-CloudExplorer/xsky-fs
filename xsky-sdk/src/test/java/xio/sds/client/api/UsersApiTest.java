/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.ChangePasswordReq;
import xio.sds.client.model.UserCreateReq;
import xio.sds.client.model.UserResp;
import xio.sds.client.model.UserSettings;
import xio.sds.client.model.UserUpdateReq;
import xio.sds.client.model.UsersResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for UsersApi
 */
@Ignore
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * 
     *
     * change user password
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void changePasswordTest() throws Exception {
        ChangePasswordReq body = null;
        Long userId = null;
        api.changePassword(body, userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * create user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws Exception {
        UserCreateReq body = null;
        UserResp response = api.createUser(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws Exception {
        Long userId = null;
        api.deleteUser(userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get a user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws Exception {
        Long userId = null;
        UserResp response = api.getUser(userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update user info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserSettingsTest() throws Exception {
        Long userId = null;
        UserSettings response = api.getUserSettings(userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List users
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listUsersTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String name = null;
        String email = null;
        Boolean all = null;
        UsersResp response = api.listUsers(limit, offset, name, email, all);

        // TODO: test validations
    }
    /**
     * 
     *
     * update user info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws Exception {
        UserUpdateReq body = null;
        Long userId = null;
        UserResp response = api.updateUser(body, userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update user info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateUserSettingsTest() throws Exception {
        UserSettings body = null;
        Long userId = null;
        UserSettings response = api.updateUserSettings(body, userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * set user skip guide
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void userSkipGuideTest() throws Exception {
        UserResp response = api.userSkipGuide();

        // TODO: test validations
    }
}
