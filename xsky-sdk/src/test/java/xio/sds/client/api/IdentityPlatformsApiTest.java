/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.IdentityPlatformCreateReq;
import xio.sds.client.model.IdentityPlatformResp;
import xio.sds.client.model.IdentityPlatformUpdateReq;
import xio.sds.client.model.IdentityPlatformsResp;
import xio.sds.client.model.LoginSsoTypesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for IdentityPlatformsApi
 */
@Ignore
public class IdentityPlatformsApiTest {

    private final IdentityPlatformsApi api = new IdentityPlatformsApi();

    /**
     * 
     *
     * Create identity platform
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createIdentityPlatformTest() throws Exception {
        IdentityPlatformCreateReq body = null;
        IdentityPlatformResp response = api.createIdentityPlatform(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete identity platform
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteIdentityPlatformTest() throws Exception {
        Long identityPlatformId = null;
        api.deleteIdentityPlatform(identityPlatformId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get a identity platform
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIdentityPlatformTest() throws Exception {
        Long identityPlatformId = null;
        IdentityPlatformResp response = api.getIdentityPlatform(identityPlatformId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List identity platforms
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listIdentityPlatformsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        IdentityPlatformsResp response = api.listIdentityPlatforms(limit, offset);

        // TODO: test validations
    }
    /**
     * 
     *
     * List SSO Protocol Types
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loginSSOTypesTest() throws Exception {
        LoginSsoTypesResp response = api.loginSSOTypes();

        // TODO: test validations
    }
    /**
     * 
     *
     * regenereate a identity platform key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void regenerateIdentityKeyTest() throws Exception {
        Long identityPlatformId = null;
        IdentityPlatformResp response = api.regenerateIdentityKey(identityPlatformId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update a identity platform
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateIdentityPlatformTest() throws Exception {
        IdentityPlatformUpdateReq body = null;
        Long identityPlatformId = null;
        IdentityPlatformResp response = api.updateIdentityPlatform(body, identityPlatformId);

        // TODO: test validations
    }
}
