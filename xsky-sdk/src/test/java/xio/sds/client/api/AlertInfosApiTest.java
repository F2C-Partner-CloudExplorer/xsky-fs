/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.AlertInfoResp;
import xio.sds.client.model.AlertInfosResp;
import xio.sds.client.model.AlertStatsResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AlertInfosApi
 */
@Ignore
public class AlertInfosApiTest {

    private final AlertInfosApi api = new AlertInfosApi();

    /**
     * 
     *
     * set the acked status of alert info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ackAlertInfoTest() throws Exception {
        Long alertInfoId = null;
        api.ackAlertInfo(alertInfoId);

        // TODO: test validations
    }
    /**
     * 
     *
     * count all alert infos
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countAlertInfosTest() throws Exception {
        Boolean acked = null;
        Boolean resolved = null;
        String resourceType = null;
        Long resourceId = null;
        AlertStatsResp response = api.countAlertInfos(acked, resolved, resourceType, resourceId);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete an alert info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAlertInfoTest() throws Exception {
        Long alertInfoId = null;
        AlertInfoResp response = api.deleteAlertInfo(alertInfoId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get an alert info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAlertInfoTest() throws Exception {
        Long alertInfoId = null;
        AlertInfoResp response = api.getAlertInfo(alertInfoId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get report of alert infos
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAlertInfosReportTest() throws Exception {
        String level = null;
        String resourceType = null;
        Long resourceId = null;
        String createAfter = null;
        Boolean acked = null;
        Boolean resolved = null;
        String group = null;
        api.getAlertInfosReport(level, resourceType, resourceId, createAfter, acked, resolved, group);

        // TODO: test validations
    }
    /**
     * 
     *
     * List all alert infos
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAlertInfosTest() throws Exception {
        String qMust = null;
        String q = null;
        String relatedResource = null;
        String sort = null;
        Long limit = null;
        Long offset = null;
        String level = null;
        String resourceType = null;
        Long resourceId = null;
        String createAfter = null;
        Boolean acked = null;
        Boolean resolved = null;
        String group = null;
        Boolean excludeCluster = null;
        AlertInfosResp response = api.listAlertInfos(qMust, q, relatedResource, sort, limit, offset, level, resourceType, resourceId, createAfter, acked, resolved, group, excludeCluster);

        // TODO: test validations
    }
    /**
     * 
     *
     * set the resolved status of alert info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resolveAlertInfoTest() throws Exception {
        Long alertInfoId = null;
        api.resolveAlertInfo(alertInfoId);

        // TODO: test validations
    }
}
