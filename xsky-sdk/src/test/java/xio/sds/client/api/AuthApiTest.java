/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.AuthLoginReq;
import xio.sds.client.model.AuthRSAKeyResp;
import xio.sds.client.model.AuthSecurityPolicyResp;
import xio.sds.client.model.AuthSecurityPolicyUpdateReq;
import xio.sds.client.model.PrivilegedTokenReq;
import xio.sds.client.model.PrivilegedTokenResp;
import xio.sds.client.model.TokenCreateReq;
import xio.sds.client.model.TokenResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AuthApi
 */
@Ignore
public class AuthApiTest {

    private final AuthApi api = new AuthApi();

    /**
     * 
     *
     * Create RSA key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createRSAKeyTest() throws Exception {
        AuthRSAKeyResp response = api.createRSAKey();

        // TODO: test validations
    }
    /**
     * 
     *
     * creates temporary token for credentials
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTokenTest() throws Exception {
        TokenCreateReq body = null;
        TokenResp response = api.createToken(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * setup auth security policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAuthSecurityPolicyTest() throws Exception {
        AuthSecurityPolicyResp response = api.getAuthSecurityPolicy();

        // TODO: test validations
    }
    /**
     * 
     *
     * logs in
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void loginTest() throws Exception {
        AuthLoginReq body = null;
        TokenResp response = api.login(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * logs out
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void logoutTest() throws Exception {
        api.logout();

        // TODO: test validations
    }
    /**
     * 
     *
     * update auth security policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateAuthSecurityPolicyTest() throws Exception {
        AuthSecurityPolicyUpdateReq body = null;
        AuthSecurityPolicyResp response = api.updateAuthSecurityPolicy(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * validate privileged token in some operations
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void validatePrivilegedTokenTest() throws Exception {
        PrivilegedTokenReq body = null;
        PrivilegedTokenResp response = api.validatePrivilegedToken(body);

        // TODO: test validations
    }
}
