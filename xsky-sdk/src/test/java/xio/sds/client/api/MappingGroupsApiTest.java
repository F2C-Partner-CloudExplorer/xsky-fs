/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.MappingGroupAddVolumesReq;
import xio.sds.client.model.MappingGroupCreateReq;
import xio.sds.client.model.MappingGroupRemoveVolumesReq;
import xio.sds.client.model.MappingGroupResp;
import xio.sds.client.model.MappingGroupUpdateClientGroupReq;
import xio.sds.client.model.MappingGroupUpdateReq;
import xio.sds.client.model.MappingGroupsResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for MappingGroupsApi
 */
@Ignore
public class MappingGroupsApiTest {

    private final MappingGroupsApi api = new MappingGroupsApi();

    /**
     * 
     *
     * add volumes to mapping group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addVolumesTest() throws Exception {
        MappingGroupAddVolumesReq body = null;
        Long mappingGroupId = null;
        MappingGroupResp response = api.addVolumes(body, mappingGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * create a mapping group in access path
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createMappingGroupTest() throws Exception {
        MappingGroupCreateReq body = null;
        MappingGroupResp response = api.createMappingGroup(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete mapping group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteMappingGroupTest() throws Exception {
        Long mappingGroupId = null;
        Boolean force = null;
        MappingGroupResp response = api.deleteMappingGroup(mappingGroupId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get mapping group by id
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMappingGroupTest() throws Exception {
        Long mappingGroupId = null;
        MappingGroupResp response = api.getMappingGroup(mappingGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List mapping groups
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listMappingGroupsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long accessPathId = null;
        Long clientGroupId = null;
        MappingGroupsResp response = api.listMappingGroups(limit, offset, accessPathId, clientGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove volumes from mapping group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeVolumesTest() throws Exception {
        MappingGroupRemoveVolumesReq body = null;
        Long mappingGroupId = null;
        Boolean force = null;
        MappingGroupResp response = api.removeVolumes(body, mappingGroupId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * update mapping group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateMappingGroupTest() throws Exception {
        MappingGroupUpdateReq body = null;
        Long mappingGroupId = null;
        MappingGroupResp response = api.updateMappingGroup(body, mappingGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update client group in mapping group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateMappingGroupClientGroupTest() throws Exception {
        MappingGroupUpdateClientGroupReq body = null;
        Long mappingGroupId = null;
        MappingGroupResp response = api.updateMappingGroupClientGroup(body, mappingGroupId);

        // TODO: test validations
    }
}
