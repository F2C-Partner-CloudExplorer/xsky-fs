/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.AccessTokenCreateReq;
import xio.sds.client.model.AccessTokenCreateResp;
import xio.sds.client.model.AccessTokenResp;
import xio.sds.client.model.AccessTokenUpdateReq;
import xio.sds.client.model.AccessTokensResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AccessTokensApi
 */
@Ignore
public class AccessTokensApiTest {

    private final AccessTokensApi api = new AccessTokensApi();

    /**
     * 
     *
     * Create an access token
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAccessTokenTest() throws Exception {
        AccessTokenCreateReq body = null;
        AccessTokenCreateResp response = api.createAccessToken(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete an access token
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAccessTokenTest() throws Exception {
        Long accessTokenId = null;
        api.deleteAccessToken(accessTokenId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get an access Token
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAccessTokenTest() throws Exception {
        Long accessTokenId = null;
        AccessTokenResp response = api.getAccessToken(accessTokenId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List access tokens
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAccessTokensTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long userId = null;
        String role = null;
        Boolean all = null;
        AccessTokensResp response = api.listAccessTokens(limit, offset, userId, role, all);

        // TODO: test validations
    }
    /**
     * 
     *
     * regenereate an access token UUID
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void regenerateAccessTokenTest() throws Exception {
        Long accessTokenId = null;
        AccessTokenCreateResp response = api.regenerateAccessToken(accessTokenId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update an access token
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateAccessTokenTest() throws Exception {
        AccessTokenUpdateReq body = null;
        Long accessTokenId = null;
        AccessTokenResp response = api.updateAccessToken(body, accessTokenId);

        // TODO: test validations
    }
    /**
     * 
     *
     * validate an access token
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void validateAccessTokenTest() throws Exception {
        String subjectAccessToken = null;
        AccessTokenResp response = api.validateAccessToken(subjectAccessToken);

        // TODO: test validations
    }
}
