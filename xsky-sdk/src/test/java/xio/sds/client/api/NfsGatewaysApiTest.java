/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.NFSGatewayActionReq;
import xio.sds.client.model.NFSGatewayBucketMapResp;
import xio.sds.client.model.NFSGatewayBucketMapUpdateReq;
import xio.sds.client.model.NFSGatewayBucketMapsResp;
import xio.sds.client.model.NFSGatewayCreateReq;
import xio.sds.client.model.NFSGatewayResp;
import xio.sds.client.model.NFSGatewaySamplesResp;
import xio.sds.client.model.NFSGatewayUpdateReq;
import xio.sds.client.model.NFSGatewaysResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for NfsGatewaysApi
 */
@Ignore
public class NfsGatewaysApiTest {

    private final NfsGatewaysApi api = new NfsGatewaysApi();

    /**
     * 
     *
     * create nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createNFSGatewayTest() throws Exception {
        NFSGatewayCreateReq body = null;
        String clusterId = null;
        NFSGatewayResp response = api.createNFSGateway(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * add bucket to nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createNFSGatewayBucketMapTest() throws Exception {
        Long gatewayId = null;
        Long bucketId = null;
        String clusterId = null;
        NFSGatewayBucketMapResp response = api.createNFSGatewayBucketMap(gatewayId, bucketId, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteNFSGatewayTest() throws Exception {
        Long gatewayId = null;
        Boolean force = null;
        NFSGatewayResp response = api.deleteNFSGateway(gatewayId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove bucket from nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteNFSGatewayBucketMapTest() throws Exception {
        Long gatewayId = null;
        Long bucketId = null;
        Boolean force = null;
        NFSGatewayBucketMapResp response = api.deleteNFSGatewayBucketMap(gatewayId, bucketId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * start/stop nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void doNFSGatewayTest() throws Exception {
        NFSGatewayActionReq body = null;
        Long gatewayId = null;
        Boolean force = null;
        NFSGatewayResp response = api.doNFSGateway(body, gatewayId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * show nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getNFSGatewayTest() throws Exception {
        Long gatewayId = null;
        NFSGatewayResp response = api.getNFSGateway(gatewayId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get nfs gateway bucket map
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getNFSGatewayBucketMapTest() throws Exception {
        Long gatewayId = null;
        Long bucketId = null;
        NFSGatewayBucketMapResp response = api.getNFSGatewayBucketMap(gatewayId, bucketId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get nfs gateway&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getNFSGatewaySamplesTest() throws Exception {
        Long gatewayId = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        NFSGatewaySamplesResp response = api.getNFSGatewaySamples(gatewayId, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * List nfs gateway bucket maps
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listNFSGatewayBucketMapsTest() throws Exception {
        Long gatewayId = null;
        Long limit = null;
        Long offset = null;
        String clusterId = null;
        NFSGatewayBucketMapsResp response = api.listNFSGatewayBucketMaps(gatewayId, limit, offset, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List all nfs gateways
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listNFSGatewaysTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String q = null;
        String sort = null;
        Long ospZoneId = null;
        String clusterId = null;
        NFSGatewaysResp response = api.listNFSGateways(limit, offset, q, sort, ospZoneId, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update nfs gateway
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateNFSGatewayTest() throws Exception {
        NFSGatewayUpdateReq body = null;
        Long gatewayId = null;
        NFSGatewayResp response = api.updateNFSGateway(body, gatewayId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update nfs gateway bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateNFSGatewayBucketMapTest() throws Exception {
        NFSGatewayBucketMapUpdateReq body = null;
        Long gatewayId = null;
        Long bucketId = null;
        Boolean force = null;
        NFSGatewayBucketMapResp response = api.updateNFSGatewayBucketMap(body, gatewayId, bucketId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * update osp nfs gateway export config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateOspExportConfigTest() throws Exception {
        Long gatewayId = null;
        NFSGatewayResp response = api.updateOspExportConfig(gatewayId);

        // TODO: test validations
    }
}
