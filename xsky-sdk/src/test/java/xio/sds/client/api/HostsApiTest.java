/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DeleteHostsGatewayLbGroupOpReq;
import xio.sds.client.model.HostCreateReq;
import xio.sds.client.model.HostResp;
import xio.sds.client.model.HostSamplesResp;
import xio.sds.client.model.HostUpdateReq;
import xio.sds.client.model.HostsResp;
import xio.sds.client.model.OpHostsZoneReq;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for HostsApi
 */
@Ignore
public class HostsApiTest {

    private final HostsApi api = new HostsApi();

    /**
     * 
     *
     * check env and install packages
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createHostTest() throws Exception {
        HostCreateReq body = null;
        String clusterId = null;
        HostResp response = api.createHost(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete host
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteHostTest() throws Exception {
        Long hostId = null;
        Boolean force = null;
        HostResp response = api.deleteHost(hostId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete hosts gateway load balancer group from osp zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteHostsGatewayLbGroupTest() throws Exception {
        DeleteHostsGatewayLbGroupOpReq body = null;
        api.deleteHostsGatewayLbGroup(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * get a host info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getHostTest() throws Exception {
        Long hostId = null;
        HostResp response = api.getHost(hostId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get a host&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getHostSamplesTest() throws Exception {
        Long hostId = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        HostSamplesResp response = api.getHostSamples(hostId, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * check host deletable
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void hostDeletableTest() throws Exception {
        Long hostId = null;
        HostResp response = api.hostDeletable(hostId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List hosts by fileter
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listHostsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long protectionDomainId = null;
        String clusterId = null;
        String ospClusterId = null;
        String hostname = null;
        String type = null;
        String role = null;
        Boolean fcAvailable = null;
        Boolean replicationGatewayAvailable = null;
        Long ospZoneId = null;
        Long datacenterIds = null;
        String usage = null;
        Boolean withS3Lb = null;
        String q = null;
        String sort = null;
        HostsResp response = api.listHosts(limit, offset, protectionDomainId, clusterId, ospClusterId, hostname, type, role, fcAvailable, replicationGatewayAvailable, ospZoneId, datacenterIds, usage, withS3Lb, q, sort);

        // TODO: test validations
    }
    /**
     * 
     *
     * Put host in maintanence mode
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void maintainHostTest() throws Exception {
        Long hostId = null;
        Boolean force = null;
        HostResp response = api.maintainHost(hostId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove hosts form osp zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeHostsFormOspZoneTest() throws Exception {
        OpHostsZoneReq body = null;
        api.removeHostsFormOspZone(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set hosts to osp zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setHostsToOspZoneTest() throws Exception {
        OpHostsZoneReq body = null;
        api.setHostsToOspZone(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Put host out of maintanence mode
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unmaintainHostTest() throws Exception {
        Long hostId = null;
        HostResp response = api.unmaintainHost(hostId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update host info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateHostTest() throws Exception {
        HostUpdateReq body = null;
        Long hostId = null;
        HostResp response = api.updateHost(body, hostId);

        // TODO: test validations
    }
}
