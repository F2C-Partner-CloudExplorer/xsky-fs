/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DfsFTPShareAddACLsReq;
import xio.sds.client.model.DfsFTPShareCreateReq;
import xio.sds.client.model.DfsFTPShareRemoveACLsReq;
import xio.sds.client.model.DfsFTPShareResp;
import xio.sds.client.model.DfsFTPShareUpdateACLsReq;
import xio.sds.client.model.DfsFTPShareUpdateReq;
import xio.sds.client.model.DfsFTPSharesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DfsFtpSharesApi
 */
@Ignore
public class DfsFtpSharesApiTest {

    private final DfsFtpSharesApi api = new DfsFtpSharesApi();

    /**
     * 
     *
     * Add dfs ftp share acls
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addDfsFTPShareACLsTest() throws Exception {
        DfsFTPShareAddACLsReq body = null;
        Long dfsFtpShareId = null;
        DfsFTPShareResp response = api.addDfsFTPShareACLs(body, dfsFtpShareId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create dfs ftp share
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createDfsFTPShareTest() throws Exception {
        DfsFTPShareCreateReq body = null;
        Boolean allowPathCreate = null;
        DfsFTPShareResp response = api.createDfsFTPShare(body, allowPathCreate);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete dfs ftp share
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteDfsFTPShareTest() throws Exception {
        Long dfsFtpShareId = null;
        Boolean force = null;
        Boolean withDirectory = null;
        DfsFTPShareResp response = api.deleteDfsFTPShare(dfsFtpShareId, force, withDirectory);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get dfs ftp share
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDfsFTPShareTest() throws Exception {
        Long dfsFtpShareId = null;
        DfsFTPShareResp response = api.getDfsFTPShare(dfsFtpShareId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List dfs ftp shares
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listDfsFTPSharesTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String clusterId = null;
        Long dfsRootfsId = null;
        String path = null;
        Long dfsGatewayGroupId = null;
        String q = null;
        String sort = null;
        DfsFTPSharesResp response = api.listDfsFTPShares(limit, offset, clusterId, dfsRootfsId, path, dfsGatewayGroupId, q, sort);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove dfs ftp share acls
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeDfsFTPShareACLsTest() throws Exception {
        DfsFTPShareRemoveACLsReq body = null;
        Long dfsFtpShareId = null;
        DfsFTPShareResp response = api.removeDfsFTPShareACLs(body, dfsFtpShareId);

        // TODO: test validations
    }
    /**
     * 
     *
     * update dfs ftp shares
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDfsFTPShareTest() throws Exception {
        DfsFTPShareUpdateReq body = null;
        Long dfsFtpShareId = null;
        DfsFTPShareResp response = api.updateDfsFTPShare(body, dfsFtpShareId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update dfs ftp share acls
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDfsFTPShareACLsTest() throws Exception {
        DfsFTPShareUpdateACLsReq body = null;
        Long dfsFtpShareId = null;
        DfsFTPShareResp response = api.updateDfsFTPShareACLs(body, dfsFtpShareId);

        // TODO: test validations
    }
}
