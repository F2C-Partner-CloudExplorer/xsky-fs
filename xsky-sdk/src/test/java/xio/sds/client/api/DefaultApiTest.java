/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.OspAccessKeyCreateByUserNameReq;
import xio.sds.client.model.OspAccessKeyCreateReq;
import xio.sds.client.model.OspAccessKeyResp;
import xio.sds.client.model.OspAccessKeyUpdateSecretKeyReq;
import xio.sds.client.model.OspAccessKeysResp;
import xio.sds.client.model.OspAccessSecretKeyConfigReq;
import xio.sds.client.model.OspAccessSecretKeyConfigResp;
import xio.sds.client.model.OspAdminGatewayResp;
import xio.sds.client.model.OspAdminGatewaysResp;
import xio.sds.client.model.OspBucketCreateOriginRuleReq;
import xio.sds.client.model.OspBucketCreateRebuildRuleReq;
import xio.sds.client.model.OspBucketCreateReq;
import xio.sds.client.model.OspBucketDeleteSnapshotsReq;
import xio.sds.client.model.OspBucketFlowSamplesResp;
import xio.sds.client.model.OspBucketLifecycleProgressResp;
import xio.sds.client.model.OspBucketLoggingsResp;
import xio.sds.client.model.OspBucketNFSGatewayMapCreateReq;
import xio.sds.client.model.OspBucketNFSGatewayMapResp;
import xio.sds.client.model.OspBucketNFSGatewayMapUpdateReq;
import xio.sds.client.model.OspBucketNFSGatewayMapsResp;
import xio.sds.client.model.OspBucketOriginPullSamplesResp;
import xio.sds.client.model.OspBucketOriginRuleResp;
import xio.sds.client.model.OspBucketOriginRulesResp;
import xio.sds.client.model.OspBucketRebuildProgressResp;
import xio.sds.client.model.OspBucketRebuildRuleResp;
import xio.sds.client.model.OspBucketRebuildRulesResp;
import xio.sds.client.model.OspBucketReplicationResp;
import xio.sds.client.model.OspBucketReplicationRuleCreateReq;
import xio.sds.client.model.OspBucketReplicationSamplesResp;
import xio.sds.client.model.OspBucketReplicationStatsResp;
import xio.sds.client.model.OspBucketResp;
import xio.sds.client.model.OspBucketSamplesResp;
import xio.sds.client.model.OspBucketSetACLReq;
import xio.sds.client.model.OspBucketSetCompactReq;
import xio.sds.client.model.OspBucketSetCompressionReq;
import xio.sds.client.model.OspBucketSetCorsReq;
import xio.sds.client.model.OspBucketSetDefaultReadModeReq;
import xio.sds.client.model.OspBucketSetDescriptionReq;
import xio.sds.client.model.OspBucketSetEncryptionDefaultReq;
import xio.sds.client.model.OspBucketSetLifecycleRulesReq;
import xio.sds.client.model.OspBucketSetLifecycleRunningConfReq;
import xio.sds.client.model.OspBucketSetLockReq;
import xio.sds.client.model.OspBucketSetLoggingReq;
import xio.sds.client.model.OspBucketSetObjectDeleteModeReq;
import xio.sds.client.model.OspBucketSetObjectInheritACLReq;
import xio.sds.client.model.OspBucketSetObjectRecycleReq;
import xio.sds.client.model.OspBucketSetOwnerReq;
import xio.sds.client.model.OspBucketSetPolicyReq;
import xio.sds.client.model.OspBucketSetQosReq;
import xio.sds.client.model.OspBucketSetQuotaReq;
import xio.sds.client.model.OspBucketSetQuotaRuleReq;
import xio.sds.client.model.OspBucketSetReadonlyZonesReq;
import xio.sds.client.model.OspBucketSetRebuildZoneReq;
import xio.sds.client.model.OspBucketSetReplicationStatusReq;
import xio.sds.client.model.OspBucketSetReplicationZoneReq;
import xio.sds.client.model.OspBucketSetSnapshotLimitReq;
import xio.sds.client.model.OspBucketSetStorageClassRuleReq;
import xio.sds.client.model.OspBucketSetSyncStatusReq;
import xio.sds.client.model.OspBucketSetTagsReq;
import xio.sds.client.model.OspBucketSetTierAccessModeReq;
import xio.sds.client.model.OspBucketSetTierWormReq;
import xio.sds.client.model.OspBucketSetVersioningReq;
import xio.sds.client.model.OspBucketSnapshotCreateReq;
import xio.sds.client.model.OspBucketSnapshotSetReq;
import xio.sds.client.model.OspBucketSyncReplicationGroupCreateReq;
import xio.sds.client.model.OspBucketSyncReplicationGroupResp;
import xio.sds.client.model.OspBucketSyncReplicationGroupUpdateReq;
import xio.sds.client.model.OspBucketSyncReplicationGroupsResp;
import xio.sds.client.model.OspBucketSyncRuleCreateReq;
import xio.sds.client.model.OspBucketSyncRuleResp;
import xio.sds.client.model.OspBucketSyncRuleUpdateReq;
import xio.sds.client.model.OspBucketSyncRulesResp;
import xio.sds.client.model.OspBucketSyncSamplesResp;
import xio.sds.client.model.OspBucketTagsResp;
import xio.sds.client.model.OspBucketUpdateOriginRuleReq;
import xio.sds.client.model.OspBucketUpdateReplicationRuleReq;
import xio.sds.client.model.OspBucketsResp;
import xio.sds.client.model.OspClusterOutsideReq;
import xio.sds.client.model.OspClusterResp;
import xio.sds.client.model.OspClusterUpdateReq;
import xio.sds.client.model.OspClustersResp;
import xio.sds.client.model.OspCompactTakeOverReq;
import xio.sds.client.model.OspDataBackendCreateReq;
import xio.sds.client.model.OspDataBackendListTargetsReq;
import xio.sds.client.model.OspDataBackendListTargetsResp;
import xio.sds.client.model.OspDataBackendResp;
import xio.sds.client.model.OspDataBackendSamplesResp;
import xio.sds.client.model.OspDataBackendStorageClassUsagesResp;
import xio.sds.client.model.OspDataBackendUniqueCheckReq;
import xio.sds.client.model.OspDataBackendUpdateReq;
import xio.sds.client.model.OspDataBackendValidatorCreateReq;
import xio.sds.client.model.OspDataBackendValidatorResp;
import xio.sds.client.model.OspDataBackendZoneRelationsResp;
import xio.sds.client.model.OspDataBackendsResp;
import xio.sds.client.model.OspDisableStorageClassReq;
import xio.sds.client.model.OspEnableStorageClassReq;
import xio.sds.client.model.OspEventTargetReq;
import xio.sds.client.model.OspEventTargetResp;
import xio.sds.client.model.OspEventTargetsResp;
import xio.sds.client.model.OspGatewayStatsResp;
import xio.sds.client.model.OspGlobalConfResp;
import xio.sds.client.model.OspObjectGatewayResp;
import xio.sds.client.model.OspObjectGatewaysResp;
import xio.sds.client.model.OspOverviewResp;
import xio.sds.client.model.OspOverviewSamplesResp;
import xio.sds.client.model.OspRecoveryBucketReq;
import xio.sds.client.model.OspRoleCreateReq;
import xio.sds.client.model.OspRoleResp;
import xio.sds.client.model.OspRoleSetTrustPolicyReq;
import xio.sds.client.model.OspSetBalanceModeReq;
import xio.sds.client.model.OspSnapshotsResp;
import xio.sds.client.model.OspStoragePoliciesResp;
import xio.sds.client.model.OspStoragePolicyCreateReq;
import xio.sds.client.model.OspStoragePolicyResp;
import xio.sds.client.model.OspStoragePolicySetCompactReq;
import xio.sds.client.model.OspStoragePolicySetCompressReq;
import xio.sds.client.model.OspStoragePolicySetCryptoReq;
import xio.sds.client.model.OspStoragePolicySetDataSCReq;
import xio.sds.client.model.OspStoragePolicySetDedupReq;
import xio.sds.client.model.OspStoragePolicySetDefaultReq;
import xio.sds.client.model.OspStoragePolicySetDescriptionReq;
import xio.sds.client.model.OspStoragePolicySetExternalSCReq;
import xio.sds.client.model.OspStoragePolicySetLifecycleZone;
import xio.sds.client.model.OspStoragePolicySetMultiProtocolReq;
import xio.sds.client.model.OspStoragePolicySetRebuildZone;
import xio.sds.client.model.OspStoragePolicySetReplicationZone;
import xio.sds.client.model.OspStoragePolicySetSecondCompactRatioReq;
import xio.sds.client.model.OspUpdateBucketReq;
import xio.sds.client.model.OspUpdateGlobalConfReq;
import xio.sds.client.model.OspUserCreateReq;
import xio.sds.client.model.OspUserFlowSamplesResp;
import xio.sds.client.model.OspUserOriginPullSamplesResp;
import xio.sds.client.model.OspUserReplicationSamplesResp;
import xio.sds.client.model.OspUserResp;
import xio.sds.client.model.OspUserSamplesResp;
import xio.sds.client.model.OspUserSetDescriptionReq;
import xio.sds.client.model.OspUserSetDetailReq;
import xio.sds.client.model.OspUserSetEmailReq;
import xio.sds.client.model.OspUserSetNameReq;
import xio.sds.client.model.OspUserSetOpMaskReq;
import xio.sds.client.model.OspUserSetPolicyReq;
import xio.sds.client.model.OspUserSetPropertiesReq;
import xio.sds.client.model.OspUserSetQosReq;
import xio.sds.client.model.OspUserSetQuotaReq;
import xio.sds.client.model.OspUserSetSelectStoragePoliciesReq;
import xio.sds.client.model.OspUserSetSuspendedReq;
import xio.sds.client.model.OspUserSyncSamplesResp;
import xio.sds.client.model.OspUsersKeysResp;
import xio.sds.client.model.OspUsersResp;
import xio.sds.client.model.OspZoneAddDataBackendsReq;
import xio.sds.client.model.OspZoneCreateReq;
import xio.sds.client.model.OspZoneGroupCreateReq;
import xio.sds.client.model.OspZoneGroupResp;
import xio.sds.client.model.OspZoneGroupsResp;
import xio.sds.client.model.OspZoneHostsOpReq;
import xio.sds.client.model.OspZonePairSamplesResp;
import xio.sds.client.model.OspZonePairsResp;
import xio.sds.client.model.OspZoneRemoveDataBackendsReq;
import xio.sds.client.model.OspZoneResp;
import xio.sds.client.model.OspZoneSamplesResp;
import xio.sds.client.model.OspZoneSetNameReq;
import xio.sds.client.model.OspZoneSetNameResp;
import xio.sds.client.model.OspZonesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * 
     *
     * Set access key and secret key config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospAccessSecretKeyConfigRespTest() throws Exception {
        OspAccessSecretKeyConfigReq body = null;
        OspAccessSecretKeyConfigResp response = api.ospAccessSecretKeyConfigResp(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * add dateBackends to a zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospAddDataBackendsToZoneTest() throws Exception {
        OspZoneAddDataBackendsReq body = null;
        Long id = null;
        OspZoneResp response = api.ospAddDataBackendsToZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * add hosts into a zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospAddHostsIntoZoneTest() throws Exception {
        OspZoneHostsOpReq body = null;
        Long id = null;
        OspZoneResp response = api.ospAddHostsIntoZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Check a data backend exists
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCheckDataBackendUniqueTest() throws Exception {
        OspDataBackendUniqueCheckReq body = null;
        api.ospCheckDataBackendUnique(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * clean up all recycle buckets
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCleanRecycleBucketsTest() throws Exception {
        api.ospCleanRecycleBuckets();

        // TODO: test validations
    }
    /**
     * 
     *
     * compact takeover command
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCompactTakeoverTest() throws Exception {
        OspCompactTakeOverReq body = null;
        api.ospCompactTakeover(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create access key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateAccessKeyTest() throws Exception {
        OspAccessKeyCreateReq body = null;
        OspAccessKeyResp response = api.ospCreateAccessKey(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create access key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateAccessKeyByUserNameTest() throws Exception {
        OspAccessKeyCreateByUserNameReq body = null;
        OspAccessKeyResp response = api.ospCreateAccessKeyByUserName(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketTest() throws Exception {
        OspBucketCreateReq body = null;
        OspBucketResp response = api.ospCreateBucket(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a bucket nfs gateway map
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketNFSGatewayMapTest() throws Exception {
        OspBucketNFSGatewayMapCreateReq body = null;
        Long id = null;
        OspBucketNFSGatewayMapResp response = api.ospCreateBucketNFSGatewayMap(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create bucket origin rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketOriginRuleTest() throws Exception {
        OspBucketCreateOriginRuleReq body = null;
        Long id = null;
        OspBucketOriginRuleResp response = api.ospCreateBucketOriginRule(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create bucket rebuild rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketRebuildRuleTest() throws Exception {
        OspBucketCreateRebuildRuleReq body = null;
        Long id = null;
        OspBucketRebuildRuleResp response = api.ospCreateBucketRebuildRule(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create bucket replication rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketReplicationRuleTest() throws Exception {
        OspBucketReplicationRuleCreateReq body = null;
        Long id = null;
        OspBucketReplicationResp response = api.ospCreateBucketReplicationRule(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates bucket snapshot
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketSnapshotTest() throws Exception {
        OspBucketSnapshotCreateReq body = null;
        Long id = null;
        OspSnapshotsResp response = api.ospCreateBucketSnapshot(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a bucket sync replication group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketSyncReplicationGroupTest() throws Exception {
        OspBucketSyncReplicationGroupCreateReq body = null;
        Long id = null;
        OspBucketSyncReplicationGroupResp response = api.ospCreateBucketSyncReplicationGroup(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a bucket sync rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateBucketSyncRuleTest() throws Exception {
        OspBucketSyncRuleCreateReq body = null;
        Long id = null;
        OspBucketSyncRuleResp response = api.ospCreateBucketSyncRule(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create outside cluster
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateClusterWithOutsideTest() throws Exception {
        OspClusterOutsideReq body = null;
        OspClusterResp response = api.ospCreateClusterWithOutside(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a data backend
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateDataBackendTest() throws Exception {
        OspDataBackendCreateReq body = null;
        OspDataBackendResp response = api.ospCreateDataBackend(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create data backend validator
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateDataBackendValidatorTest() throws Exception {
        OspDataBackendValidatorCreateReq body = null;
        String clusterId = null;
        OspDataBackendValidatorResp response = api.ospCreateDataBackendValidator(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * create event target
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateEventTargetTest() throws Exception {
        OspEventTargetReq body = null;
        OspEventTargetResp response = api.ospCreateEventTarget(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * creates role
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateRoleTest() throws Exception {
        OspRoleCreateReq body = null;
        OspRoleResp response = api.ospCreateRole(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates Storage Policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateStoragePolicyTest() throws Exception {
        OspStoragePolicyCreateReq body = null;
        OspStoragePolicyResp response = api.ospCreateStoragePolicy(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateUserTest() throws Exception {
        OspUserCreateReq body = null;
        OspUserResp response = api.ospCreateUser(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateZoneTest() throws Exception {
        OspZoneCreateReq body = null;
        OspZoneResp response = api.ospCreateZone(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Creates a zone group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospCreateZoneGroupTest() throws Exception {
        OspZoneGroupCreateReq body = null;
        OspZoneGroupResp response = api.ospCreateZoneGroup(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete an access key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteAccessKeyTest() throws Exception {
        String id = null;
        api.ospDeleteAccessKey(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospDeleteBucket(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketByNameTest() throws Exception {
        String name = null;
        OspBucketResp response = api.ospDeleteBucketByName(name);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a bucket nfs gateway map
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketNFSGatewayMapTest() throws Exception {
        Long id = null;
        Long mapId = null;
        OspBucketNFSGatewayMapResp response = api.ospDeleteBucketNFSGatewayMap(id, mapId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes bucket nfs gateway maps by nfs gateway (internal api)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketNFSGatewayMapsTest() throws Exception {
        Long region = null;
        Long zoneId = null;
        Long nfsGatewayId = null;
        api.ospDeleteBucketNFSGatewayMaps(region, zoneId, nfsGatewayId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete bucket origin rule status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketOriginRuleTest() throws Exception {
        Long id = null;
        String ruleId = null;
        api.ospDeleteBucketOriginRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete bucket rebuild rule status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketRebuildRuleTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        api.ospDeleteBucketRebuildRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete bucket replication rule status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketReplicationRuleTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        api.ospDeleteBucketReplicationRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes bucket snapshots
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketSnapshotsTest() throws Exception {
        OspBucketDeleteSnapshotsReq body = null;
        Long id = null;
        OspSnapshotsResp response = api.ospDeleteBucketSnapshots(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a bucket sync replication group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketSyncReplicationGroupTest() throws Exception {
        Long id = null;
        Long groupId = null;
        api.ospDeleteBucketSyncReplicationGroup(id, groupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a bucket sync rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteBucketSyncRuleTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        api.ospDeleteBucketSyncRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a data backend
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteDataBackendTest() throws Exception {
        Long id = null;
        OspDataBackendResp response = api.ospDeleteDataBackend(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete event target
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteEventTargetTest() throws Exception {
        Long id = null;
        api.ospDeleteEventTarget(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a recycle bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteRecycleBucketTest() throws Exception {
        Long bucketId = null;
        OspBucketsResp response = api.ospDeleteRecycleBucket(bucketId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a role
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteRoleTest() throws Exception {
        Long id = null;
        OspRoleResp response = api.ospDeleteRole(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a storage class
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteStorageClassTest() throws Exception {
        Long id = null;
        OspStoragePolicyResp response = api.ospDeleteStorageClass(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a storage policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteStoragePolicyTest() throws Exception {
        Long id = null;
        OspStoragePolicyResp response = api.ospDeleteStoragePolicy(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteUserTest() throws Exception {
        Long id = null;
        OspUsersResp response = api.ospDeleteUser(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a user
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteUserByNameTest() throws Exception {
        String name = null;
        OspUsersResp response = api.ospDeleteUserByName(name);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteZoneTest() throws Exception {
        Long id = null;
        OspZoneResp response = api.ospDeleteZone(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Deletes a zone group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDeleteZoneGroupTest() throws Exception {
        Long id = null;
        api.ospDeleteZoneGroup(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage class status config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospDisableStorageClassTest() throws Exception {
        OspDisableStorageClassReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospDisableStorageClass(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage class status config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospEnableStorageClassTest() throws Exception {
        OspEnableStorageClassReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospEnableStorageClass(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns access key info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetAccessKeyTest() throws Exception {
        String id = null;
        OspAccessKeyResp response = api.ospGetAccessKey(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns access and secret key config info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetAccessSecretKeyConfigTest() throws Exception {
        OspAccessSecretKeyConfigResp response = api.ospGetAccessSecretKeyConfig();

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns admin gateway info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetAdminGatewayTest() throws Exception {
        Long id = null;
        OspAdminGatewayResp response = api.ospGetAdminGateway(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospGetBucket(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket flow&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketFlowSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspBucketFlowSamplesResp response = api.ospGetBucketFlowSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket lifecycle progress info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketLifecycleProgressTest() throws Exception {
        Long id = null;
        OspBucketLifecycleProgressResp response = api.ospGetBucketLifecycleProgress(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket nfs gateway map info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketNFSGatewayMapTest() throws Exception {
        Long id = null;
        Long mapId = null;
        OspBucketNFSGatewayMapResp response = api.ospGetBucketNFSGatewayMap(id, mapId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket origin pull samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketOriginPullSamplesTest() throws Exception {
        Long id = null;
        String originMode = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspBucketOriginPullSamplesResp response = api.ospGetBucketOriginPullSamples(id, originMode, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket origin rule info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketOriginRuleTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        OspBucketOriginRuleResp response = api.ospGetBucketOriginRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket rebuild progress
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketRebuildProgressTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        OspBucketRebuildProgressResp response = api.ospGetBucketRebuildProgress(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket rebuild rule info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketRebuildRuleTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        OspBucketRebuildRuleResp response = api.ospGetBucketRebuildRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket replication&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketReplicationSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspBucketReplicationSamplesResp response = api.ospGetBucketReplicationSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket replication stats
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketReplicationStatsTest() throws Exception {
        Long id = null;
        OspBucketReplicationStatsResp response = api.ospGetBucketReplicationStats(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspBucketSamplesResp response = api.ospGetBucketSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket lifecycle sync info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketSyncProgressTest() throws Exception {
        Long id = null;
        OspBucketLifecycleProgressResp response = api.ospGetBucketSyncProgress(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket sync replication group info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketSyncReplicationGroupTest() throws Exception {
        Long id = null;
        Long groupId = null;
        OspBucketSyncReplicationGroupResp response = api.ospGetBucketSyncReplicationGroup(id, groupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket sync rule info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketSyncRuleTest() throws Exception {
        Long id = null;
        Long ruleId = null;
        OspBucketSyncRuleResp response = api.ospGetBucketSyncRule(id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket sync&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketSyncSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspBucketSyncSamplesResp response = api.ospGetBucketSyncSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns a bucket&#x27;s tagging setting
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetBucketTaggingTest() throws Exception {
        Long id = null;
        OspBucketTagsResp response = api.ospGetBucketTagging(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns cluster info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetClusterTest() throws Exception {
        String uuid = null;
        OspClustersResp response = api.ospGetCluster(uuid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns data backend info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetDataBackendTest() throws Exception {
        Long id = null;
        OspDataBackendResp response = api.ospGetDataBackend(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get data backend&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetDataBackendSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspDataBackendSamplesResp response = api.ospGetDataBackendSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get data backend&#x27;s storage class level usages
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetDataBackendStorageClassUsagesTest() throws Exception {
        Long id = null;
        Long targetId = null;
        Long policyId = null;
        Long zoneId = null;
        OspDataBackendStorageClassUsagesResp response = api.ospGetDataBackendStorageClassUsages(id, targetId, policyId, zoneId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns data backend strategy status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetDataBackendStrategyInfoTest() throws Exception {
        Long id = null;
        OspDataBackendResp response = api.ospGetDataBackendStrategyInfo(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get a data backend validator
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetDataBackendValidatorTest() throws Exception {
        Long id = null;
        OspDataBackendValidatorResp response = api.ospGetDataBackendValidator(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * get event target
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetEventTargetTest() throws Exception {
        Long id = null;
        OspEventTargetResp response = api.ospGetEventTarget(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns internal gateway stats key info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetGatewayStatsTest() throws Exception {
        OspGatewayStatsResp response = api.ospGetGatewayStats();

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns global conf info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetGlobalConfTest() throws Exception {
        OspGlobalConfResp response = api.ospGetGlobalConf();

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns object gateway info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetObjectGatewayTest() throws Exception {
        Long id = null;
        OspObjectGatewayResp response = api.ospGetObjectGateway(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns arthas cluster overview info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetOverviewTest() throws Exception {
        OspOverviewResp response = api.ospGetOverview();

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns overview&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetOverviewSamplesTest() throws Exception {
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspOverviewSamplesResp response = api.ospGetOverviewSamples(durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns recycle bucket info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetRecycleBucketTest() throws Exception {
        Long bucketId = null;
        OspBucketResp response = api.ospGetRecycleBucket(bucketId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns role info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetRoleTest() throws Exception {
        Long id = null;
        OspRoleResp response = api.ospGetRole(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns storage policy info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetStoragePolicyTest() throws Exception {
        Long id = null;
        OspStoragePolicyResp response = api.ospGetStoragePolicy(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns user info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetUserTest() throws Exception {
        Long id = null;
        OspUserResp response = api.ospGetUser(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns user flow&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetUserFlowSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspUserFlowSamplesResp response = api.ospGetUserFlowSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns user origin pull samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetUserOriginPullSamplesTest() throws Exception {
        Long id = null;
        String originMode = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspUserOriginPullSamplesResp response = api.ospGetUserOriginPullSamples(id, originMode, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns user replication&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetUserReplicationSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspUserReplicationSamplesResp response = api.ospGetUserReplicationSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns user&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetUserSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspUserSamplesResp response = api.ospGetUserSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns user sync&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetUserSyncSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspUserSyncSamplesResp response = api.ospGetUserSyncSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns zone info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetZoneTest() throws Exception {
        Long id = null;
        OspZoneResp response = api.ospGetZone(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns zone group info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetZoneGroupTest() throws Exception {
        Long id = null;
        OspZoneGroupResp response = api.ospGetZoneGroup(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns zonePair&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetZonePairSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspZonePairSamplesResp response = api.ospGetZonePairSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get zone samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospGetZoneSamplesTest() throws Exception {
        Long id = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OspZoneSamplesResp response = api.ospGetZoneSamples(id, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * List access keys
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListAccessKeysTest() throws Exception {
        Long userId = null;
        OspAccessKeysResp response = api.ospListAccessKeys(userId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns admin gateways info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListAdminGatewaysTest() throws Exception {
        OspAdminGatewaysResp response = api.ospListAdminGateways();

        // TODO: test validations
    }
    /**
     * 
     *
     * List bucket loggings
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketLoggingsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String sourceBucketName = null;
        String targetBucketName = null;
        OspBucketLoggingsResp response = api.ospListBucketLoggings(limit, offset, sourceBucketName, targetBucketName);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket nfs gateway maps info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketNFSGatewayMapsTest() throws Exception {
        Long bucketName = null;
        Long region = null;
        Long zoneId = null;
        Long nfsGatewayId = null;
        OspBucketNFSGatewayMapsResp response = api.ospListBucketNFSGatewayMaps(bucketName, region, zoneId, nfsGatewayId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists bucket origin rules info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketOriginRulesTest() throws Exception {
        Long id = null;
        OspBucketOriginRulesResp response = api.ospListBucketOriginRules(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists bucket rebuild rules info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketRebuildRulesTest() throws Exception {
        Long id = null;
        OspBucketRebuildRulesResp response = api.ospListBucketRebuildRules(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists bucket replication rules info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketReplicationRulesTest() throws Exception {
        Long id = null;
        OspBucketReplicationResp response = api.ospListBucketReplicationRules(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists bucket snapshots info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketSnapshotTest() throws Exception {
        Long id = null;
        String type = null;
        OspSnapshotsResp response = api.ospListBucketSnapshot(id, type);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket sync replication groups info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketSyncReplicationGroupsTest() throws Exception {
        Long id = null;
        OspBucketSyncReplicationGroupsResp response = api.ospListBucketSyncReplicationGroups(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns bucket sync rules info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketSyncRulesTest() throws Exception {
        Long id = null;
        OspBucketSyncRulesResp response = api.ospListBucketSyncRules(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns buckets info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListBucketsTest() throws Exception {
        String name = null;
        Long userId = null;
        Long policyId = null;
        Boolean logDeliveryEnabled = null;
        Boolean containRecycle = null;
        String queryMode = null;
        Long ids = null;
        OspBucketsResp response = api.ospListBuckets(name, userId, policyId, logDeliveryEnabled, containRecycle, queryMode, ids);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns clusters info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListClustersTest() throws Exception {
        OspClusterResp response = api.ospListClusters();

        // TODO: test validations
    }
    /**
     * 
     *
     * List data backend all targets
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListDataBackendTargetsTest() throws Exception {
        OspDataBackendListTargetsReq body = null;
        Long id = null;
        OspDataBackendListTargetsResp response = api.ospListDataBackendTargets(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists data backend zone relations
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListDataBackendZoneRelationsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long zoneId = null;
        Long dataBackendId = null;
        String platformType = null;
        String platform = null;
        OspDataBackendZoneRelationsResp response = api.ospListDataBackendZoneRelations(limit, offset, zoneId, dataBackendId, platformType, platform);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns data backends info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListDataBackendsTest() throws Exception {
        String type = null;
        String platform = null;
        String name = null;
        String status = null;
        OspDataBackendsResp response = api.ospListDataBackends(type, platform, name, status);

        // TODO: test validations
    }
    /**
     * 
     *
     * list event targets
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListEventTargetsTest() throws Exception {
        String marker = null;
        Long maxKeys = null;
        OspEventTargetsResp response = api.ospListEventTargets(marker, maxKeys);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns object gateways info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListObjectGatewaysTest() throws Exception {
        OspObjectGatewaysResp response = api.ospListObjectGateways();

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists all bucket origin rules info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListOriginRulesTest() throws Exception {
        Long bucketId = null;
        Long ngosDataBackendId = null;
        OspBucketOriginRulesResp response = api.ospListOriginRules(bucketId, ngosDataBackendId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns recycle buckets info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListRecycleBucketsTest() throws Exception {
        OspBucketsResp response = api.ospListRecycleBuckets();

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns storage policies info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListStoragePoliciesTest() throws Exception {
        Long zoneId = null;
        Long dataBackendId = null;
        String name = null;
        OspStoragePoliciesResp response = api.ospListStoragePolicies(zoneId, dataBackendId, name);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns users info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListUserKeysTest() throws Exception {
        String name = null;
        Boolean admin = null;
        OspUsersKeysResp response = api.ospListUserKeys(name, admin);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns users info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListUsersTest() throws Exception {
        String name = null;
        Boolean admin = null;
        OspUsersResp response = api.ospListUsers(name, admin);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns zone groups info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListZoneGroupsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        OspZoneGroupsResp response = api.ospListZoneGroups(limit, offset);

        // TODO: test validations
    }
    /**
     * 
     *
     * Lists zone pairs
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListZonePairsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long sourceZoneId = null;
        Long destinationZoneId = null;
        OspZonePairsResp response = api.ospListZonePairs(limit, offset, sourceZoneId, destinationZoneId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns zones info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospListZonesTest() throws Exception {
        Long policyId = null;
        String name = null;
        OspZonesResp response = api.ospListZones(policyId, name);

        // TODO: test validations
    }
    /**
     * 
     *
     * recovery recycle bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospRecoveryRecycleBucketTest() throws Exception {
        OspRecoveryBucketReq body = null;
        Long bucketId = null;
        OspBucketResp response = api.ospRecoveryRecycleBucket(body, bucketId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Remove a bucket&#x27;s logging info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospRemoveBucketLoggingsTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospRemoveBucketLoggings(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove dateBackends from zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospRemoveDataBackendsFromZoneTest() throws Exception {
        OspZoneRemoveDataBackendsReq body = null;
        Long id = null;
        OspZoneResp response = api.ospRemoveDataBackendsFromZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * remove hosts from a zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospRemoveHostsFromZoneTest() throws Exception {
        OspZoneHostsOpReq body = null;
        Long id = null;
        OspZoneResp response = api.ospRemoveHostsFromZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s acl
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketACLTest() throws Exception {
        Long id = null;
        OspBucketSetACLReq body = null;
        OspBucketResp response = api.ospSetBucketACL(id, body);

        // TODO: test validations
    }
    /**
     * 
     *
     * set a bucket&#x27;s compact configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketCompactTest() throws Exception {
        OspBucketSetCompactReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketCompact(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s compression configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketCompressionTest() throws Exception {
        OspBucketSetCompressionReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketCompression(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s cors configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketCorsTest() throws Exception {
        OspBucketSetCorsReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketCors(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * set a bucket&#x27;s default read mode configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketDefaultReadModeTest() throws Exception {
        OspBucketSetDefaultReadModeReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketDefaultReadMode(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s description
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketDescriptionTest() throws Exception {
        OspBucketSetDescriptionReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketDescription(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s encryption default configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketEncryptionDefaultTest() throws Exception {
        OspBucketSetEncryptionDefaultReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketEncryptionDefault(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s lifecycle rules
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketLifecycleRulesTest() throws Exception {
        OspBucketSetLifecycleRulesReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketLifecycleRules(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s lifecycle running config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketLifecycleRunningConfTest() throws Exception {
        OspBucketSetLifecycleRunningConfReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketLifecycleRunningConf(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s lock configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketLockTest() throws Exception {
        OspBucketSetLockReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketLock(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s logging configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketLoggingTest() throws Exception {
        OspBucketSetLoggingReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketLogging(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * set a bucket&#x27;s object delete mode configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketObjectDeleteModeTest() throws Exception {
        OspBucketSetObjectDeleteModeReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketObjectDeleteMode(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s object inherit acl
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketObjectInheritACLTest() throws Exception {
        Long id = null;
        OspBucketSetObjectInheritACLReq body = null;
        OspBucketResp response = api.ospSetBucketObjectInheritACL(id, body);

        // TODO: test validations
    }
    /**
     * 
     *
     * set a bucket&#x27;s object recycle configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketObjectRecycleTest() throws Exception {
        OspBucketSetObjectRecycleReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketObjectRecycle(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s owner
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketOwnerTest() throws Exception {
        OspBucketSetOwnerReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketOwner(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s policy configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketPolicyTest() throws Exception {
        OspBucketSetPolicyReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketPolicy(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates bucket qos info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketQosTest() throws Exception {
        OspBucketSetQosReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketQos(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s quota configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketQuotaTest() throws Exception {
        OspBucketSetQuotaReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketQuota(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s quota rule configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketQuotaRuleTest() throws Exception {
        OspBucketSetQuotaRuleReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketQuotaRule(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * set a bucket&#x27;s readonly zones configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketReadonlyZonesTest() throws Exception {
        OspBucketSetReadonlyZonesReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketReadonlyZones(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set bucket rebuild zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketRebuildZoneTest() throws Exception {
        OspBucketSetRebuildZoneReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketRebuildZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set bucket replication rule status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketReplicationStatusTest() throws Exception {
        OspBucketSetReplicationStatusReq body = null;
        Long id = null;
        Long ruleId = null;
        OspBucketReplicationResp response = api.ospSetBucketReplicationStatus(body, id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set bucket replication zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketReplicationZoneTest() throws Exception {
        OspBucketSetReplicationZoneReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketReplicationZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * set bucket snapshot info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketSnapshotTest() throws Exception {
        OspBucketSnapshotSetReq body = null;
        Long id = null;
        Long snapshotId = null;
        OspSnapshotsResp response = api.ospSetBucketSnapshot(body, id, snapshotId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s snapshot limit configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketSnapshotLimitTest() throws Exception {
        OspBucketSetSnapshotLimitReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketSnapshotLimit(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set bucket storage class rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketStorageClassRuleTest() throws Exception {
        OspBucketSetStorageClassRuleReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketStorageClassRule(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s sync status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketSyncStatusTest() throws Exception {
        OspBucketSetSyncStatusReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketSyncStatus(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s tags
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketTagsTest() throws Exception {
        OspBucketSetTagsReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketTags(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s tier access mode configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketTierAccessModeTest() throws Exception {
        OspBucketSetTierAccessModeReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketTierAccessMode(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s tier worm configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketTierWormTest() throws Exception {
        OspBucketSetTierWormReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketTierWorm(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s versioning status
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetBucketVersioningTest() throws Exception {
        OspBucketSetVersioningReq body = null;
        Long id = null;
        OspBucketResp response = api.ospSetBucketVersioning(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage policy default config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetDefaultStoragePolicyTest() throws Exception {
        OspStoragePolicySetDefaultReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetDefaultStoragePolicy(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates policy Lifecycle zone config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetLifecycleZoneTest() throws Exception {
        OspStoragePolicySetLifecycleZone body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetLifecycleZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user op mask info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetOpMaskTest() throws Exception {
        OspUserSetOpMaskReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetOpMask(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates policy rebuild zone config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetRebuildZoneTest() throws Exception {
        OspStoragePolicySetRebuildZone body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetRebuildZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates policy replication zone config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetReplicationZoneTest() throws Exception {
        OspStoragePolicySetReplicationZone body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetReplicationZone(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates policy SecondCompactRatio config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetSecondCompactRatioTest() throws Exception {
        OspStoragePolicySetSecondCompactRatioReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetSecondCompactRatio(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set storage class balance mode
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStorageClassBalanceModeTest() throws Exception {
        OspSetBalanceModeReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStorageClassBalanceMode(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage policy compact and cache storage classes
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyCompactTest() throws Exception {
        OspStoragePolicySetCompactReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyCompact(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage policy compress config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyCompressTest() throws Exception {
        OspStoragePolicySetCompressReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyCompress(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage policy crypto config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyCryptoTest() throws Exception {
        OspStoragePolicySetCryptoReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyCrypto(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates data storage policy storage classes
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyDataSCTest() throws Exception {
        OspStoragePolicySetDataSCReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyDataSC(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage policy dedup config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyDedupTest() throws Exception {
        OspStoragePolicySetDedupReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyDedup(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set storage policy description
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyDescriptionTest() throws Exception {
        OspStoragePolicySetDescriptionReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyDescription(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates external storage policy storage classes
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyExternalSCTest() throws Exception {
        OspStoragePolicySetExternalSCReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyExternalSC(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates storage policy MultiProtocol config
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetStoragePolicyMultiProtocolTest() throws Exception {
        OspStoragePolicySetMultiProtocolReq body = null;
        Long id = null;
        OspStoragePolicyResp response = api.ospSetStoragePolicyMultiProtocol(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates role AssumeRolePolicyDocument info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetTrustPolicyTest() throws Exception {
        OspRoleSetTrustPolicyReq body = null;
        Long id = null;
        OspRoleResp response = api.ospSetTrustPolicy(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user description
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserDescriptionTest() throws Exception {
        OspUserSetDescriptionReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserDescription(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user description, email and other detail
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserDetailTest() throws Exception {
        OspUserSetDetailReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserDetail(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user email
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserEmailTest() throws Exception {
        OspUserSetEmailReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserEmail(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user name
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserNameTest() throws Exception {
        OspUserSetNameReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserName(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserPolicyTest() throws Exception {
        OspUserSetPolicyReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserPolicy(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user properties
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserPropertiesTest() throws Exception {
        OspUserSetPropertiesReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserProperties(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user qos info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserQosTest() throws Exception {
        OspUserSetQosReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserQos(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user quota settings
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserQuotaTest() throws Exception {
        OspUserSetQuotaReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserQuota(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user select storage policies settings
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserSelectStoragePoliciesTest() throws Exception {
        OspUserSetSelectStoragePoliciesReq body = null;
        Long id = null;
        OspUserResp response = api.ospSetUserSelectStoragePolicies(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user suspended info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetUserSuspendedTest() throws Exception {
        OspUserSetSuspendedReq body = null;
        OspUserResp response = api.ospSetUserSuspended(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * set zone name
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSetZoneNameTest() throws Exception {
        OspZoneSetNameReq body = null;
        Long id = null;
        OspZoneSetNameResp response = api.ospSetZoneName(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s logging configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospSuspendBucketLoggingTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospSuspendBucketLogging(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s logging configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUnsetBucketLoggingTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospUnsetBucketLogging(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s policy configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUnsetBucketPolicyTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospUnsetBucketPolicy(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket&#x27;s logging configuration
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUnsuspendBucketLoggingTest() throws Exception {
        Long id = null;
        OspBucketResp response = api.ospUnsuspendBucketLogging(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket nfs gateway map
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateBucketNFSGatewayMapTest() throws Exception {
        OspBucketNFSGatewayMapUpdateReq body = null;
        Long id = null;
        Long mapId = null;
        OspBucketNFSGatewayMapResp response = api.ospUpdateBucketNFSGatewayMap(body, id, mapId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update bucket origin rule conf
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateBucketOriginRuleTest() throws Exception {
        OspBucketUpdateOriginRuleReq body = null;
        Long id = null;
        String ruleId = null;
        OspBucketOriginRuleResp response = api.ospUpdateBucketOriginRule(body, id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update bucket replication rule conf
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateBucketReplicationRuleTest() throws Exception {
        OspBucketUpdateReplicationRuleReq body = null;
        Long id = null;
        Long ruleId = null;
        OspBucketReplicationResp response = api.ospUpdateBucketReplicationRule(body, id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket sync replication group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateBucketSyncReplicationGroupTest() throws Exception {
        OspBucketSyncReplicationGroupUpdateReq body = null;
        Long id = null;
        Long groupId = null;
        OspBucketSyncReplicationGroupResp response = api.ospUpdateBucketSyncReplicationGroup(body, id, groupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a bucket sync rule
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateBucketSyncRuleTest() throws Exception {
        OspBucketSyncRuleUpdateReq body = null;
        Long id = null;
        Long ruleId = null;
        OspBucketSyncRuleResp response = api.ospUpdateBucketSyncRule(body, id, ruleId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates cluster info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateClusterTest() throws Exception {
        String uuid = null;
        OspClusterUpdateReq body = null;
        OspClusterResp response = api.ospUpdateCluster(uuid, body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates a data backend
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateDataBackendTest() throws Exception {
        OspDataBackendUpdateReq body = null;
        Long id = null;
        OspDataBackendResp response = api.ospUpdateDataBackend(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * update event target
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateEventTargetTest() throws Exception {
        OspEventTargetReq body = null;
        Long id = null;
        OspEventTargetResp response = api.ospUpdateEventTarget(body, id);

        // TODO: test validations
    }
    /**
     * 
     *
     * update global conf
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateGlobalConfTest() throws Exception {
        OspUpdateGlobalConfReq body = null;
        OspGlobalConfResp response = api.ospUpdateGlobalConf(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates recycle bucket
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateRecycleBucketTest() throws Exception {
        OspUpdateBucketReq body = null;
        Long bucketId = null;
        OspBucketResp response = api.ospUpdateRecycleBucket(body, bucketId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Updates user key secret key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ospUpdateSecretKeyTest() throws Exception {
        OspAccessKeyUpdateSecretKeyReq body = null;
        String id = null;
        OspAccessKeyResp response = api.ospUpdateSecretKey(body, id);

        // TODO: test validations
    }
}
