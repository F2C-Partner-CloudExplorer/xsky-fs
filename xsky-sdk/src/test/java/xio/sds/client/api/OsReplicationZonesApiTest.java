/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.OSReplicationZoneCreateReq;
import xio.sds.client.model.OSReplicationZoneRecordResp;
import xio.sds.client.model.OSReplicationZoneRecordsResp;
import xio.sds.client.model.OSReplicationZoneResp;
import xio.sds.client.model.OSReplicationZoneSamplesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for OsReplicationZonesApi
 */
@Ignore
public class OsReplicationZonesApiTest {

    private final OsReplicationZonesApi api = new OsReplicationZonesApi();

    /**
     * 
     *
     * Create a os replication zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createOSReplicationZoneTest() throws Exception {
        OSReplicationZoneCreateReq body = null;
        String clusterId = null;
        OSReplicationZoneResp response = api.createOSReplicationZone(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete a os replication zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteOSReplicationZoneTest() throws Exception {
        String zoneUuid = null;
        OSReplicationZoneResp response = api.deleteOSReplicationZone(zoneUuid);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get a os replication zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOSReplicationZoneTest() throws Exception {
        String zoneUuid = null;
        OSReplicationZoneRecordResp response = api.getOSReplicationZone(zoneUuid);

        // TODO: test validations
    }
    /**
     * 
     *
     * get an os replication zone&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOSReplicationZoneSamplesTest() throws Exception {
        String zoneUuid = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        OSReplicationZoneSamplesResp response = api.getOSReplicationZoneSamples(zoneUuid, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * List os replication zones
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listOSReplicationZonesTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String marker = null;
        String replicationUuid = null;
        String osZoneUuid = null;
        String clusterId = null;
        OSReplicationZoneRecordsResp response = api.listOSReplicationZones(limit, offset, marker, replicationUuid, osZoneUuid, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update an os replication zone
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateOSReplicationZoneTest() throws Exception {
        String zoneUuid = null;
        OSReplicationZoneResp response = api.updateOSReplicationZone(zoneUuid);

        // TODO: test validations
    }
}
