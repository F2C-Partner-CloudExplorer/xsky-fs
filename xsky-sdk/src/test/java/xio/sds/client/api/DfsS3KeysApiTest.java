/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DfsS3KeyCreateReq;
import xio.sds.client.model.DfsS3KeyResp;
import xio.sds.client.model.DfsS3KeyUpdateReq;
import xio.sds.client.model.DfsS3KeysResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DfsS3KeysApi
 */
@Ignore
public class DfsS3KeysApiTest {

    private final DfsS3KeysApi api = new DfsS3KeysApi();

    /**
     * 
     *
     * Create new dfs s3 key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createDfsS3KeyTest() throws Exception {
        DfsS3KeyCreateReq body = null;
        String clusterId = null;
        DfsS3KeyResp response = api.createDfsS3Key(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete dfs s3 key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteDfsS3KeyTest() throws Exception {
        Long keyId = null;
        DfsS3KeyResp response = api.deleteDfsS3Key(keyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get dfs s3 key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDfsS3KeyTest() throws Exception {
        Long keyId = null;
        DfsS3KeyResp response = api.getDfsS3Key(keyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List dfs s3 keys
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listDfsS3KeysTest() throws Exception {
        String clusterId = null;
        Long userId = null;
        Long limit = null;
        Long offset = null;
        DfsS3KeysResp response = api.listDfsS3Keys(clusterId, userId, limit, offset);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update dfs s3 key
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDfsS3KeyTest() throws Exception {
        DfsS3KeyUpdateReq body = null;
        Long keyId = null;
        DfsS3KeyResp response = api.updateDfsS3Key(body, keyId);

        // TODO: test validations
    }
}
