/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DfsStoragePoliciesResp;
import xio.sds.client.model.DfsStoragePolicyCreateReq;
import xio.sds.client.model.DfsStoragePolicyResp;
import xio.sds.client.model.DfsStoragePolicyUnlinkDfsPathReq;
import xio.sds.client.model.DfsStoragePolicyUpdateReq;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DfsStoragePoliciesApi
 */
@Ignore
public class DfsStoragePoliciesApiTest {

    private final DfsStoragePoliciesApi api = new DfsStoragePoliciesApi();

    /**
     * 
     *
     * Create dfs storage policies
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createDfsStoragePolicyTest() throws Exception {
        DfsStoragePolicyCreateReq body = null;
        DfsStoragePolicyResp response = api.createDfsStoragePolicy(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete dfs storage policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteDfsStoragePolicyTest() throws Exception {
        Long dfsStoragePolicyId = null;
        DfsStoragePolicyResp response = api.deleteDfsStoragePolicy(dfsStoragePolicyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get dfs storage policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDfsStoragePolicyTest() throws Exception {
        Long dfsStoragePolicyId = null;
        DfsStoragePolicyResp response = api.getDfsStoragePolicy(dfsStoragePolicyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List dfs Policies
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listDfsStoragePoliciesTest() throws Exception {
        Long limit = null;
        Long offset = null;
        Long dfsRootfsId = null;
        Long dfsPathId = null;
        Long dfsStorageClassId = null;
        String clusterId = null;
        DfsStoragePoliciesResp response = api.listDfsStoragePolicies(limit, offset, dfsRootfsId, dfsPathId, dfsStorageClassId, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Policy unlink Path
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unlinkDfsStoragePolicyAndDfsPathTest() throws Exception {
        DfsStoragePolicyUnlinkDfsPathReq body = null;
        Long dfsStoragePolicyId = null;
        DfsStoragePolicyResp response = api.unlinkDfsStoragePolicyAndDfsPath(body, dfsStoragePolicyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update dfs storage policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDfsStoragePolicyTest() throws Exception {
        Long dfsStoragePolicyId = null;
        DfsStoragePolicyUpdateReq body = null;
        DfsStoragePolicyResp response = api.updateDfsStoragePolicy(dfsStoragePolicyId, body);

        // TODO: test validations
    }
}
