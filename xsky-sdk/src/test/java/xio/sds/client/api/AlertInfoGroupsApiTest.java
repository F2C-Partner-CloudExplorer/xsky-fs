/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.AlertInfoGroupResp;
import xio.sds.client.model.AlertInfoGroupsResp;
import xio.sds.client.model.AlertStatsResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AlertInfoGroupsApi
 */
@Ignore
public class AlertInfoGroupsApiTest {

    private final AlertInfoGroupsApi api = new AlertInfoGroupsApi();

    /**
     * 
     *
     * set the acked status of alert info group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ackAlertInfoGroupTest() throws Exception {
        Long alertInfoGroupId = null;
        AlertInfoGroupResp response = api.ackAlertInfoGroup(alertInfoGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * count alert info groups with conditions
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void countAlertInfoGroupsTest() throws Exception {
        Boolean acked = null;
        Boolean resolved = null;
        String resourceType = null;
        Long resourceId = null;
        String startTime = null;
        String endTime = null;
        AlertStatsResp response = api.countAlertInfoGroups(acked, resolved, resourceType, resourceId, startTime, endTime);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete an alert info group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAlertInfoGroupTest() throws Exception {
        Long alertInfoGroupId = null;
        AlertInfoGroupResp response = api.deleteAlertInfoGroup(alertInfoGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get alert info group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAlertInfoGroupTest() throws Exception {
        Long groupId = null;
        AlertInfoGroupResp response = api.getAlertInfoGroup(groupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get report of alert info groups
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAlertInfoGroupsReportTest() throws Exception {
        String level = null;
        String resourceType = null;
        String createAfter = null;
        Boolean acked = null;
        Boolean resolved = null;
        String group = null;
        api.getAlertInfoGroupsReport(level, resourceType, createAfter, acked, resolved, group);

        // TODO: test validations
    }
    /**
     * 
     *
     * List all alert info groups
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAlertInfoGroupsTest() throws Exception {
        String qMust = null;
        String q = null;
        String relatedResource = null;
        String sort = null;
        Long limit = null;
        Long offset = null;
        String level = null;
        String resourceType = null;
        Long resourceId = null;
        String createAfter = null;
        String createBefore = null;
        Boolean acked = null;
        Boolean resolved = null;
        String group = null;
        Boolean excludeCluster = null;
        AlertInfoGroupsResp response = api.listAlertInfoGroups(qMust, q, relatedResource, sort, limit, offset, level, resourceType, resourceId, createAfter, createBefore, acked, resolved, group, excludeCluster);

        // TODO: test validations
    }
    /**
     * 
     *
     * set the resolved status of alert info group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void resolveAlertInfoGroupTest() throws Exception {
        Long alertInfoGroupId = null;
        AlertInfoGroupResp response = api.resolveAlertInfoGroup(alertInfoGroupId);

        // TODO: test validations
    }
}
