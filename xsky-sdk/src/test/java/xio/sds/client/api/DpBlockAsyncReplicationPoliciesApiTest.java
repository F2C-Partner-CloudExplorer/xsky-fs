/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DpBlockAsyncReplicationPoliciesResp;
import xio.sds.client.model.DpBlockAsyncReplicationPolicyCreateReq;
import xio.sds.client.model.DpBlockAsyncReplicationPolicyResp;
import xio.sds.client.model.DpBlockAsyncReplicationPolicyUpdateReq;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DpBlockAsyncReplicationPoliciesApi
 */
@Ignore
public class DpBlockAsyncReplicationPoliciesApiTest {

    private final DpBlockAsyncReplicationPoliciesApi api = new DpBlockAsyncReplicationPoliciesApi();

    /**
     * 
     *
     * Create dp block async replication policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createDpBlockAsyncReplicationPolicyTest() throws Exception {
        DpBlockAsyncReplicationPolicyCreateReq body = null;
        DpBlockAsyncReplicationPolicyResp response = api.createDpBlockAsyncReplicationPolicy(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete dp block async replication policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteDpBlockAsyncReplicationPolicyTest() throws Exception {
        Long policyId = null;
        Boolean force = null;
        DpBlockAsyncReplicationPolicyResp response = api.deleteDpBlockAsyncReplicationPolicy(policyId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get dp block async replication policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDpBlockAsyncReplicationPolicyTest() throws Exception {
        Long policyId = null;
        DpBlockAsyncReplicationPolicyResp response = api.getDpBlockAsyncReplicationPolicy(policyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List dp block async replication policies
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listDpBlockAsyncReplicationPoliciesTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String q = null;
        String sort = null;
        Long dpSiteId = null;
        Long volumeId = null;
        DpBlockAsyncReplicationPoliciesResp response = api.listDpBlockAsyncReplicationPolicies(limit, offset, q, sort, dpSiteId, volumeId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update dp block async replication policy
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDpBlockAsyncReplicationPolicyTest() throws Exception {
        DpBlockAsyncReplicationPolicyUpdateReq body = null;
        Long policyId = null;
        DpBlockAsyncReplicationPolicyResp response = api.updateDpBlockAsyncReplicationPolicy(body, policyId);

        // TODO: test validations
    }
}
