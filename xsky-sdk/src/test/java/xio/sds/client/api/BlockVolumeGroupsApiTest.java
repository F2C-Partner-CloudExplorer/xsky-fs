/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.VolumeGroupCreateReq;
import xio.sds.client.model.VolumeGroupResp;
import xio.sds.client.model.VolumeGroupRollbackReq;
import xio.sds.client.model.VolumeGroupSnapshotReplicationProtectionReq;
import xio.sds.client.model.VolumeGroupUpdateReq;
import xio.sds.client.model.VolumeGroupsResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for BlockVolumeGroupsApi
 */
@Ignore
public class BlockVolumeGroupsApiTest {

    private final BlockVolumeGroupsApi api = new BlockVolumeGroupsApi();

    /**
     * 
     *
     * Create block volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createBlockVolumeGroupTest() throws Exception {
        VolumeGroupCreateReq body = null;
        String clusterId = null;
        VolumeGroupResp response = api.createBlockVolumeGroup(body, clusterId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Delete a block volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteBlockVolumeGroupTest() throws Exception {
        Long blockVolumeGroupId = null;
        VolumeGroupResp response = api.deleteBlockVolumeGroup(blockVolumeGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get a block volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getBlockVolumeGroupTest() throws Exception {
        Long blockVolumeGroupId = null;
        VolumeGroupResp response = api.getBlockVolumeGroup(blockVolumeGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * List block volume groups
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listBlockVolumeGroupsTest() throws Exception {
        String clusterId = null;
        Boolean passive = null;
        String name = null;
        Long limit = null;
        Long offset = null;
        String q = null;
        String sort = null;
        Long dpVolumeGroupSnapshotReplicationPolicyId = null;
        VolumeGroupsResp response = api.listBlockVolumeGroups(clusterId, passive, name, limit, offset, q, sort, dpVolumeGroupSnapshotReplicationPolicyId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Rollback volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rollbackVolumeGroupTest() throws Exception {
        VolumeGroupRollbackReq body = null;
        Long blockVolumeGroupId = null;
        VolumeGroupResp response = api.rollbackVolumeGroup(body, blockVolumeGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set snapshot replication protection for a volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setVolumeGroupSnapshotReplicationProtectionTest() throws Exception {
        VolumeGroupSnapshotReplicationProtectionReq body = null;
        Long blockVolumeGroupId = null;
        VolumeGroupResp response = api.setVolumeGroupSnapshotReplicationProtection(body, blockVolumeGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Unset volume group snapshot replication protection for a volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void unsetVolumeGroupSnapshotReplicationProtectionTest() throws Exception {
        Long blockVolumeGroupId = null;
        Boolean force = null;
        Boolean reserveVolumeGroup = null;
        VolumeGroupResp response = api.unsetVolumeGroupSnapshotReplicationProtection(blockVolumeGroupId, force, reserveVolumeGroup);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update block volume group
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateBlockVolumeGroupTest() throws Exception {
        VolumeGroupUpdateReq body = null;
        Long blockVolumeGroupId = null;
        VolumeGroupResp response = api.updateBlockVolumeGroup(body, blockVolumeGroupId);

        // TODO: test validations
    }
}
