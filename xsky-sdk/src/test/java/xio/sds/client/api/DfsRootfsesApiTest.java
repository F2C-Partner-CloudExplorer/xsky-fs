/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.DfsRootfsCreateReq;
import xio.sds.client.model.DfsRootfsResp;
import xio.sds.client.model.DfsRootfsSamplesResp;
import xio.sds.client.model.DfsRootfsSetGCSpeedReq;
import xio.sds.client.model.DfsRootfsSetWormLogPathReq;
import xio.sds.client.model.DfsRootfsUpdateActivePoolReq;
import xio.sds.client.model.DfsRootfsesResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DfsRootfsesApi
 */
@Ignore
public class DfsRootfsesApiTest {

    private final DfsRootfsesApi api = new DfsRootfsesApi();

    /**
     * 
     *
     * Create dfs rootfs
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createDfsRootfsTest() throws Exception {
        DfsRootfsCreateReq body = null;
        DfsRootfsResp response = api.createDfsRootfs(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * delete dfs rootfs
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteDfsRootfsTest() throws Exception {
        Long dfsRootfsId = null;
        Boolean force = null;
        DfsRootfsResp response = api.deleteDfsRootfs(dfsRootfsId, force);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get dfs rootfs
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDfsRootfsTest() throws Exception {
        Long dfsRootfsId = null;
        DfsRootfsResp response = api.getDfsRootfs(dfsRootfsId);

        // TODO: test validations
    }
    /**
     * 
     *
     * get a dfs rootfs&#x27;s samples
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDfsRootfsSamplesTest() throws Exception {
        Long dfsRootfsId = null;
        String durationBegin = null;
        String durationEnd = null;
        String period = null;
        DfsRootfsSamplesResp response = api.getDfsRootfsSamples(dfsRootfsId, durationBegin, durationEnd, period);

        // TODO: test validations
    }
    /**
     * 
     *
     * List dfs rootfses
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listDfsRootfsesTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String q = null;
        String sort = null;
        String clusterId = null;
        Long poolId = null;
        Long fsUserId = null;
        Long fsUserGroupId = null;
        DfsRootfsesResp response = api.listDfsRootfses(limit, offset, q, sort, clusterId, poolId, fsUserId, fsUserGroupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set dfs worm log path
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setDfsWormLogPathTest() throws Exception {
        DfsRootfsSetWormLogPathReq body = null;
        Long dfsRootfsId = null;
        Boolean allowPathCreate = null;
        DfsRootfsResp response = api.setDfsWormLogPath(body, dfsRootfsId, allowPathCreate);

        // TODO: test validations
    }
    /**
     * 
     *
     * Set gc speed of dfs rootfs
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setGCSpeedTest() throws Exception {
        DfsRootfsSetGCSpeedReq body = null;
        Long dfsRootfsId = null;
        DfsRootfsResp response = api.setGCSpeed(body, dfsRootfsId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Update dfs rootfs active pools
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateDfsRootfsActivePoolTest() throws Exception {
        DfsRootfsUpdateActivePoolReq body = null;
        Long dfsRootfsId = null;
        DfsRootfsResp response = api.updateDfsRootfsActivePool(body, dfsRootfsId);

        // TODO: test validations
    }
}
