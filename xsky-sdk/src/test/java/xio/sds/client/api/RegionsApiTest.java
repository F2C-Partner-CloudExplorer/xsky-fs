/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.api;

import xio.sds.client.model.RegionAccessInfoReq;
import xio.sds.client.model.RegionJoinReq;
import xio.sds.client.model.RegionResp;
import xio.sds.client.model.RegionStatsPredictionResp;
import xio.sds.client.model.RegionUpdateReq;
import xio.sds.client.model.RegionsResp;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for RegionsApi
 */
@Ignore
public class RegionsApiTest {

    private final RegionsApi api = new RegionsApi();

    /**
     * 
     *
     * Add remote region
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addRemoteRegionTest() throws Exception {
        RegionAccessInfoReq body = null;
        RegionResp response = api.addRemoteRegion(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get local region
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getLocalRegionTest() throws Exception {
        RegionResp response = api.getLocalRegion();

        // TODO: test validations
    }
    /**
     * 
     *
     * Get region
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRegionTest() throws Exception {
        Long regionId = null;
        RegionResp response = api.getRegion(regionId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Get prediction of stats space usage
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRegionStatsUsagePredictionTest() throws Exception {
        Long regionId = null;
        RegionStatsPredictionResp response = api.getRegionStatsUsagePrediction(regionId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Add remote region
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void joinRemoteRegionTest() throws Exception {
        RegionJoinReq body = null;
        RegionResp response = api.joinRemoteRegion(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * List regions
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listRegionsTest() throws Exception {
        Long limit = null;
        Long offset = null;
        String q = null;
        String sort = null;
        RegionsResp response = api.listRegions(limit, offset, q, sort);

        // TODO: test validations
    }
    /**
     * 
     *
     * Add remote region
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setAccessInfoTest() throws Exception {
        RegionResp response = api.setAccessInfo();

        // TODO: test validations
    }
    /**
     * 
     *
     * update local region info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateRegionTest() throws Exception {
        RegionUpdateReq body = null;
        RegionResp response = api.updateRegion(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * update remote region info
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateRemoteRegionTest() throws Exception {
        RegionUpdateReq body = null;
        RegionResp response = api.updateRemoteRegion(body);

        // TODO: test validations
    }
}
