/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsRootfsNestview;
import xio.sds.client.model.DfsStoragePolicy;
import xio.sds.client.model.DfsTierPoolPolicy;
import xio.sds.client.model.PoolNestview;
/**
 * DfsTier contains information of a dfs tier and it&#x27;s stats.
 */
@Schema(description = "DfsTier contains information of a dfs tier and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsTier {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("active_pool_ids")
  private List<Long> activePoolIds = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_rootfs")
  private DfsRootfsNestview dfsRootfs = null;

  @SerializedName("dfs_storage_policies")
  private List<DfsStoragePolicy> dfsStoragePolicies = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("is_default")
  private Boolean isDefault = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("policy_num")
  private Long policyNum = null;

  @SerializedName("pool_ids")
  private List<Long> poolIds = null;

  @SerializedName("pool_names")
  private List<String> poolNames = null;

  @SerializedName("pool_num")
  private Long poolNum = null;

  @SerializedName("pool_policies")
  private List<DfsTierPoolPolicy> poolPolicies = null;

  @SerializedName("pools")
  private List<PoolNestview> pools = null;

  @SerializedName("sc_id")
  private Long scId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("storage_policy_ids")
  private List<Long> storagePolicyIds = null;

  @SerializedName("stretched")
  private Boolean stretched = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("write_policy")
  private String writePolicy = null;

  public DfsTier actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsTier activePoolIds(List<Long> activePoolIds) {
    this.activePoolIds = activePoolIds;
    return this;
  }

  public DfsTier addActivePoolIdsItem(Long activePoolIdsItem) {
    if (this.activePoolIds == null) {
      this.activePoolIds = new ArrayList<Long>();
    }
    this.activePoolIds.add(activePoolIdsItem);
    return this;
  }

   /**
   * Get activePoolIds
   * @return activePoolIds
  **/
  @Schema(description = "")
  public List<Long> getActivePoolIds() {
    return activePoolIds;
  }

  public void setActivePoolIds(List<Long> activePoolIds) {
    this.activePoolIds = activePoolIds;
  }

  public DfsTier cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsTier create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsTier description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsTier dfsRootfs(DfsRootfsNestview dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
    return this;
  }

   /**
   * Get dfsRootfs
   * @return dfsRootfs
  **/
  @Schema(description = "")
  public DfsRootfsNestview getDfsRootfs() {
    return dfsRootfs;
  }

  public void setDfsRootfs(DfsRootfsNestview dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
  }

  public DfsTier dfsStoragePolicies(List<DfsStoragePolicy> dfsStoragePolicies) {
    this.dfsStoragePolicies = dfsStoragePolicies;
    return this;
  }

  public DfsTier addDfsStoragePoliciesItem(DfsStoragePolicy dfsStoragePoliciesItem) {
    if (this.dfsStoragePolicies == null) {
      this.dfsStoragePolicies = new ArrayList<DfsStoragePolicy>();
    }
    this.dfsStoragePolicies.add(dfsStoragePoliciesItem);
    return this;
  }

   /**
   * Get dfsStoragePolicies
   * @return dfsStoragePolicies
  **/
  @Schema(description = "")
  public List<DfsStoragePolicy> getDfsStoragePolicies() {
    return dfsStoragePolicies;
  }

  public void setDfsStoragePolicies(List<DfsStoragePolicy> dfsStoragePolicies) {
    this.dfsStoragePolicies = dfsStoragePolicies;
  }

  public DfsTier id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsTier isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Get isDefault
   * @return isDefault
  **/
  @Schema(description = "")
  public Boolean isIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }

  public DfsTier name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsTier policyNum(Long policyNum) {
    this.policyNum = policyNum;
    return this;
  }

   /**
   * Get policyNum
   * @return policyNum
  **/
  @Schema(description = "")
  public Long getPolicyNum() {
    return policyNum;
  }

  public void setPolicyNum(Long policyNum) {
    this.policyNum = policyNum;
  }

  public DfsTier poolIds(List<Long> poolIds) {
    this.poolIds = poolIds;
    return this;
  }

  public DfsTier addPoolIdsItem(Long poolIdsItem) {
    if (this.poolIds == null) {
      this.poolIds = new ArrayList<Long>();
    }
    this.poolIds.add(poolIdsItem);
    return this;
  }

   /**
   * Get poolIds
   * @return poolIds
  **/
  @Schema(description = "")
  public List<Long> getPoolIds() {
    return poolIds;
  }

  public void setPoolIds(List<Long> poolIds) {
    this.poolIds = poolIds;
  }

  public DfsTier poolNames(List<String> poolNames) {
    this.poolNames = poolNames;
    return this;
  }

  public DfsTier addPoolNamesItem(String poolNamesItem) {
    if (this.poolNames == null) {
      this.poolNames = new ArrayList<String>();
    }
    this.poolNames.add(poolNamesItem);
    return this;
  }

   /**
   * Get poolNames
   * @return poolNames
  **/
  @Schema(description = "")
  public List<String> getPoolNames() {
    return poolNames;
  }

  public void setPoolNames(List<String> poolNames) {
    this.poolNames = poolNames;
  }

  public DfsTier poolNum(Long poolNum) {
    this.poolNum = poolNum;
    return this;
  }

   /**
   * Get poolNum
   * @return poolNum
  **/
  @Schema(description = "")
  public Long getPoolNum() {
    return poolNum;
  }

  public void setPoolNum(Long poolNum) {
    this.poolNum = poolNum;
  }

  public DfsTier poolPolicies(List<DfsTierPoolPolicy> poolPolicies) {
    this.poolPolicies = poolPolicies;
    return this;
  }

  public DfsTier addPoolPoliciesItem(DfsTierPoolPolicy poolPoliciesItem) {
    if (this.poolPolicies == null) {
      this.poolPolicies = new ArrayList<DfsTierPoolPolicy>();
    }
    this.poolPolicies.add(poolPoliciesItem);
    return this;
  }

   /**
   * Get poolPolicies
   * @return poolPolicies
  **/
  @Schema(description = "")
  public List<DfsTierPoolPolicy> getPoolPolicies() {
    return poolPolicies;
  }

  public void setPoolPolicies(List<DfsTierPoolPolicy> poolPolicies) {
    this.poolPolicies = poolPolicies;
  }

  public DfsTier pools(List<PoolNestview> pools) {
    this.pools = pools;
    return this;
  }

  public DfsTier addPoolsItem(PoolNestview poolsItem) {
    if (this.pools == null) {
      this.pools = new ArrayList<PoolNestview>();
    }
    this.pools.add(poolsItem);
    return this;
  }

   /**
   * Get pools
   * @return pools
  **/
  @Schema(description = "")
  public List<PoolNestview> getPools() {
    return pools;
  }

  public void setPools(List<PoolNestview> pools) {
    this.pools = pools;
  }

  public DfsTier scId(Long scId) {
    this.scId = scId;
    return this;
  }

   /**
   * Get scId
   * @return scId
  **/
  @Schema(description = "")
  public Long getScId() {
    return scId;
  }

  public void setScId(Long scId) {
    this.scId = scId;
  }

  public DfsTier status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsTier storagePolicyIds(List<Long> storagePolicyIds) {
    this.storagePolicyIds = storagePolicyIds;
    return this;
  }

  public DfsTier addStoragePolicyIdsItem(Long storagePolicyIdsItem) {
    if (this.storagePolicyIds == null) {
      this.storagePolicyIds = new ArrayList<Long>();
    }
    this.storagePolicyIds.add(storagePolicyIdsItem);
    return this;
  }

   /**
   * Get storagePolicyIds
   * @return storagePolicyIds
  **/
  @Schema(description = "")
  public List<Long> getStoragePolicyIds() {
    return storagePolicyIds;
  }

  public void setStoragePolicyIds(List<Long> storagePolicyIds) {
    this.storagePolicyIds = storagePolicyIds;
  }

  public DfsTier stretched(Boolean stretched) {
    this.stretched = stretched;
    return this;
  }

   /**
   * indicate that all pools under this class is stretched pool
   * @return stretched
  **/
  @Schema(description = "indicate that all pools under this class is stretched pool")
  public Boolean isStretched() {
    return stretched;
  }

  public void setStretched(Boolean stretched) {
    this.stretched = stretched;
  }

  public DfsTier update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public DfsTier writePolicy(String writePolicy) {
    this.writePolicy = writePolicy;
    return this;
  }

   /**
   * Get writePolicy
   * @return writePolicy
  **/
  @Schema(description = "")
  public String getWritePolicy() {
    return writePolicy;
  }

  public void setWritePolicy(String writePolicy) {
    this.writePolicy = writePolicy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsTier dfsTier = (DfsTier) o;
    return Objects.equals(this.actionStatus, dfsTier.actionStatus) &&
        Objects.equals(this.activePoolIds, dfsTier.activePoolIds) &&
        Objects.equals(this.cluster, dfsTier.cluster) &&
        Objects.equals(this.create, dfsTier.create) &&
        Objects.equals(this.description, dfsTier.description) &&
        Objects.equals(this.dfsRootfs, dfsTier.dfsRootfs) &&
        Objects.equals(this.dfsStoragePolicies, dfsTier.dfsStoragePolicies) &&
        Objects.equals(this.id, dfsTier.id) &&
        Objects.equals(this.isDefault, dfsTier.isDefault) &&
        Objects.equals(this.name, dfsTier.name) &&
        Objects.equals(this.policyNum, dfsTier.policyNum) &&
        Objects.equals(this.poolIds, dfsTier.poolIds) &&
        Objects.equals(this.poolNames, dfsTier.poolNames) &&
        Objects.equals(this.poolNum, dfsTier.poolNum) &&
        Objects.equals(this.poolPolicies, dfsTier.poolPolicies) &&
        Objects.equals(this.pools, dfsTier.pools) &&
        Objects.equals(this.scId, dfsTier.scId) &&
        Objects.equals(this.status, dfsTier.status) &&
        Objects.equals(this.storagePolicyIds, dfsTier.storagePolicyIds) &&
        Objects.equals(this.stretched, dfsTier.stretched) &&
        Objects.equals(this.update, dfsTier.update) &&
        Objects.equals(this.writePolicy, dfsTier.writePolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, activePoolIds, cluster, create, description, dfsRootfs, dfsStoragePolicies, id, isDefault, name, policyNum, poolIds, poolNames, poolNum, poolPolicies, pools, scId, status, storagePolicyIds, stretched, update, writePolicy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsTier {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    activePoolIds: ").append(toIndentedString(activePoolIds)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsRootfs: ").append(toIndentedString(dfsRootfs)).append("\n");
    sb.append("    dfsStoragePolicies: ").append(toIndentedString(dfsStoragePolicies)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    policyNum: ").append(toIndentedString(policyNum)).append("\n");
    sb.append("    poolIds: ").append(toIndentedString(poolIds)).append("\n");
    sb.append("    poolNames: ").append(toIndentedString(poolNames)).append("\n");
    sb.append("    poolNum: ").append(toIndentedString(poolNum)).append("\n");
    sb.append("    poolPolicies: ").append(toIndentedString(poolPolicies)).append("\n");
    sb.append("    pools: ").append(toIndentedString(pools)).append("\n");
    sb.append("    scId: ").append(toIndentedString(scId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storagePolicyIds: ").append(toIndentedString(storagePolicyIds)).append("\n");
    sb.append("    stretched: ").append(toIndentedString(stretched)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    writePolicy: ").append(toIndentedString(writePolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
