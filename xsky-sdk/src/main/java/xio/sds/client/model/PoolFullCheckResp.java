/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PoolFullCheckResp
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class PoolFullCheckResp {
  @SerializedName("backfill_full_pool_ids")
  private List<Long> backfillFullPoolIds = null;

  @SerializedName("full_pool_ids")
  private List<Long> fullPoolIds = null;

  @SerializedName("near_full_pool_ids")
  private List<Long> nearFullPoolIds = null;

  public PoolFullCheckResp backfillFullPoolIds(List<Long> backfillFullPoolIds) {
    this.backfillFullPoolIds = backfillFullPoolIds;
    return this;
  }

  public PoolFullCheckResp addBackfillFullPoolIdsItem(Long backfillFullPoolIdsItem) {
    if (this.backfillFullPoolIds == null) {
      this.backfillFullPoolIds = new ArrayList<Long>();
    }
    this.backfillFullPoolIds.add(backfillFullPoolIdsItem);
    return this;
  }

   /**
   * Get backfillFullPoolIds
   * @return backfillFullPoolIds
  **/
  @Schema(description = "")
  public List<Long> getBackfillFullPoolIds() {
    return backfillFullPoolIds;
  }

  public void setBackfillFullPoolIds(List<Long> backfillFullPoolIds) {
    this.backfillFullPoolIds = backfillFullPoolIds;
  }

  public PoolFullCheckResp fullPoolIds(List<Long> fullPoolIds) {
    this.fullPoolIds = fullPoolIds;
    return this;
  }

  public PoolFullCheckResp addFullPoolIdsItem(Long fullPoolIdsItem) {
    if (this.fullPoolIds == null) {
      this.fullPoolIds = new ArrayList<Long>();
    }
    this.fullPoolIds.add(fullPoolIdsItem);
    return this;
  }

   /**
   * Get fullPoolIds
   * @return fullPoolIds
  **/
  @Schema(description = "")
  public List<Long> getFullPoolIds() {
    return fullPoolIds;
  }

  public void setFullPoolIds(List<Long> fullPoolIds) {
    this.fullPoolIds = fullPoolIds;
  }

  public PoolFullCheckResp nearFullPoolIds(List<Long> nearFullPoolIds) {
    this.nearFullPoolIds = nearFullPoolIds;
    return this;
  }

  public PoolFullCheckResp addNearFullPoolIdsItem(Long nearFullPoolIdsItem) {
    if (this.nearFullPoolIds == null) {
      this.nearFullPoolIds = new ArrayList<Long>();
    }
    this.nearFullPoolIds.add(nearFullPoolIdsItem);
    return this;
  }

   /**
   * Get nearFullPoolIds
   * @return nearFullPoolIds
  **/
  @Schema(description = "")
  public List<Long> getNearFullPoolIds() {
    return nearFullPoolIds;
  }

  public void setNearFullPoolIds(List<Long> nearFullPoolIds) {
    this.nearFullPoolIds = nearFullPoolIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoolFullCheckResp poolFullCheckResp = (PoolFullCheckResp) o;
    return Objects.equals(this.backfillFullPoolIds, poolFullCheckResp.backfillFullPoolIds) &&
        Objects.equals(this.fullPoolIds, poolFullCheckResp.fullPoolIds) &&
        Objects.equals(this.nearFullPoolIds, poolFullCheckResp.nearFullPoolIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backfillFullPoolIds, fullPoolIds, nearFullPoolIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoolFullCheckResp {\n");
    
    sb.append("    backfillFullPoolIds: ").append(toIndentedString(backfillFullPoolIds)).append("\n");
    sb.append("    fullPoolIds: ").append(toIndentedString(fullPoolIds)).append("\n");
    sb.append("    nearFullPoolIds: ").append(toIndentedString(nearFullPoolIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
