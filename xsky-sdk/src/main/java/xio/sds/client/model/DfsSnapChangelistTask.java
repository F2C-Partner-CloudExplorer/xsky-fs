/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsGatewayNestview;
import xio.sds.client.model.DfsSnapshotNestview;
/**
 * DfsSnapChangelistTask defines model of dfs snapshot changelist task +X:model:generate;order_by&#x3D;-ID;etcd_lock;
 */
@Schema(description = "DfsSnapChangelistTask defines model of dfs snapshot changelist task +X:model:generate;order_by=-ID;etcd_lock;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsSnapChangelistTask {
  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("dst_name")
  private String dstName = null;

  @SerializedName("dst_snapshot")
  private DfsSnapshotNestview dstSnapshot = null;

  @SerializedName("gateway")
  private DfsGatewayNestview gateway = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("result")
  private List<String> result = null;

  @SerializedName("src_name")
  private String srcName = null;

  @SerializedName("src_snapshot")
  private DfsSnapshotNestview srcSnapshot = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DfsSnapChangelistTask cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsSnapChangelistTask create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsSnapChangelistTask dstName(String dstName) {
    this.dstName = dstName;
    return this;
  }

   /**
   * Get dstName
   * @return dstName
  **/
  @Schema(description = "")
  public String getDstName() {
    return dstName;
  }

  public void setDstName(String dstName) {
    this.dstName = dstName;
  }

  public DfsSnapChangelistTask dstSnapshot(DfsSnapshotNestview dstSnapshot) {
    this.dstSnapshot = dstSnapshot;
    return this;
  }

   /**
   * Get dstSnapshot
   * @return dstSnapshot
  **/
  @Schema(description = "")
  public DfsSnapshotNestview getDstSnapshot() {
    return dstSnapshot;
  }

  public void setDstSnapshot(DfsSnapshotNestview dstSnapshot) {
    this.dstSnapshot = dstSnapshot;
  }

  public DfsSnapChangelistTask gateway(DfsGatewayNestview gateway) {
    this.gateway = gateway;
    return this;
  }

   /**
   * Get gateway
   * @return gateway
  **/
  @Schema(description = "")
  public DfsGatewayNestview getGateway() {
    return gateway;
  }

  public void setGateway(DfsGatewayNestview gateway) {
    this.gateway = gateway;
  }

  public DfsSnapChangelistTask id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsSnapChangelistTask path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public DfsSnapChangelistTask result(List<String> result) {
    this.result = result;
    return this;
  }

  public DfsSnapChangelistTask addResultItem(String resultItem) {
    if (this.result == null) {
      this.result = new ArrayList<String>();
    }
    this.result.add(resultItem);
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @Schema(description = "")
  public List<String> getResult() {
    return result;
  }

  public void setResult(List<String> result) {
    this.result = result;
  }

  public DfsSnapChangelistTask srcName(String srcName) {
    this.srcName = srcName;
    return this;
  }

   /**
   * Get srcName
   * @return srcName
  **/
  @Schema(description = "")
  public String getSrcName() {
    return srcName;
  }

  public void setSrcName(String srcName) {
    this.srcName = srcName;
  }

  public DfsSnapChangelistTask srcSnapshot(DfsSnapshotNestview srcSnapshot) {
    this.srcSnapshot = srcSnapshot;
    return this;
  }

   /**
   * Get srcSnapshot
   * @return srcSnapshot
  **/
  @Schema(description = "")
  public DfsSnapshotNestview getSrcSnapshot() {
    return srcSnapshot;
  }

  public void setSrcSnapshot(DfsSnapshotNestview srcSnapshot) {
    this.srcSnapshot = srcSnapshot;
  }

  public DfsSnapChangelistTask status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsSnapChangelistTask update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsSnapChangelistTask dfsSnapChangelistTask = (DfsSnapChangelistTask) o;
    return Objects.equals(this.cluster, dfsSnapChangelistTask.cluster) &&
        Objects.equals(this.create, dfsSnapChangelistTask.create) &&
        Objects.equals(this.dstName, dfsSnapChangelistTask.dstName) &&
        Objects.equals(this.dstSnapshot, dfsSnapChangelistTask.dstSnapshot) &&
        Objects.equals(this.gateway, dfsSnapChangelistTask.gateway) &&
        Objects.equals(this.id, dfsSnapChangelistTask.id) &&
        Objects.equals(this.path, dfsSnapChangelistTask.path) &&
        Objects.equals(this.result, dfsSnapChangelistTask.result) &&
        Objects.equals(this.srcName, dfsSnapChangelistTask.srcName) &&
        Objects.equals(this.srcSnapshot, dfsSnapChangelistTask.srcSnapshot) &&
        Objects.equals(this.status, dfsSnapChangelistTask.status) &&
        Objects.equals(this.update, dfsSnapChangelistTask.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, create, dstName, dstSnapshot, gateway, id, path, result, srcName, srcSnapshot, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsSnapChangelistTask {\n");
    
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    dstName: ").append(toIndentedString(dstName)).append("\n");
    sb.append("    dstSnapshot: ").append(toIndentedString(dstSnapshot)).append("\n");
    sb.append("    gateway: ").append(toIndentedString(gateway)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    srcName: ").append(toIndentedString(srcName)).append("\n");
    sb.append("    srcSnapshot: ").append(toIndentedString(srcSnapshot)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
