/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * FSUserGroupCreateReqUserGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class FSUserGroupCreateReqUserGroup {
  @SerializedName("description")
  private String description = null;

  @SerializedName("fs_user_ids")
  private List<Long> fsUserIds = null;

  @SerializedName("group_id")
  private Long groupId = null;

  @SerializedName("name")
  private String name = null;

  public FSUserGroupCreateReqUserGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of user group
   * @return description
  **/
  @Schema(description = "description of user group")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FSUserGroupCreateReqUserGroup fsUserIds(List<Long> fsUserIds) {
    this.fsUserIds = fsUserIds;
    return this;
  }

  public FSUserGroupCreateReqUserGroup addFsUserIdsItem(Long fsUserIdsItem) {
    if (this.fsUserIds == null) {
      this.fsUserIds = new ArrayList<Long>();
    }
    this.fsUserIds.add(fsUserIdsItem);
    return this;
  }

   /**
   * ids of users, which are required when type is smb or ftp
   * @return fsUserIds
  **/
  @Schema(description = "ids of users, which are required when type is smb or ftp")
  public List<Long> getFsUserIds() {
    return fsUserIds;
  }

  public void setFsUserIds(List<Long> fsUserIds) {
    this.fsUserIds = fsUserIds;
  }

  public FSUserGroupCreateReqUserGroup groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * gid of user group
   * @return groupId
  **/
  @Schema(description = "gid of user group")
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }

  public FSUserGroupCreateReqUserGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of user group
   * @return name
  **/
  @Schema(required = true, description = "name of user group")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FSUserGroupCreateReqUserGroup fsUserGroupCreateReqUserGroup = (FSUserGroupCreateReqUserGroup) o;
    return Objects.equals(this.description, fsUserGroupCreateReqUserGroup.description) &&
        Objects.equals(this.fsUserIds, fsUserGroupCreateReqUserGroup.fsUserIds) &&
        Objects.equals(this.groupId, fsUserGroupCreateReqUserGroup.groupId) &&
        Objects.equals(this.name, fsUserGroupCreateReqUserGroup.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, fsUserIds, groupId, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FSUserGroupCreateReqUserGroup {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fsUserIds: ").append(toIndentedString(fsUserIds)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
