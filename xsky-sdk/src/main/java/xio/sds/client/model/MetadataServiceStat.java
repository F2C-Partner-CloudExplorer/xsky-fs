/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.DiskStat;
/**
 * MetadataServiceStat defines the basic info of a metadata service
 */
@Schema(description = "MetadataServiceStat defines the basic info of a metadata service")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class MetadataServiceStat {
  @SerializedName("cpu_util")
  private Double cpuUtil = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("delete_latency_us")
  private Double deleteLatencyUs = null;

  @SerializedName("delete_ops")
  private Double deleteOps = null;

  @SerializedName("disk")
  private DiskStat disk = null;

  @SerializedName("getattrs_latency_us")
  private Double getattrsLatencyUs = null;

  @SerializedName("list_latency_us")
  private Double listLatencyUs = null;

  @SerializedName("list_ops")
  private Double listOps = null;

  @SerializedName("mem_usage_percent")
  private Double memUsagePercent = null;

  @SerializedName("op_latency_us")
  private Double opLatencyUs = null;

  @SerializedName("open_latency_us")
  private Double openLatencyUs = null;

  @SerializedName("read_latency_us")
  private Double readLatencyUs = null;

  @SerializedName("read_ops")
  private Double readOps = null;

  @SerializedName("recovery_done")
  private Long recoveryDone = null;

  @SerializedName("recovery_left_second")
  private Double recoveryLeftSecond = null;

  @SerializedName("recovery_ops")
  private Double recoveryOps = null;

  @SerializedName("recovery_total")
  private Long recoveryTotal = null;

  @SerializedName("write_latency_us")
  private Double writeLatencyUs = null;

  @SerializedName("write_ops")
  private Double writeOps = null;

  public MetadataServiceStat cpuUtil(Double cpuUtil) {
    this.cpuUtil = cpuUtil;
    return this;
  }

   /**
   * Get cpuUtil
   * @return cpuUtil
  **/
  @Schema(description = "")
  public Double getCpuUtil() {
    return cpuUtil;
  }

  public void setCpuUtil(Double cpuUtil) {
    this.cpuUtil = cpuUtil;
  }

  public MetadataServiceStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public MetadataServiceStat deleteLatencyUs(Double deleteLatencyUs) {
    this.deleteLatencyUs = deleteLatencyUs;
    return this;
  }

   /**
   * Get deleteLatencyUs
   * @return deleteLatencyUs
  **/
  @Schema(description = "")
  public Double getDeleteLatencyUs() {
    return deleteLatencyUs;
  }

  public void setDeleteLatencyUs(Double deleteLatencyUs) {
    this.deleteLatencyUs = deleteLatencyUs;
  }

  public MetadataServiceStat deleteOps(Double deleteOps) {
    this.deleteOps = deleteOps;
    return this;
  }

   /**
   * Get deleteOps
   * @return deleteOps
  **/
  @Schema(description = "")
  public Double getDeleteOps() {
    return deleteOps;
  }

  public void setDeleteOps(Double deleteOps) {
    this.deleteOps = deleteOps;
  }

  public MetadataServiceStat disk(DiskStat disk) {
    this.disk = disk;
    return this;
  }

   /**
   * Get disk
   * @return disk
  **/
  @Schema(description = "")
  public DiskStat getDisk() {
    return disk;
  }

  public void setDisk(DiskStat disk) {
    this.disk = disk;
  }

  public MetadataServiceStat getattrsLatencyUs(Double getattrsLatencyUs) {
    this.getattrsLatencyUs = getattrsLatencyUs;
    return this;
  }

   /**
   * Get getattrsLatencyUs
   * @return getattrsLatencyUs
  **/
  @Schema(description = "")
  public Double getGetattrsLatencyUs() {
    return getattrsLatencyUs;
  }

  public void setGetattrsLatencyUs(Double getattrsLatencyUs) {
    this.getattrsLatencyUs = getattrsLatencyUs;
  }

  public MetadataServiceStat listLatencyUs(Double listLatencyUs) {
    this.listLatencyUs = listLatencyUs;
    return this;
  }

   /**
   * Get listLatencyUs
   * @return listLatencyUs
  **/
  @Schema(description = "")
  public Double getListLatencyUs() {
    return listLatencyUs;
  }

  public void setListLatencyUs(Double listLatencyUs) {
    this.listLatencyUs = listLatencyUs;
  }

  public MetadataServiceStat listOps(Double listOps) {
    this.listOps = listOps;
    return this;
  }

   /**
   * Get listOps
   * @return listOps
  **/
  @Schema(description = "")
  public Double getListOps() {
    return listOps;
  }

  public void setListOps(Double listOps) {
    this.listOps = listOps;
  }

  public MetadataServiceStat memUsagePercent(Double memUsagePercent) {
    this.memUsagePercent = memUsagePercent;
    return this;
  }

   /**
   * Get memUsagePercent
   * @return memUsagePercent
  **/
  @Schema(description = "")
  public Double getMemUsagePercent() {
    return memUsagePercent;
  }

  public void setMemUsagePercent(Double memUsagePercent) {
    this.memUsagePercent = memUsagePercent;
  }

  public MetadataServiceStat opLatencyUs(Double opLatencyUs) {
    this.opLatencyUs = opLatencyUs;
    return this;
  }

   /**
   * Get opLatencyUs
   * @return opLatencyUs
  **/
  @Schema(description = "")
  public Double getOpLatencyUs() {
    return opLatencyUs;
  }

  public void setOpLatencyUs(Double opLatencyUs) {
    this.opLatencyUs = opLatencyUs;
  }

  public MetadataServiceStat openLatencyUs(Double openLatencyUs) {
    this.openLatencyUs = openLatencyUs;
    return this;
  }

   /**
   * Get openLatencyUs
   * @return openLatencyUs
  **/
  @Schema(description = "")
  public Double getOpenLatencyUs() {
    return openLatencyUs;
  }

  public void setOpenLatencyUs(Double openLatencyUs) {
    this.openLatencyUs = openLatencyUs;
  }

  public MetadataServiceStat readLatencyUs(Double readLatencyUs) {
    this.readLatencyUs = readLatencyUs;
    return this;
  }

   /**
   * Get readLatencyUs
   * @return readLatencyUs
  **/
  @Schema(description = "")
  public Double getReadLatencyUs() {
    return readLatencyUs;
  }

  public void setReadLatencyUs(Double readLatencyUs) {
    this.readLatencyUs = readLatencyUs;
  }

  public MetadataServiceStat readOps(Double readOps) {
    this.readOps = readOps;
    return this;
  }

   /**
   * Get readOps
   * @return readOps
  **/
  @Schema(description = "")
  public Double getReadOps() {
    return readOps;
  }

  public void setReadOps(Double readOps) {
    this.readOps = readOps;
  }

  public MetadataServiceStat recoveryDone(Long recoveryDone) {
    this.recoveryDone = recoveryDone;
    return this;
  }

   /**
   * Get recoveryDone
   * @return recoveryDone
  **/
  @Schema(description = "")
  public Long getRecoveryDone() {
    return recoveryDone;
  }

  public void setRecoveryDone(Long recoveryDone) {
    this.recoveryDone = recoveryDone;
  }

  public MetadataServiceStat recoveryLeftSecond(Double recoveryLeftSecond) {
    this.recoveryLeftSecond = recoveryLeftSecond;
    return this;
  }

   /**
   * Get recoveryLeftSecond
   * @return recoveryLeftSecond
  **/
  @Schema(description = "")
  public Double getRecoveryLeftSecond() {
    return recoveryLeftSecond;
  }

  public void setRecoveryLeftSecond(Double recoveryLeftSecond) {
    this.recoveryLeftSecond = recoveryLeftSecond;
  }

  public MetadataServiceStat recoveryOps(Double recoveryOps) {
    this.recoveryOps = recoveryOps;
    return this;
  }

   /**
   * Get recoveryOps
   * @return recoveryOps
  **/
  @Schema(description = "")
  public Double getRecoveryOps() {
    return recoveryOps;
  }

  public void setRecoveryOps(Double recoveryOps) {
    this.recoveryOps = recoveryOps;
  }

  public MetadataServiceStat recoveryTotal(Long recoveryTotal) {
    this.recoveryTotal = recoveryTotal;
    return this;
  }

   /**
   * those fields are only for primary xmds
   * @return recoveryTotal
  **/
  @Schema(description = "those fields are only for primary xmds")
  public Long getRecoveryTotal() {
    return recoveryTotal;
  }

  public void setRecoveryTotal(Long recoveryTotal) {
    this.recoveryTotal = recoveryTotal;
  }

  public MetadataServiceStat writeLatencyUs(Double writeLatencyUs) {
    this.writeLatencyUs = writeLatencyUs;
    return this;
  }

   /**
   * Get writeLatencyUs
   * @return writeLatencyUs
  **/
  @Schema(description = "")
  public Double getWriteLatencyUs() {
    return writeLatencyUs;
  }

  public void setWriteLatencyUs(Double writeLatencyUs) {
    this.writeLatencyUs = writeLatencyUs;
  }

  public MetadataServiceStat writeOps(Double writeOps) {
    this.writeOps = writeOps;
    return this;
  }

   /**
   * Get writeOps
   * @return writeOps
  **/
  @Schema(description = "")
  public Double getWriteOps() {
    return writeOps;
  }

  public void setWriteOps(Double writeOps) {
    this.writeOps = writeOps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataServiceStat metadataServiceStat = (MetadataServiceStat) o;
    return Objects.equals(this.cpuUtil, metadataServiceStat.cpuUtil) &&
        Objects.equals(this.create, metadataServiceStat.create) &&
        Objects.equals(this.deleteLatencyUs, metadataServiceStat.deleteLatencyUs) &&
        Objects.equals(this.deleteOps, metadataServiceStat.deleteOps) &&
        Objects.equals(this.disk, metadataServiceStat.disk) &&
        Objects.equals(this.getattrsLatencyUs, metadataServiceStat.getattrsLatencyUs) &&
        Objects.equals(this.listLatencyUs, metadataServiceStat.listLatencyUs) &&
        Objects.equals(this.listOps, metadataServiceStat.listOps) &&
        Objects.equals(this.memUsagePercent, metadataServiceStat.memUsagePercent) &&
        Objects.equals(this.opLatencyUs, metadataServiceStat.opLatencyUs) &&
        Objects.equals(this.openLatencyUs, metadataServiceStat.openLatencyUs) &&
        Objects.equals(this.readLatencyUs, metadataServiceStat.readLatencyUs) &&
        Objects.equals(this.readOps, metadataServiceStat.readOps) &&
        Objects.equals(this.recoveryDone, metadataServiceStat.recoveryDone) &&
        Objects.equals(this.recoveryLeftSecond, metadataServiceStat.recoveryLeftSecond) &&
        Objects.equals(this.recoveryOps, metadataServiceStat.recoveryOps) &&
        Objects.equals(this.recoveryTotal, metadataServiceStat.recoveryTotal) &&
        Objects.equals(this.writeLatencyUs, metadataServiceStat.writeLatencyUs) &&
        Objects.equals(this.writeOps, metadataServiceStat.writeOps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuUtil, create, deleteLatencyUs, deleteOps, disk, getattrsLatencyUs, listLatencyUs, listOps, memUsagePercent, opLatencyUs, openLatencyUs, readLatencyUs, readOps, recoveryDone, recoveryLeftSecond, recoveryOps, recoveryTotal, writeLatencyUs, writeOps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataServiceStat {\n");
    
    sb.append("    cpuUtil: ").append(toIndentedString(cpuUtil)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    deleteLatencyUs: ").append(toIndentedString(deleteLatencyUs)).append("\n");
    sb.append("    deleteOps: ").append(toIndentedString(deleteOps)).append("\n");
    sb.append("    disk: ").append(toIndentedString(disk)).append("\n");
    sb.append("    getattrsLatencyUs: ").append(toIndentedString(getattrsLatencyUs)).append("\n");
    sb.append("    listLatencyUs: ").append(toIndentedString(listLatencyUs)).append("\n");
    sb.append("    listOps: ").append(toIndentedString(listOps)).append("\n");
    sb.append("    memUsagePercent: ").append(toIndentedString(memUsagePercent)).append("\n");
    sb.append("    opLatencyUs: ").append(toIndentedString(opLatencyUs)).append("\n");
    sb.append("    openLatencyUs: ").append(toIndentedString(openLatencyUs)).append("\n");
    sb.append("    readLatencyUs: ").append(toIndentedString(readLatencyUs)).append("\n");
    sb.append("    readOps: ").append(toIndentedString(readOps)).append("\n");
    sb.append("    recoveryDone: ").append(toIndentedString(recoveryDone)).append("\n");
    sb.append("    recoveryLeftSecond: ").append(toIndentedString(recoveryLeftSecond)).append("\n");
    sb.append("    recoveryOps: ").append(toIndentedString(recoveryOps)).append("\n");
    sb.append("    recoveryTotal: ").append(toIndentedString(recoveryTotal)).append("\n");
    sb.append("    writeLatencyUs: ").append(toIndentedString(writeLatencyUs)).append("\n");
    sb.append("    writeOps: ").append(toIndentedString(writeOps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
