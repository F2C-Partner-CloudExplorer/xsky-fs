/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DiskNestview;
import xio.sds.client.model.OspMetadataCluster;
/**
 * Partition contains information of a partition and it&#x27;s stats.
 */
@Schema(description = "Partition contains information of a partition and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class Partition {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("disk")
  private DiskNestview disk = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("omap_byte")
  private Long omapByte = null;

  @SerializedName("omap_device_path")
  private String omapDevicePath = null;

  @SerializedName("osp_metadata_cluster")
  private OspMetadataCluster ospMetadataCluster = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("used")
  private Boolean used = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("version")
  private Long version = null;

  public Partition actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public Partition cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public Partition create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public Partition disk(DiskNestview disk) {
    this.disk = disk;
    return this;
  }

   /**
   * Get disk
   * @return disk
  **/
  @Schema(description = "")
  public DiskNestview getDisk() {
    return disk;
  }

  public void setDisk(DiskNestview disk) {
    this.disk = disk;
  }

  public Partition id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Partition omapByte(Long omapByte) {
    this.omapByte = omapByte;
    return this;
  }

   /**
   * Get omapByte
   * @return omapByte
  **/
  @Schema(description = "")
  public Long getOmapByte() {
    return omapByte;
  }

  public void setOmapByte(Long omapByte) {
    this.omapByte = omapByte;
  }

  public Partition omapDevicePath(String omapDevicePath) {
    this.omapDevicePath = omapDevicePath;
    return this;
  }

   /**
   * omap part path
   * @return omapDevicePath
  **/
  @Schema(description = "omap part path")
  public String getOmapDevicePath() {
    return omapDevicePath;
  }

  public void setOmapDevicePath(String omapDevicePath) {
    this.omapDevicePath = omapDevicePath;
  }

  public Partition ospMetadataCluster(OspMetadataCluster ospMetadataCluster) {
    this.ospMetadataCluster = ospMetadataCluster;
    return this;
  }

   /**
   * Get ospMetadataCluster
   * @return ospMetadataCluster
  **/
  @Schema(description = "")
  public OspMetadataCluster getOspMetadataCluster() {
    return ospMetadataCluster;
  }

  public void setOspMetadataCluster(OspMetadataCluster ospMetadataCluster) {
    this.ospMetadataCluster = ospMetadataCluster;
  }

  public Partition path(String path) {
    this.path = path;
    return this;
  }

   /**
   * part path, generated from part num and disk device
   * @return path
  **/
  @Schema(description = "part path, generated from part num and disk device")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public Partition size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public Partition status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Partition type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Partition update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public Partition used(Boolean used) {
    this.used = used;
    return this;
  }

   /**
   * Get used
   * @return used
  **/
  @Schema(description = "")
  public Boolean isUsed() {
    return used;
  }

  public void setUsed(Boolean used) {
    this.used = used;
  }

  public Partition uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public Partition version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Partition partition = (Partition) o;
    return Objects.equals(this.actionStatus, partition.actionStatus) &&
        Objects.equals(this.cluster, partition.cluster) &&
        Objects.equals(this.create, partition.create) &&
        Objects.equals(this.disk, partition.disk) &&
        Objects.equals(this.id, partition.id) &&
        Objects.equals(this.omapByte, partition.omapByte) &&
        Objects.equals(this.omapDevicePath, partition.omapDevicePath) &&
        Objects.equals(this.ospMetadataCluster, partition.ospMetadataCluster) &&
        Objects.equals(this.path, partition.path) &&
        Objects.equals(this.size, partition.size) &&
        Objects.equals(this.status, partition.status) &&
        Objects.equals(this.type, partition.type) &&
        Objects.equals(this.update, partition.update) &&
        Objects.equals(this.used, partition.used) &&
        Objects.equals(this.uuid, partition.uuid) &&
        Objects.equals(this.version, partition.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, disk, id, omapByte, omapDevicePath, ospMetadataCluster, path, size, status, type, update, used, uuid, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Partition {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    disk: ").append(toIndentedString(disk)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    omapByte: ").append(toIndentedString(omapByte)).append("\n");
    sb.append("    omapDevicePath: ").append(toIndentedString(omapDevicePath)).append("\n");
    sb.append("    ospMetadataCluster: ").append(toIndentedString(ospMetadataCluster)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
