/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.DfsWorm;
/**
 * DfsFileWorm
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsFileWorm {
  @SerializedName("auto_lock_time")
  private OffsetDateTime autoLockTime = null;

  @SerializedName("dfs_worm")
  private DfsWorm dfsWorm = null;

  @SerializedName("expire_time")
  private OffsetDateTime expireTime = null;

  @SerializedName("state")
  private String state = null;

  public DfsFileWorm autoLockTime(OffsetDateTime autoLockTime) {
    this.autoLockTime = autoLockTime;
    return this;
  }

   /**
   * automatic lock time of file
   * @return autoLockTime
  **/
  @Schema(description = "automatic lock time of file")
  public OffsetDateTime getAutoLockTime() {
    return autoLockTime;
  }

  public void setAutoLockTime(OffsetDateTime autoLockTime) {
    this.autoLockTime = autoLockTime;
  }

  public DfsFileWorm dfsWorm(DfsWorm dfsWorm) {
    this.dfsWorm = dfsWorm;
    return this;
  }

   /**
   * Get dfsWorm
   * @return dfsWorm
  **/
  @Schema(description = "")
  public DfsWorm getDfsWorm() {
    return dfsWorm;
  }

  public void setDfsWorm(DfsWorm dfsWorm) {
    this.dfsWorm = dfsWorm;
  }

  public DfsFileWorm expireTime(OffsetDateTime expireTime) {
    this.expireTime = expireTime;
    return this;
  }

   /**
   * worm expire time of file
   * @return expireTime
  **/
  @Schema(description = "worm expire time of file")
  public OffsetDateTime getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(OffsetDateTime expireTime) {
    this.expireTime = expireTime;
  }

  public DfsFileWorm state(String state) {
    this.state = state;
    return this;
  }

   /**
   * worm state of file
   * @return state
  **/
  @Schema(description = "worm state of file")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsFileWorm dfsFileWorm = (DfsFileWorm) o;
    return Objects.equals(this.autoLockTime, dfsFileWorm.autoLockTime) &&
        Objects.equals(this.dfsWorm, dfsFileWorm.dfsWorm) &&
        Objects.equals(this.expireTime, dfsFileWorm.expireTime) &&
        Objects.equals(this.state, dfsFileWorm.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoLockTime, dfsWorm, expireTime, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsFileWorm {\n");
    
    sb.append("    autoLockTime: ").append(toIndentedString(autoLockTime)).append("\n");
    sb.append("    dfsWorm: ").append(toIndentedString(dfsWorm)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
