/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.HostNestview;
/**
 * OspGateway contains information of a osp gateway and it&#x27;s stats.
 */
@Schema(description = "OspGateway contains information of a osp gateway and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspGateway {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("etag")
  private String etag = null;

  @SerializedName("gateway_ip")
  private String gatewayIp = null;

  @SerializedName("gateway_name")
  private String gatewayName = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("role")
  private String role = null;

  @SerializedName("s3_port")
  private Long s3Port = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("xms_port")
  private Long xmsPort = null;

  @SerializedName("zone_id")
  private Long zoneId = null;

  public OspGateway actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public OspGateway cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public OspGateway create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OspGateway description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OspGateway etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * Get etag
   * @return etag
  **/
  @Schema(description = "")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }

  public OspGateway gatewayIp(String gatewayIp) {
    this.gatewayIp = gatewayIp;
    return this;
  }

   /**
   * Get gatewayIp
   * @return gatewayIp
  **/
  @Schema(description = "")
  public String getGatewayIp() {
    return gatewayIp;
  }

  public void setGatewayIp(String gatewayIp) {
    this.gatewayIp = gatewayIp;
  }

  public OspGateway gatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
    return this;
  }

   /**
   * Get gatewayName
   * @return gatewayName
  **/
  @Schema(description = "")
  public String getGatewayName() {
    return gatewayName;
  }

  public void setGatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
  }

  public OspGateway host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public OspGateway id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OspGateway name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OspGateway role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public OspGateway s3Port(Long s3Port) {
    this.s3Port = s3Port;
    return this;
  }

   /**
   * Get s3Port
   * @return s3Port
  **/
  @Schema(description = "")
  public Long getS3Port() {
    return s3Port;
  }

  public void setS3Port(Long s3Port) {
    this.s3Port = s3Port;
  }

  public OspGateway status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OspGateway xmsPort(Long xmsPort) {
    this.xmsPort = xmsPort;
    return this;
  }

   /**
   * Get xmsPort
   * @return xmsPort
  **/
  @Schema(description = "")
  public Long getXmsPort() {
    return xmsPort;
  }

  public void setXmsPort(Long xmsPort) {
    this.xmsPort = xmsPort;
  }

  public OspGateway zoneId(Long zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public Long getZoneId() {
    return zoneId;
  }

  public void setZoneId(Long zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspGateway ospGateway = (OspGateway) o;
    return Objects.equals(this.actionStatus, ospGateway.actionStatus) &&
        Objects.equals(this.cluster, ospGateway.cluster) &&
        Objects.equals(this.create, ospGateway.create) &&
        Objects.equals(this.description, ospGateway.description) &&
        Objects.equals(this.etag, ospGateway.etag) &&
        Objects.equals(this.gatewayIp, ospGateway.gatewayIp) &&
        Objects.equals(this.gatewayName, ospGateway.gatewayName) &&
        Objects.equals(this.host, ospGateway.host) &&
        Objects.equals(this.id, ospGateway.id) &&
        Objects.equals(this.name, ospGateway.name) &&
        Objects.equals(this.role, ospGateway.role) &&
        Objects.equals(this.s3Port, ospGateway.s3Port) &&
        Objects.equals(this.status, ospGateway.status) &&
        Objects.equals(this.xmsPort, ospGateway.xmsPort) &&
        Objects.equals(this.zoneId, ospGateway.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, description, etag, gatewayIp, gatewayName, host, id, name, role, s3Port, status, xmsPort, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspGateway {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    gatewayIp: ").append(toIndentedString(gatewayIp)).append("\n");
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    s3Port: ").append(toIndentedString(s3Port)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    xmsPort: ").append(toIndentedString(xmsPort)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
