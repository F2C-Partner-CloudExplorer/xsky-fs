/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.CustomStorageClass;
import xio.sds.client.model.DfsRootfsCreateReqRootfsAuditLog;
import xio.sds.client.model.PoolPolicy;
/**
 * DfsRootfsCreateReqRootfs
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsRootfsCreateReqRootfs {
  @SerializedName("active_pool_ids")
  private List<Long> activePoolIds = null;

  @SerializedName("default_class_name")
  private String defaultClassName = null;

  @SerializedName("default_class_write_policy")
  private String defaultClassWritePolicy = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_audit_log")
  private DfsRootfsCreateReqRootfsAuditLog dfsAuditLog = null;

  @SerializedName("metadata_cluster_id")
  private Long metadataClusterId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("pool_ids")
  private List<Long> poolIds = null;

  @SerializedName("pool_policies")
  private List<PoolPolicy> poolPolicies = null;

  @SerializedName("storage_classes")
  private List<CustomStorageClass> storageClasses = null;

  public DfsRootfsCreateReqRootfs activePoolIds(List<Long> activePoolIds) {
    this.activePoolIds = activePoolIds;
    return this;
  }

  public DfsRootfsCreateReqRootfs addActivePoolIdsItem(Long activePoolIdsItem) {
    if (this.activePoolIds == null) {
      this.activePoolIds = new ArrayList<Long>();
    }
    this.activePoolIds.add(activePoolIdsItem);
    return this;
  }

   /**
   * id array of active pools
   * @return activePoolIds
  **/
  @Schema(description = "id array of active pools")
  public List<Long> getActivePoolIds() {
    return activePoolIds;
  }

  public void setActivePoolIds(List<Long> activePoolIds) {
    this.activePoolIds = activePoolIds;
  }

  public DfsRootfsCreateReqRootfs defaultClassName(String defaultClassName) {
    this.defaultClassName = defaultClassName;
    return this;
  }

   /**
   * name of default class
   * @return defaultClassName
  **/
  @Schema(description = "name of default class")
  public String getDefaultClassName() {
    return defaultClassName;
  }

  public void setDefaultClassName(String defaultClassName) {
    this.defaultClassName = defaultClassName;
  }

  public DfsRootfsCreateReqRootfs defaultClassWritePolicy(String defaultClassWritePolicy) {
    this.defaultClassWritePolicy = defaultClassWritePolicy;
    return this;
  }

   /**
   * write policy of default class
   * @return defaultClassWritePolicy
  **/
  @Schema(description = "write policy of default class")
  public String getDefaultClassWritePolicy() {
    return defaultClassWritePolicy;
  }

  public void setDefaultClassWritePolicy(String defaultClassWritePolicy) {
    this.defaultClassWritePolicy = defaultClassWritePolicy;
  }

  public DfsRootfsCreateReqRootfs description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of rootfs
   * @return description
  **/
  @Schema(description = "description of rootfs")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsRootfsCreateReqRootfs dfsAuditLog(DfsRootfsCreateReqRootfsAuditLog dfsAuditLog) {
    this.dfsAuditLog = dfsAuditLog;
    return this;
  }

   /**
   * Get dfsAuditLog
   * @return dfsAuditLog
  **/
  @Schema(required = true, description = "")
  public DfsRootfsCreateReqRootfsAuditLog getDfsAuditLog() {
    return dfsAuditLog;
  }

  public void setDfsAuditLog(DfsRootfsCreateReqRootfsAuditLog dfsAuditLog) {
    this.dfsAuditLog = dfsAuditLog;
  }

  public DfsRootfsCreateReqRootfs metadataClusterId(Long metadataClusterId) {
    this.metadataClusterId = metadataClusterId;
    return this;
  }

   /**
   * metadata cluster id
   * @return metadataClusterId
  **/
  @Schema(required = true, description = "metadata cluster id")
  public Long getMetadataClusterId() {
    return metadataClusterId;
  }

  public void setMetadataClusterId(Long metadataClusterId) {
    this.metadataClusterId = metadataClusterId;
  }

  public DfsRootfsCreateReqRootfs name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of rootfs
   * @return name
  **/
  @Schema(required = true, description = "name of rootfs")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsRootfsCreateReqRootfs poolIds(List<Long> poolIds) {
    this.poolIds = poolIds;
    return this;
  }

  public DfsRootfsCreateReqRootfs addPoolIdsItem(Long poolIdsItem) {
    if (this.poolIds == null) {
      this.poolIds = new ArrayList<Long>();
    }
    this.poolIds.add(poolIdsItem);
    return this;
  }

   /**
   * id array of pools
   * @return poolIds
  **/
  @Schema(description = "id array of pools")
  public List<Long> getPoolIds() {
    return poolIds;
  }

  public void setPoolIds(List<Long> poolIds) {
    this.poolIds = poolIds;
  }

  public DfsRootfsCreateReqRootfs poolPolicies(List<PoolPolicy> poolPolicies) {
    this.poolPolicies = poolPolicies;
    return this;
  }

  public DfsRootfsCreateReqRootfs addPoolPoliciesItem(PoolPolicy poolPoliciesItem) {
    if (this.poolPolicies == null) {
      this.poolPolicies = new ArrayList<PoolPolicy>();
    }
    this.poolPolicies.add(poolPoliciesItem);
    return this;
  }

   /**
   * active pool policy array of default class
   * @return poolPolicies
  **/
  @Schema(description = "active pool policy array of default class")
  public List<PoolPolicy> getPoolPolicies() {
    return poolPolicies;
  }

  public void setPoolPolicies(List<PoolPolicy> poolPolicies) {
    this.poolPolicies = poolPolicies;
  }

  public DfsRootfsCreateReqRootfs storageClasses(List<CustomStorageClass> storageClasses) {
    this.storageClasses = storageClasses;
    return this;
  }

  public DfsRootfsCreateReqRootfs addStorageClassesItem(CustomStorageClass storageClassesItem) {
    if (this.storageClasses == null) {
      this.storageClasses = new ArrayList<CustomStorageClass>();
    }
    this.storageClasses.add(storageClassesItem);
    return this;
  }

   /**
   * CustomStorageClasses create custom dfs storage class
   * @return storageClasses
  **/
  @Schema(description = "CustomStorageClasses create custom dfs storage class")
  public List<CustomStorageClass> getStorageClasses() {
    return storageClasses;
  }

  public void setStorageClasses(List<CustomStorageClass> storageClasses) {
    this.storageClasses = storageClasses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsRootfsCreateReqRootfs dfsRootfsCreateReqRootfs = (DfsRootfsCreateReqRootfs) o;
    return Objects.equals(this.activePoolIds, dfsRootfsCreateReqRootfs.activePoolIds) &&
        Objects.equals(this.defaultClassName, dfsRootfsCreateReqRootfs.defaultClassName) &&
        Objects.equals(this.defaultClassWritePolicy, dfsRootfsCreateReqRootfs.defaultClassWritePolicy) &&
        Objects.equals(this.description, dfsRootfsCreateReqRootfs.description) &&
        Objects.equals(this.dfsAuditLog, dfsRootfsCreateReqRootfs.dfsAuditLog) &&
        Objects.equals(this.metadataClusterId, dfsRootfsCreateReqRootfs.metadataClusterId) &&
        Objects.equals(this.name, dfsRootfsCreateReqRootfs.name) &&
        Objects.equals(this.poolIds, dfsRootfsCreateReqRootfs.poolIds) &&
        Objects.equals(this.poolPolicies, dfsRootfsCreateReqRootfs.poolPolicies) &&
        Objects.equals(this.storageClasses, dfsRootfsCreateReqRootfs.storageClasses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activePoolIds, defaultClassName, defaultClassWritePolicy, description, dfsAuditLog, metadataClusterId, name, poolIds, poolPolicies, storageClasses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsRootfsCreateReqRootfs {\n");
    
    sb.append("    activePoolIds: ").append(toIndentedString(activePoolIds)).append("\n");
    sb.append("    defaultClassName: ").append(toIndentedString(defaultClassName)).append("\n");
    sb.append("    defaultClassWritePolicy: ").append(toIndentedString(defaultClassWritePolicy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsAuditLog: ").append(toIndentedString(dfsAuditLog)).append("\n");
    sb.append("    metadataClusterId: ").append(toIndentedString(metadataClusterId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    poolIds: ").append(toIndentedString(poolIds)).append("\n");
    sb.append("    poolPolicies: ").append(toIndentedString(poolPolicies)).append("\n");
    sb.append("    storageClasses: ").append(toIndentedString(storageClasses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
