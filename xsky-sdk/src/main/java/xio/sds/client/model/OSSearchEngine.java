/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.S3LoadBalancerGroupNestview;
import xio.sds.client.model.VMFlavorNestview;
/**
 * OSSearchEngine contains information of a os search engine and it&#x27;s stats.
 */
@Schema(description = "OSSearchEngine contains information of a os search engine and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OSSearchEngine {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("allocated_size")
  private Long allocatedSize = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("gateway_data_size")
  private Long gatewayDataSize = null;

  @SerializedName("gateway_flavor")
  private VMFlavorNestview gatewayFlavor = null;

  @SerializedName("gateway_http_port")
  private Long gatewayHttpPort = null;

  @SerializedName("gateway_transport_port")
  private Long gatewayTransportPort = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("search_s3_load_balancer_group")
  private S3LoadBalancerGroupNestview searchS3LoadBalancerGroup = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("sync_s3_load_balancer_group")
  private S3LoadBalancerGroupNestview syncS3LoadBalancerGroup = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public OSSearchEngine actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public OSSearchEngine allocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
    return this;
  }

   /**
   * Get allocatedSize
   * @return allocatedSize
  **/
  @Schema(description = "")
  public Long getAllocatedSize() {
    return allocatedSize;
  }

  public void setAllocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
  }

  public OSSearchEngine cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public OSSearchEngine create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OSSearchEngine gatewayDataSize(Long gatewayDataSize) {
    this.gatewayDataSize = gatewayDataSize;
    return this;
  }

   /**
   * Get gatewayDataSize
   * @return gatewayDataSize
  **/
  @Schema(description = "")
  public Long getGatewayDataSize() {
    return gatewayDataSize;
  }

  public void setGatewayDataSize(Long gatewayDataSize) {
    this.gatewayDataSize = gatewayDataSize;
  }

  public OSSearchEngine gatewayFlavor(VMFlavorNestview gatewayFlavor) {
    this.gatewayFlavor = gatewayFlavor;
    return this;
  }

   /**
   * Get gatewayFlavor
   * @return gatewayFlavor
  **/
  @Schema(description = "")
  public VMFlavorNestview getGatewayFlavor() {
    return gatewayFlavor;
  }

  public void setGatewayFlavor(VMFlavorNestview gatewayFlavor) {
    this.gatewayFlavor = gatewayFlavor;
  }

  public OSSearchEngine gatewayHttpPort(Long gatewayHttpPort) {
    this.gatewayHttpPort = gatewayHttpPort;
    return this;
  }

   /**
   * Get gatewayHttpPort
   * @return gatewayHttpPort
  **/
  @Schema(description = "")
  public Long getGatewayHttpPort() {
    return gatewayHttpPort;
  }

  public void setGatewayHttpPort(Long gatewayHttpPort) {
    this.gatewayHttpPort = gatewayHttpPort;
  }

  public OSSearchEngine gatewayTransportPort(Long gatewayTransportPort) {
    this.gatewayTransportPort = gatewayTransportPort;
    return this;
  }

   /**
   * Get gatewayTransportPort
   * @return gatewayTransportPort
  **/
  @Schema(description = "")
  public Long getGatewayTransportPort() {
    return gatewayTransportPort;
  }

  public void setGatewayTransportPort(Long gatewayTransportPort) {
    this.gatewayTransportPort = gatewayTransportPort;
  }

  public OSSearchEngine id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OSSearchEngine searchS3LoadBalancerGroup(S3LoadBalancerGroupNestview searchS3LoadBalancerGroup) {
    this.searchS3LoadBalancerGroup = searchS3LoadBalancerGroup;
    return this;
  }

   /**
   * Get searchS3LoadBalancerGroup
   * @return searchS3LoadBalancerGroup
  **/
  @Schema(description = "")
  public S3LoadBalancerGroupNestview getSearchS3LoadBalancerGroup() {
    return searchS3LoadBalancerGroup;
  }

  public void setSearchS3LoadBalancerGroup(S3LoadBalancerGroupNestview searchS3LoadBalancerGroup) {
    this.searchS3LoadBalancerGroup = searchS3LoadBalancerGroup;
  }

  public OSSearchEngine size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public OSSearchEngine status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OSSearchEngine syncS3LoadBalancerGroup(S3LoadBalancerGroupNestview syncS3LoadBalancerGroup) {
    this.syncS3LoadBalancerGroup = syncS3LoadBalancerGroup;
    return this;
  }

   /**
   * Get syncS3LoadBalancerGroup
   * @return syncS3LoadBalancerGroup
  **/
  @Schema(description = "")
  public S3LoadBalancerGroupNestview getSyncS3LoadBalancerGroup() {
    return syncS3LoadBalancerGroup;
  }

  public void setSyncS3LoadBalancerGroup(S3LoadBalancerGroupNestview syncS3LoadBalancerGroup) {
    this.syncS3LoadBalancerGroup = syncS3LoadBalancerGroup;
  }

  public OSSearchEngine update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSSearchEngine osSearchEngine = (OSSearchEngine) o;
    return Objects.equals(this.actionStatus, osSearchEngine.actionStatus) &&
        Objects.equals(this.allocatedSize, osSearchEngine.allocatedSize) &&
        Objects.equals(this.cluster, osSearchEngine.cluster) &&
        Objects.equals(this.create, osSearchEngine.create) &&
        Objects.equals(this.gatewayDataSize, osSearchEngine.gatewayDataSize) &&
        Objects.equals(this.gatewayFlavor, osSearchEngine.gatewayFlavor) &&
        Objects.equals(this.gatewayHttpPort, osSearchEngine.gatewayHttpPort) &&
        Objects.equals(this.gatewayTransportPort, osSearchEngine.gatewayTransportPort) &&
        Objects.equals(this.id, osSearchEngine.id) &&
        Objects.equals(this.searchS3LoadBalancerGroup, osSearchEngine.searchS3LoadBalancerGroup) &&
        Objects.equals(this.size, osSearchEngine.size) &&
        Objects.equals(this.status, osSearchEngine.status) &&
        Objects.equals(this.syncS3LoadBalancerGroup, osSearchEngine.syncS3LoadBalancerGroup) &&
        Objects.equals(this.update, osSearchEngine.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, allocatedSize, cluster, create, gatewayDataSize, gatewayFlavor, gatewayHttpPort, gatewayTransportPort, id, searchS3LoadBalancerGroup, size, status, syncS3LoadBalancerGroup, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSSearchEngine {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    allocatedSize: ").append(toIndentedString(allocatedSize)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    gatewayDataSize: ").append(toIndentedString(gatewayDataSize)).append("\n");
    sb.append("    gatewayFlavor: ").append(toIndentedString(gatewayFlavor)).append("\n");
    sb.append("    gatewayHttpPort: ").append(toIndentedString(gatewayHttpPort)).append("\n");
    sb.append("    gatewayTransportPort: ").append(toIndentedString(gatewayTransportPort)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    searchS3LoadBalancerGroup: ").append(toIndentedString(searchS3LoadBalancerGroup)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    syncS3LoadBalancerGroup: ").append(toIndentedString(syncS3LoadBalancerGroup)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
