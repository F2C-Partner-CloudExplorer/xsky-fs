/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.DfsTierNestview;
import xio.sds.client.model.PoolNestview;
/**
 * DfsTierPoolPolicy define relation between pool and dfs tier +X:model:generate;plur&#x3D;DfsTierPoolPolicies;order_by&#x3D;-ID;
 */
@Schema(description = "DfsTierPoolPolicy define relation between pool and dfs tier +X:model:generate;plur=DfsTierPoolPolicies;order_by=-ID;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsTierPoolPolicy {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("dfs_storage_class")
  private DfsTierNestview dfsStorageClass = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("pool")
  private PoolNestview pool = null;

  @SerializedName("threshold")
  private Long threshold = null;

  public DfsTierPoolPolicy active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public DfsTierPoolPolicy dfsStorageClass(DfsTierNestview dfsStorageClass) {
    this.dfsStorageClass = dfsStorageClass;
    return this;
  }

   /**
   * Get dfsStorageClass
   * @return dfsStorageClass
  **/
  @Schema(description = "")
  public DfsTierNestview getDfsStorageClass() {
    return dfsStorageClass;
  }

  public void setDfsStorageClass(DfsTierNestview dfsStorageClass) {
    this.dfsStorageClass = dfsStorageClass;
  }

  public DfsTierPoolPolicy id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsTierPoolPolicy pool(PoolNestview pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Get pool
   * @return pool
  **/
  @Schema(description = "")
  public PoolNestview getPool() {
    return pool;
  }

  public void setPool(PoolNestview pool) {
    this.pool = pool;
  }

  public DfsTierPoolPolicy threshold(Long threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @Schema(description = "")
  public Long getThreshold() {
    return threshold;
  }

  public void setThreshold(Long threshold) {
    this.threshold = threshold;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsTierPoolPolicy dfsTierPoolPolicy = (DfsTierPoolPolicy) o;
    return Objects.equals(this.active, dfsTierPoolPolicy.active) &&
        Objects.equals(this.dfsStorageClass, dfsTierPoolPolicy.dfsStorageClass) &&
        Objects.equals(this.id, dfsTierPoolPolicy.id) &&
        Objects.equals(this.pool, dfsTierPoolPolicy.pool) &&
        Objects.equals(this.threshold, dfsTierPoolPolicy.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, dfsStorageClass, id, pool, threshold);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsTierPoolPolicy {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    dfsStorageClass: ").append(toIndentedString(dfsStorageClass)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
