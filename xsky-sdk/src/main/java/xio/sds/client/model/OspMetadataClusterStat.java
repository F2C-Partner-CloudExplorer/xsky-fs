/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * OspMetadataClusterStat reprents osp metadata cluster stat info
 */
@Schema(description = "OspMetadataClusterStat reprents osp metadata cluster stat info")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspMetadataClusterStat {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("moving_data_size_byte")
  private Long movingDataSizeByte = null;

  @SerializedName("read_latency_us")
  private Double readLatencyUs = null;

  @SerializedName("read_ops")
  private Double readOps = null;

  @SerializedName("total_byte")
  private Long totalByte = null;

  @SerializedName("total_kv_size_byte")
  private Long totalKvSizeByte = null;

  @SerializedName("used_byte")
  private Long usedByte = null;

  @SerializedName("write_latency_us")
  private Double writeLatencyUs = null;

  @SerializedName("write_ops")
  private Double writeOps = null;

  public OspMetadataClusterStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OspMetadataClusterStat movingDataSizeByte(Long movingDataSizeByte) {
    this.movingDataSizeByte = movingDataSizeByte;
    return this;
  }

   /**
   * Get movingDataSizeByte
   * @return movingDataSizeByte
  **/
  @Schema(description = "")
  public Long getMovingDataSizeByte() {
    return movingDataSizeByte;
  }

  public void setMovingDataSizeByte(Long movingDataSizeByte) {
    this.movingDataSizeByte = movingDataSizeByte;
  }

  public OspMetadataClusterStat readLatencyUs(Double readLatencyUs) {
    this.readLatencyUs = readLatencyUs;
    return this;
  }

   /**
   * Get readLatencyUs
   * @return readLatencyUs
  **/
  @Schema(description = "")
  public Double getReadLatencyUs() {
    return readLatencyUs;
  }

  public void setReadLatencyUs(Double readLatencyUs) {
    this.readLatencyUs = readLatencyUs;
  }

  public OspMetadataClusterStat readOps(Double readOps) {
    this.readOps = readOps;
    return this;
  }

   /**
   * Get readOps
   * @return readOps
  **/
  @Schema(description = "")
  public Double getReadOps() {
    return readOps;
  }

  public void setReadOps(Double readOps) {
    this.readOps = readOps;
  }

  public OspMetadataClusterStat totalByte(Long totalByte) {
    this.totalByte = totalByte;
    return this;
  }

   /**
   * Get totalByte
   * @return totalByte
  **/
  @Schema(description = "")
  public Long getTotalByte() {
    return totalByte;
  }

  public void setTotalByte(Long totalByte) {
    this.totalByte = totalByte;
  }

  public OspMetadataClusterStat totalKvSizeByte(Long totalKvSizeByte) {
    this.totalKvSizeByte = totalKvSizeByte;
    return this;
  }

   /**
   * Get totalKvSizeByte
   * @return totalKvSizeByte
  **/
  @Schema(description = "")
  public Long getTotalKvSizeByte() {
    return totalKvSizeByte;
  }

  public void setTotalKvSizeByte(Long totalKvSizeByte) {
    this.totalKvSizeByte = totalKvSizeByte;
  }

  public OspMetadataClusterStat usedByte(Long usedByte) {
    this.usedByte = usedByte;
    return this;
  }

   /**
   * Get usedByte
   * @return usedByte
  **/
  @Schema(description = "")
  public Long getUsedByte() {
    return usedByte;
  }

  public void setUsedByte(Long usedByte) {
    this.usedByte = usedByte;
  }

  public OspMetadataClusterStat writeLatencyUs(Double writeLatencyUs) {
    this.writeLatencyUs = writeLatencyUs;
    return this;
  }

   /**
   * Get writeLatencyUs
   * @return writeLatencyUs
  **/
  @Schema(description = "")
  public Double getWriteLatencyUs() {
    return writeLatencyUs;
  }

  public void setWriteLatencyUs(Double writeLatencyUs) {
    this.writeLatencyUs = writeLatencyUs;
  }

  public OspMetadataClusterStat writeOps(Double writeOps) {
    this.writeOps = writeOps;
    return this;
  }

   /**
   * Get writeOps
   * @return writeOps
  **/
  @Schema(description = "")
  public Double getWriteOps() {
    return writeOps;
  }

  public void setWriteOps(Double writeOps) {
    this.writeOps = writeOps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspMetadataClusterStat ospMetadataClusterStat = (OspMetadataClusterStat) o;
    return Objects.equals(this.create, ospMetadataClusterStat.create) &&
        Objects.equals(this.movingDataSizeByte, ospMetadataClusterStat.movingDataSizeByte) &&
        Objects.equals(this.readLatencyUs, ospMetadataClusterStat.readLatencyUs) &&
        Objects.equals(this.readOps, ospMetadataClusterStat.readOps) &&
        Objects.equals(this.totalByte, ospMetadataClusterStat.totalByte) &&
        Objects.equals(this.totalKvSizeByte, ospMetadataClusterStat.totalKvSizeByte) &&
        Objects.equals(this.usedByte, ospMetadataClusterStat.usedByte) &&
        Objects.equals(this.writeLatencyUs, ospMetadataClusterStat.writeLatencyUs) &&
        Objects.equals(this.writeOps, ospMetadataClusterStat.writeOps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, movingDataSizeByte, readLatencyUs, readOps, totalByte, totalKvSizeByte, usedByte, writeLatencyUs, writeOps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspMetadataClusterStat {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    movingDataSizeByte: ").append(toIndentedString(movingDataSizeByte)).append("\n");
    sb.append("    readLatencyUs: ").append(toIndentedString(readLatencyUs)).append("\n");
    sb.append("    readOps: ").append(toIndentedString(readOps)).append("\n");
    sb.append("    totalByte: ").append(toIndentedString(totalByte)).append("\n");
    sb.append("    totalKvSizeByte: ").append(toIndentedString(totalKvSizeByte)).append("\n");
    sb.append("    usedByte: ").append(toIndentedString(usedByte)).append("\n");
    sb.append("    writeLatencyUs: ").append(toIndentedString(writeLatencyUs)).append("\n");
    sb.append("    writeOps: ").append(toIndentedString(writeOps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
