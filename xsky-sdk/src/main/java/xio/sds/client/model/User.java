/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.IdentityPlatformNestview;
/**
 * User
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class User {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("external_id")
  private String externalId = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("identity_platform")
  private IdentityPlatformNestview identityPlatform = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("password_last_update")
  private OffsetDateTime passwordLastUpdate = null;

  @SerializedName("roles")
  private List<String> roles = null;

  @SerializedName("skip_guide")
  private Boolean skipGuide = null;

  public User create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * time of creating user
   * @return create
  **/
  @Schema(description = "time of creating user")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public User email(String email) {
    this.email = email;
    return this;
  }

   /**
   * email of user
   * @return email
  **/
  @Schema(description = "email of user")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public User enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * enable the user or not
   * @return enabled
  **/
  @Schema(description = "enable the user or not")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public User externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * external id of user
   * @return externalId
  **/
  @Schema(description = "external id of user")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public User id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of user
   * @return id
  **/
  @Schema(description = "id of user")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public User identityPlatform(IdentityPlatformNestview identityPlatform) {
    this.identityPlatform = identityPlatform;
    return this;
  }

   /**
   * Get identityPlatform
   * @return identityPlatform
  **/
  @Schema(description = "")
  public IdentityPlatformNestview getIdentityPlatform() {
    return identityPlatform;
  }

  public void setIdentityPlatform(IdentityPlatformNestview identityPlatform) {
    this.identityPlatform = identityPlatform;
  }

  public User name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of user
   * @return name
  **/
  @Schema(description = "name of user")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public User passwordLastUpdate(OffsetDateTime passwordLastUpdate) {
    this.passwordLastUpdate = passwordLastUpdate;
    return this;
  }

   /**
   * time of last password update
   * @return passwordLastUpdate
  **/
  @Schema(description = "time of last password update")
  public OffsetDateTime getPasswordLastUpdate() {
    return passwordLastUpdate;
  }

  public void setPasswordLastUpdate(OffsetDateTime passwordLastUpdate) {
    this.passwordLastUpdate = passwordLastUpdate;
  }

  public User roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public User addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * roles of user
   * @return roles
  **/
  @Schema(description = "roles of user")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public User skipGuide(Boolean skipGuide) {
    this.skipGuide = skipGuide;
    return this;
  }

   /**
   * skip Guide
   * @return skipGuide
  **/
  @Schema(description = "skip Guide")
  public Boolean isSkipGuide() {
    return skipGuide;
  }

  public void setSkipGuide(Boolean skipGuide) {
    this.skipGuide = skipGuide;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.create, user.create) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.enabled, user.enabled) &&
        Objects.equals(this.externalId, user.externalId) &&
        Objects.equals(this.id, user.id) &&
        Objects.equals(this.identityPlatform, user.identityPlatform) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.passwordLastUpdate, user.passwordLastUpdate) &&
        Objects.equals(this.roles, user.roles) &&
        Objects.equals(this.skipGuide, user.skipGuide);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, email, enabled, externalId, id, identityPlatform, name, passwordLastUpdate, roles, skipGuide);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identityPlatform: ").append(toIndentedString(identityPlatform)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    passwordLastUpdate: ").append(toIndentedString(passwordLastUpdate)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    skipGuide: ").append(toIndentedString(skipGuide)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
