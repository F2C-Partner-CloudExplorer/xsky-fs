/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.OspStorageClassStat;
import xio.sds.client.model.OspUserZoneStat;
/**
 * OspBucketStat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspBucketStat {
  @SerializedName("cache_allocated_size")
  private Long cacheAllocatedSize = null;

  @SerializedName("fast_flow_allocated_objects")
  private Long fastFlowAllocatedObjects = null;

  @SerializedName("rx_ops_pm")
  private Double rxOpsPm = null;

  @SerializedName("latency_del")
  private Long latencyDel = null;

  @SerializedName("origin_cdn_allocated_size")
  private Long originCdnAllocatedSize = null;

  @SerializedName("fast_flow_allocated_size")
  private Long fastFlowAllocatedSize = null;

  @SerializedName("local_utilized_size")
  private Long localUtilizedSize = null;

  @SerializedName("total_obj_expired_ops")
  private Long totalObjExpiredOps = null;

  @SerializedName("local_data_used_capacity")
  private Long localDataUsedCapacity = null;

  @SerializedName("zone_stats")
  private OspUserZoneStat zoneStats = null;

  @SerializedName("total_rx_ops")
  private Long totalRxOps = null;

  @SerializedName("latency_list")
  private Long latencyList = null;

  @SerializedName("list_latency_us")
  private Double listLatencyUs = null;

  @SerializedName("allocated_objects")
  private Long allocatedObjects = null;

  @SerializedName("total_tx_bytes")
  private Long totalTxBytes = null;

  @SerializedName("obj_expired_ops_pm")
  private Double objExpiredOpsPm = null;

  @SerializedName("cache_utilized_size")
  private Long cacheUtilizedSize = null;

  @SerializedName("local_allocated_size")
  private Long localAllocatedSize = null;

  @SerializedName("create")
  private String create = null;

  @SerializedName("utilized_size")
  private Long utilizedSize = null;

  @SerializedName("total_del_success_ops")
  private Long totalDelSuccessOps = null;

  @SerializedName("origin_cdn_allocated_objects")
  private Long originCdnAllocatedObjects = null;

  @SerializedName("total_list_success_ops")
  private Long totalListSuccessOps = null;

  @SerializedName("latency_obj_expired")
  private Long latencyObjExpired = null;

  @SerializedName("total_obj_expired_success_ops")
  private Long totalObjExpiredSuccessOps = null;

  @SerializedName("rx_bandwidth_kbyte")
  private Double rxBandwidthKbyte = null;

  @SerializedName("total_ops_pm")
  private Double totalOpsPm = null;

  @SerializedName("total_rx_success_ops")
  private Long totalRxSuccessOps = null;

  @SerializedName("del_latency_us")
  private Double delLatencyUs = null;

  @SerializedName("total_rx_bytes")
  private Long totalRxBytes = null;

  @SerializedName("external_allocated_size")
  private Long externalAllocatedSize = null;

  @SerializedName("local_allocated_objects")
  private Long localAllocatedObjects = null;

  @SerializedName("external_data_used_capacity")
  private Long externalDataUsedCapacity = null;

  @SerializedName("total_ops")
  private Long totalOps = null;

  @SerializedName("total_del_ops")
  private Long totalDelOps = null;

  @SerializedName("down_latency_us")
  private Double downLatencyUs = null;

  @SerializedName("latency_down")
  private Long latencyDown = null;

  @SerializedName("list_ops_pm")
  private Double listOpsPm = null;

  @SerializedName("external_utilized_size")
  private Long externalUtilizedSize = null;

  @SerializedName("tx_ops_pm")
  private Double txOpsPm = null;

  @SerializedName("tx_bandwidth_kbyte")
  private Double txBandwidthKbyte = null;

  @SerializedName("del_ops_pm")
  private Double delOpsPm = null;

  @SerializedName("origin_cdn_utilized_size")
  private Long originCdnUtilizedSize = null;

  @SerializedName("fast_flow_utilized_size")
  private Long fastFlowUtilizedSize = null;

  @SerializedName("up_latency_us")
  private Double upLatencyUs = null;

  @SerializedName("allocated_size")
  private Long allocatedSize = null;

  @SerializedName("total_tx_success_ops")
  private Long totalTxSuccessOps = null;

  @SerializedName("latency_up")
  private Long latencyUp = null;

  @SerializedName("cache_allocated_objects")
  private Long cacheAllocatedObjects = null;

  @SerializedName("total_list_ops")
  private Long totalListOps = null;

  @SerializedName("obj_expired_latency_us")
  private Double objExpiredLatencyUs = null;

  @SerializedName("total_tx_ops")
  private Long totalTxOps = null;

  @SerializedName("external_allocated_objects")
  private Long externalAllocatedObjects = null;

  @SerializedName("storage_classes")
  private OspStorageClassStat storageClasses = null;

  @SerializedName("total_success_ops")
  private Long totalSuccessOps = null;

  public OspBucketStat cacheAllocatedSize(Long cacheAllocatedSize) {
    this.cacheAllocatedSize = cacheAllocatedSize;
    return this;
  }

   /**
   * Get cacheAllocatedSize
   * @return cacheAllocatedSize
  **/
  @Schema(description = "")
  public Long getCacheAllocatedSize() {
    return cacheAllocatedSize;
  }

  public void setCacheAllocatedSize(Long cacheAllocatedSize) {
    this.cacheAllocatedSize = cacheAllocatedSize;
  }

  public OspBucketStat fastFlowAllocatedObjects(Long fastFlowAllocatedObjects) {
    this.fastFlowAllocatedObjects = fastFlowAllocatedObjects;
    return this;
  }

   /**
   * Get fastFlowAllocatedObjects
   * @return fastFlowAllocatedObjects
  **/
  @Schema(description = "")
  public Long getFastFlowAllocatedObjects() {
    return fastFlowAllocatedObjects;
  }

  public void setFastFlowAllocatedObjects(Long fastFlowAllocatedObjects) {
    this.fastFlowAllocatedObjects = fastFlowAllocatedObjects;
  }

  public OspBucketStat rxOpsPm(Double rxOpsPm) {
    this.rxOpsPm = rxOpsPm;
    return this;
  }

   /**
   * Get rxOpsPm
   * @return rxOpsPm
  **/
  @Schema(description = "")
  public Double getRxOpsPm() {
    return rxOpsPm;
  }

  public void setRxOpsPm(Double rxOpsPm) {
    this.rxOpsPm = rxOpsPm;
  }

  public OspBucketStat latencyDel(Long latencyDel) {
    this.latencyDel = latencyDel;
    return this;
  }

   /**
   * Get latencyDel
   * @return latencyDel
  **/
  @Schema(description = "")
  public Long getLatencyDel() {
    return latencyDel;
  }

  public void setLatencyDel(Long latencyDel) {
    this.latencyDel = latencyDel;
  }

  public OspBucketStat originCdnAllocatedSize(Long originCdnAllocatedSize) {
    this.originCdnAllocatedSize = originCdnAllocatedSize;
    return this;
  }

   /**
   * Get originCdnAllocatedSize
   * @return originCdnAllocatedSize
  **/
  @Schema(description = "")
  public Long getOriginCdnAllocatedSize() {
    return originCdnAllocatedSize;
  }

  public void setOriginCdnAllocatedSize(Long originCdnAllocatedSize) {
    this.originCdnAllocatedSize = originCdnAllocatedSize;
  }

  public OspBucketStat fastFlowAllocatedSize(Long fastFlowAllocatedSize) {
    this.fastFlowAllocatedSize = fastFlowAllocatedSize;
    return this;
  }

   /**
   * Get fastFlowAllocatedSize
   * @return fastFlowAllocatedSize
  **/
  @Schema(description = "")
  public Long getFastFlowAllocatedSize() {
    return fastFlowAllocatedSize;
  }

  public void setFastFlowAllocatedSize(Long fastFlowAllocatedSize) {
    this.fastFlowAllocatedSize = fastFlowAllocatedSize;
  }

  public OspBucketStat localUtilizedSize(Long localUtilizedSize) {
    this.localUtilizedSize = localUtilizedSize;
    return this;
  }

   /**
   * Get localUtilizedSize
   * @return localUtilizedSize
  **/
  @Schema(description = "")
  public Long getLocalUtilizedSize() {
    return localUtilizedSize;
  }

  public void setLocalUtilizedSize(Long localUtilizedSize) {
    this.localUtilizedSize = localUtilizedSize;
  }

  public OspBucketStat totalObjExpiredOps(Long totalObjExpiredOps) {
    this.totalObjExpiredOps = totalObjExpiredOps;
    return this;
  }

   /**
   * Get totalObjExpiredOps
   * @return totalObjExpiredOps
  **/
  @Schema(description = "")
  public Long getTotalObjExpiredOps() {
    return totalObjExpiredOps;
  }

  public void setTotalObjExpiredOps(Long totalObjExpiredOps) {
    this.totalObjExpiredOps = totalObjExpiredOps;
  }

  public OspBucketStat localDataUsedCapacity(Long localDataUsedCapacity) {
    this.localDataUsedCapacity = localDataUsedCapacity;
    return this;
  }

   /**
   * Get localDataUsedCapacity
   * @return localDataUsedCapacity
  **/
  @Schema(description = "")
  public Long getLocalDataUsedCapacity() {
    return localDataUsedCapacity;
  }

  public void setLocalDataUsedCapacity(Long localDataUsedCapacity) {
    this.localDataUsedCapacity = localDataUsedCapacity;
  }

  public OspBucketStat zoneStats(OspUserZoneStat zoneStats) {
    this.zoneStats = zoneStats;
    return this;
  }

   /**
   * Get zoneStats
   * @return zoneStats
  **/
  @Schema(description = "")
  public OspUserZoneStat getZoneStats() {
    return zoneStats;
  }

  public void setZoneStats(OspUserZoneStat zoneStats) {
    this.zoneStats = zoneStats;
  }

  public OspBucketStat totalRxOps(Long totalRxOps) {
    this.totalRxOps = totalRxOps;
    return this;
  }

   /**
   * Get totalRxOps
   * @return totalRxOps
  **/
  @Schema(description = "")
  public Long getTotalRxOps() {
    return totalRxOps;
  }

  public void setTotalRxOps(Long totalRxOps) {
    this.totalRxOps = totalRxOps;
  }

  public OspBucketStat latencyList(Long latencyList) {
    this.latencyList = latencyList;
    return this;
  }

   /**
   * Get latencyList
   * @return latencyList
  **/
  @Schema(description = "")
  public Long getLatencyList() {
    return latencyList;
  }

  public void setLatencyList(Long latencyList) {
    this.latencyList = latencyList;
  }

  public OspBucketStat listLatencyUs(Double listLatencyUs) {
    this.listLatencyUs = listLatencyUs;
    return this;
  }

   /**
   * Get listLatencyUs
   * @return listLatencyUs
  **/
  @Schema(description = "")
  public Double getListLatencyUs() {
    return listLatencyUs;
  }

  public void setListLatencyUs(Double listLatencyUs) {
    this.listLatencyUs = listLatencyUs;
  }

  public OspBucketStat allocatedObjects(Long allocatedObjects) {
    this.allocatedObjects = allocatedObjects;
    return this;
  }

   /**
   * Get allocatedObjects
   * @return allocatedObjects
  **/
  @Schema(description = "")
  public Long getAllocatedObjects() {
    return allocatedObjects;
  }

  public void setAllocatedObjects(Long allocatedObjects) {
    this.allocatedObjects = allocatedObjects;
  }

  public OspBucketStat totalTxBytes(Long totalTxBytes) {
    this.totalTxBytes = totalTxBytes;
    return this;
  }

   /**
   * Get totalTxBytes
   * @return totalTxBytes
  **/
  @Schema(description = "")
  public Long getTotalTxBytes() {
    return totalTxBytes;
  }

  public void setTotalTxBytes(Long totalTxBytes) {
    this.totalTxBytes = totalTxBytes;
  }

  public OspBucketStat objExpiredOpsPm(Double objExpiredOpsPm) {
    this.objExpiredOpsPm = objExpiredOpsPm;
    return this;
  }

   /**
   * Get objExpiredOpsPm
   * @return objExpiredOpsPm
  **/
  @Schema(description = "")
  public Double getObjExpiredOpsPm() {
    return objExpiredOpsPm;
  }

  public void setObjExpiredOpsPm(Double objExpiredOpsPm) {
    this.objExpiredOpsPm = objExpiredOpsPm;
  }

  public OspBucketStat cacheUtilizedSize(Long cacheUtilizedSize) {
    this.cacheUtilizedSize = cacheUtilizedSize;
    return this;
  }

   /**
   * Get cacheUtilizedSize
   * @return cacheUtilizedSize
  **/
  @Schema(description = "")
  public Long getCacheUtilizedSize() {
    return cacheUtilizedSize;
  }

  public void setCacheUtilizedSize(Long cacheUtilizedSize) {
    this.cacheUtilizedSize = cacheUtilizedSize;
  }

  public OspBucketStat localAllocatedSize(Long localAllocatedSize) {
    this.localAllocatedSize = localAllocatedSize;
    return this;
  }

   /**
   * Get localAllocatedSize
   * @return localAllocatedSize
  **/
  @Schema(description = "")
  public Long getLocalAllocatedSize() {
    return localAllocatedSize;
  }

  public void setLocalAllocatedSize(Long localAllocatedSize) {
    this.localAllocatedSize = localAllocatedSize;
  }

  public OspBucketStat create(String create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public String getCreate() {
    return create;
  }

  public void setCreate(String create) {
    this.create = create;
  }

  public OspBucketStat utilizedSize(Long utilizedSize) {
    this.utilizedSize = utilizedSize;
    return this;
  }

   /**
   * Get utilizedSize
   * @return utilizedSize
  **/
  @Schema(description = "")
  public Long getUtilizedSize() {
    return utilizedSize;
  }

  public void setUtilizedSize(Long utilizedSize) {
    this.utilizedSize = utilizedSize;
  }

  public OspBucketStat totalDelSuccessOps(Long totalDelSuccessOps) {
    this.totalDelSuccessOps = totalDelSuccessOps;
    return this;
  }

   /**
   * Get totalDelSuccessOps
   * @return totalDelSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalDelSuccessOps() {
    return totalDelSuccessOps;
  }

  public void setTotalDelSuccessOps(Long totalDelSuccessOps) {
    this.totalDelSuccessOps = totalDelSuccessOps;
  }

  public OspBucketStat originCdnAllocatedObjects(Long originCdnAllocatedObjects) {
    this.originCdnAllocatedObjects = originCdnAllocatedObjects;
    return this;
  }

   /**
   * Get originCdnAllocatedObjects
   * @return originCdnAllocatedObjects
  **/
  @Schema(description = "")
  public Long getOriginCdnAllocatedObjects() {
    return originCdnAllocatedObjects;
  }

  public void setOriginCdnAllocatedObjects(Long originCdnAllocatedObjects) {
    this.originCdnAllocatedObjects = originCdnAllocatedObjects;
  }

  public OspBucketStat totalListSuccessOps(Long totalListSuccessOps) {
    this.totalListSuccessOps = totalListSuccessOps;
    return this;
  }

   /**
   * Get totalListSuccessOps
   * @return totalListSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalListSuccessOps() {
    return totalListSuccessOps;
  }

  public void setTotalListSuccessOps(Long totalListSuccessOps) {
    this.totalListSuccessOps = totalListSuccessOps;
  }

  public OspBucketStat latencyObjExpired(Long latencyObjExpired) {
    this.latencyObjExpired = latencyObjExpired;
    return this;
  }

   /**
   * Get latencyObjExpired
   * @return latencyObjExpired
  **/
  @Schema(description = "")
  public Long getLatencyObjExpired() {
    return latencyObjExpired;
  }

  public void setLatencyObjExpired(Long latencyObjExpired) {
    this.latencyObjExpired = latencyObjExpired;
  }

  public OspBucketStat totalObjExpiredSuccessOps(Long totalObjExpiredSuccessOps) {
    this.totalObjExpiredSuccessOps = totalObjExpiredSuccessOps;
    return this;
  }

   /**
   * Get totalObjExpiredSuccessOps
   * @return totalObjExpiredSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalObjExpiredSuccessOps() {
    return totalObjExpiredSuccessOps;
  }

  public void setTotalObjExpiredSuccessOps(Long totalObjExpiredSuccessOps) {
    this.totalObjExpiredSuccessOps = totalObjExpiredSuccessOps;
  }

  public OspBucketStat rxBandwidthKbyte(Double rxBandwidthKbyte) {
    this.rxBandwidthKbyte = rxBandwidthKbyte;
    return this;
  }

   /**
   * Get rxBandwidthKbyte
   * @return rxBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getRxBandwidthKbyte() {
    return rxBandwidthKbyte;
  }

  public void setRxBandwidthKbyte(Double rxBandwidthKbyte) {
    this.rxBandwidthKbyte = rxBandwidthKbyte;
  }

  public OspBucketStat totalOpsPm(Double totalOpsPm) {
    this.totalOpsPm = totalOpsPm;
    return this;
  }

   /**
   * Get totalOpsPm
   * @return totalOpsPm
  **/
  @Schema(description = "")
  public Double getTotalOpsPm() {
    return totalOpsPm;
  }

  public void setTotalOpsPm(Double totalOpsPm) {
    this.totalOpsPm = totalOpsPm;
  }

  public OspBucketStat totalRxSuccessOps(Long totalRxSuccessOps) {
    this.totalRxSuccessOps = totalRxSuccessOps;
    return this;
  }

   /**
   * Get totalRxSuccessOps
   * @return totalRxSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalRxSuccessOps() {
    return totalRxSuccessOps;
  }

  public void setTotalRxSuccessOps(Long totalRxSuccessOps) {
    this.totalRxSuccessOps = totalRxSuccessOps;
  }

  public OspBucketStat delLatencyUs(Double delLatencyUs) {
    this.delLatencyUs = delLatencyUs;
    return this;
  }

   /**
   * Get delLatencyUs
   * @return delLatencyUs
  **/
  @Schema(description = "")
  public Double getDelLatencyUs() {
    return delLatencyUs;
  }

  public void setDelLatencyUs(Double delLatencyUs) {
    this.delLatencyUs = delLatencyUs;
  }

  public OspBucketStat totalRxBytes(Long totalRxBytes) {
    this.totalRxBytes = totalRxBytes;
    return this;
  }

   /**
   * Get totalRxBytes
   * @return totalRxBytes
  **/
  @Schema(description = "")
  public Long getTotalRxBytes() {
    return totalRxBytes;
  }

  public void setTotalRxBytes(Long totalRxBytes) {
    this.totalRxBytes = totalRxBytes;
  }

  public OspBucketStat externalAllocatedSize(Long externalAllocatedSize) {
    this.externalAllocatedSize = externalAllocatedSize;
    return this;
  }

   /**
   * Get externalAllocatedSize
   * @return externalAllocatedSize
  **/
  @Schema(description = "")
  public Long getExternalAllocatedSize() {
    return externalAllocatedSize;
  }

  public void setExternalAllocatedSize(Long externalAllocatedSize) {
    this.externalAllocatedSize = externalAllocatedSize;
  }

  public OspBucketStat localAllocatedObjects(Long localAllocatedObjects) {
    this.localAllocatedObjects = localAllocatedObjects;
    return this;
  }

   /**
   * Get localAllocatedObjects
   * @return localAllocatedObjects
  **/
  @Schema(description = "")
  public Long getLocalAllocatedObjects() {
    return localAllocatedObjects;
  }

  public void setLocalAllocatedObjects(Long localAllocatedObjects) {
    this.localAllocatedObjects = localAllocatedObjects;
  }

  public OspBucketStat externalDataUsedCapacity(Long externalDataUsedCapacity) {
    this.externalDataUsedCapacity = externalDataUsedCapacity;
    return this;
  }

   /**
   * Get externalDataUsedCapacity
   * @return externalDataUsedCapacity
  **/
  @Schema(description = "")
  public Long getExternalDataUsedCapacity() {
    return externalDataUsedCapacity;
  }

  public void setExternalDataUsedCapacity(Long externalDataUsedCapacity) {
    this.externalDataUsedCapacity = externalDataUsedCapacity;
  }

  public OspBucketStat totalOps(Long totalOps) {
    this.totalOps = totalOps;
    return this;
  }

   /**
   * Get totalOps
   * @return totalOps
  **/
  @Schema(description = "")
  public Long getTotalOps() {
    return totalOps;
  }

  public void setTotalOps(Long totalOps) {
    this.totalOps = totalOps;
  }

  public OspBucketStat totalDelOps(Long totalDelOps) {
    this.totalDelOps = totalDelOps;
    return this;
  }

   /**
   * Get totalDelOps
   * @return totalDelOps
  **/
  @Schema(description = "")
  public Long getTotalDelOps() {
    return totalDelOps;
  }

  public void setTotalDelOps(Long totalDelOps) {
    this.totalDelOps = totalDelOps;
  }

  public OspBucketStat downLatencyUs(Double downLatencyUs) {
    this.downLatencyUs = downLatencyUs;
    return this;
  }

   /**
   * Get downLatencyUs
   * @return downLatencyUs
  **/
  @Schema(description = "")
  public Double getDownLatencyUs() {
    return downLatencyUs;
  }

  public void setDownLatencyUs(Double downLatencyUs) {
    this.downLatencyUs = downLatencyUs;
  }

  public OspBucketStat latencyDown(Long latencyDown) {
    this.latencyDown = latencyDown;
    return this;
  }

   /**
   * Get latencyDown
   * @return latencyDown
  **/
  @Schema(description = "")
  public Long getLatencyDown() {
    return latencyDown;
  }

  public void setLatencyDown(Long latencyDown) {
    this.latencyDown = latencyDown;
  }

  public OspBucketStat listOpsPm(Double listOpsPm) {
    this.listOpsPm = listOpsPm;
    return this;
  }

   /**
   * Get listOpsPm
   * @return listOpsPm
  **/
  @Schema(description = "")
  public Double getListOpsPm() {
    return listOpsPm;
  }

  public void setListOpsPm(Double listOpsPm) {
    this.listOpsPm = listOpsPm;
  }

  public OspBucketStat externalUtilizedSize(Long externalUtilizedSize) {
    this.externalUtilizedSize = externalUtilizedSize;
    return this;
  }

   /**
   * Get externalUtilizedSize
   * @return externalUtilizedSize
  **/
  @Schema(description = "")
  public Long getExternalUtilizedSize() {
    return externalUtilizedSize;
  }

  public void setExternalUtilizedSize(Long externalUtilizedSize) {
    this.externalUtilizedSize = externalUtilizedSize;
  }

  public OspBucketStat txOpsPm(Double txOpsPm) {
    this.txOpsPm = txOpsPm;
    return this;
  }

   /**
   * Get txOpsPm
   * @return txOpsPm
  **/
  @Schema(description = "")
  public Double getTxOpsPm() {
    return txOpsPm;
  }

  public void setTxOpsPm(Double txOpsPm) {
    this.txOpsPm = txOpsPm;
  }

  public OspBucketStat txBandwidthKbyte(Double txBandwidthKbyte) {
    this.txBandwidthKbyte = txBandwidthKbyte;
    return this;
  }

   /**
   * Get txBandwidthKbyte
   * @return txBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getTxBandwidthKbyte() {
    return txBandwidthKbyte;
  }

  public void setTxBandwidthKbyte(Double txBandwidthKbyte) {
    this.txBandwidthKbyte = txBandwidthKbyte;
  }

  public OspBucketStat delOpsPm(Double delOpsPm) {
    this.delOpsPm = delOpsPm;
    return this;
  }

   /**
   * Get delOpsPm
   * @return delOpsPm
  **/
  @Schema(description = "")
  public Double getDelOpsPm() {
    return delOpsPm;
  }

  public void setDelOpsPm(Double delOpsPm) {
    this.delOpsPm = delOpsPm;
  }

  public OspBucketStat originCdnUtilizedSize(Long originCdnUtilizedSize) {
    this.originCdnUtilizedSize = originCdnUtilizedSize;
    return this;
  }

   /**
   * Get originCdnUtilizedSize
   * @return originCdnUtilizedSize
  **/
  @Schema(description = "")
  public Long getOriginCdnUtilizedSize() {
    return originCdnUtilizedSize;
  }

  public void setOriginCdnUtilizedSize(Long originCdnUtilizedSize) {
    this.originCdnUtilizedSize = originCdnUtilizedSize;
  }

  public OspBucketStat fastFlowUtilizedSize(Long fastFlowUtilizedSize) {
    this.fastFlowUtilizedSize = fastFlowUtilizedSize;
    return this;
  }

   /**
   * Get fastFlowUtilizedSize
   * @return fastFlowUtilizedSize
  **/
  @Schema(description = "")
  public Long getFastFlowUtilizedSize() {
    return fastFlowUtilizedSize;
  }

  public void setFastFlowUtilizedSize(Long fastFlowUtilizedSize) {
    this.fastFlowUtilizedSize = fastFlowUtilizedSize;
  }

  public OspBucketStat upLatencyUs(Double upLatencyUs) {
    this.upLatencyUs = upLatencyUs;
    return this;
  }

   /**
   * Get upLatencyUs
   * @return upLatencyUs
  **/
  @Schema(description = "")
  public Double getUpLatencyUs() {
    return upLatencyUs;
  }

  public void setUpLatencyUs(Double upLatencyUs) {
    this.upLatencyUs = upLatencyUs;
  }

  public OspBucketStat allocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
    return this;
  }

   /**
   * Get allocatedSize
   * @return allocatedSize
  **/
  @Schema(description = "")
  public Long getAllocatedSize() {
    return allocatedSize;
  }

  public void setAllocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
  }

  public OspBucketStat totalTxSuccessOps(Long totalTxSuccessOps) {
    this.totalTxSuccessOps = totalTxSuccessOps;
    return this;
  }

   /**
   * Get totalTxSuccessOps
   * @return totalTxSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalTxSuccessOps() {
    return totalTxSuccessOps;
  }

  public void setTotalTxSuccessOps(Long totalTxSuccessOps) {
    this.totalTxSuccessOps = totalTxSuccessOps;
  }

  public OspBucketStat latencyUp(Long latencyUp) {
    this.latencyUp = latencyUp;
    return this;
  }

   /**
   * Get latencyUp
   * @return latencyUp
  **/
  @Schema(description = "")
  public Long getLatencyUp() {
    return latencyUp;
  }

  public void setLatencyUp(Long latencyUp) {
    this.latencyUp = latencyUp;
  }

  public OspBucketStat cacheAllocatedObjects(Long cacheAllocatedObjects) {
    this.cacheAllocatedObjects = cacheAllocatedObjects;
    return this;
  }

   /**
   * Get cacheAllocatedObjects
   * @return cacheAllocatedObjects
  **/
  @Schema(description = "")
  public Long getCacheAllocatedObjects() {
    return cacheAllocatedObjects;
  }

  public void setCacheAllocatedObjects(Long cacheAllocatedObjects) {
    this.cacheAllocatedObjects = cacheAllocatedObjects;
  }

  public OspBucketStat totalListOps(Long totalListOps) {
    this.totalListOps = totalListOps;
    return this;
  }

   /**
   * Get totalListOps
   * @return totalListOps
  **/
  @Schema(description = "")
  public Long getTotalListOps() {
    return totalListOps;
  }

  public void setTotalListOps(Long totalListOps) {
    this.totalListOps = totalListOps;
  }

  public OspBucketStat objExpiredLatencyUs(Double objExpiredLatencyUs) {
    this.objExpiredLatencyUs = objExpiredLatencyUs;
    return this;
  }

   /**
   * Get objExpiredLatencyUs
   * @return objExpiredLatencyUs
  **/
  @Schema(description = "")
  public Double getObjExpiredLatencyUs() {
    return objExpiredLatencyUs;
  }

  public void setObjExpiredLatencyUs(Double objExpiredLatencyUs) {
    this.objExpiredLatencyUs = objExpiredLatencyUs;
  }

  public OspBucketStat totalTxOps(Long totalTxOps) {
    this.totalTxOps = totalTxOps;
    return this;
  }

   /**
   * Get totalTxOps
   * @return totalTxOps
  **/
  @Schema(description = "")
  public Long getTotalTxOps() {
    return totalTxOps;
  }

  public void setTotalTxOps(Long totalTxOps) {
    this.totalTxOps = totalTxOps;
  }

  public OspBucketStat externalAllocatedObjects(Long externalAllocatedObjects) {
    this.externalAllocatedObjects = externalAllocatedObjects;
    return this;
  }

   /**
   * Get externalAllocatedObjects
   * @return externalAllocatedObjects
  **/
  @Schema(description = "")
  public Long getExternalAllocatedObjects() {
    return externalAllocatedObjects;
  }

  public void setExternalAllocatedObjects(Long externalAllocatedObjects) {
    this.externalAllocatedObjects = externalAllocatedObjects;
  }

  public OspBucketStat storageClasses(OspStorageClassStat storageClasses) {
    this.storageClasses = storageClasses;
    return this;
  }

   /**
   * Get storageClasses
   * @return storageClasses
  **/
  @Schema(description = "")
  public OspStorageClassStat getStorageClasses() {
    return storageClasses;
  }

  public void setStorageClasses(OspStorageClassStat storageClasses) {
    this.storageClasses = storageClasses;
  }

  public OspBucketStat totalSuccessOps(Long totalSuccessOps) {
    this.totalSuccessOps = totalSuccessOps;
    return this;
  }

   /**
   * Get totalSuccessOps
   * @return totalSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalSuccessOps() {
    return totalSuccessOps;
  }

  public void setTotalSuccessOps(Long totalSuccessOps) {
    this.totalSuccessOps = totalSuccessOps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspBucketStat ospBucketStat = (OspBucketStat) o;
    return Objects.equals(this.cacheAllocatedSize, ospBucketStat.cacheAllocatedSize) &&
        Objects.equals(this.fastFlowAllocatedObjects, ospBucketStat.fastFlowAllocatedObjects) &&
        Objects.equals(this.rxOpsPm, ospBucketStat.rxOpsPm) &&
        Objects.equals(this.latencyDel, ospBucketStat.latencyDel) &&
        Objects.equals(this.originCdnAllocatedSize, ospBucketStat.originCdnAllocatedSize) &&
        Objects.equals(this.fastFlowAllocatedSize, ospBucketStat.fastFlowAllocatedSize) &&
        Objects.equals(this.localUtilizedSize, ospBucketStat.localUtilizedSize) &&
        Objects.equals(this.totalObjExpiredOps, ospBucketStat.totalObjExpiredOps) &&
        Objects.equals(this.localDataUsedCapacity, ospBucketStat.localDataUsedCapacity) &&
        Objects.equals(this.zoneStats, ospBucketStat.zoneStats) &&
        Objects.equals(this.totalRxOps, ospBucketStat.totalRxOps) &&
        Objects.equals(this.latencyList, ospBucketStat.latencyList) &&
        Objects.equals(this.listLatencyUs, ospBucketStat.listLatencyUs) &&
        Objects.equals(this.allocatedObjects, ospBucketStat.allocatedObjects) &&
        Objects.equals(this.totalTxBytes, ospBucketStat.totalTxBytes) &&
        Objects.equals(this.objExpiredOpsPm, ospBucketStat.objExpiredOpsPm) &&
        Objects.equals(this.cacheUtilizedSize, ospBucketStat.cacheUtilizedSize) &&
        Objects.equals(this.localAllocatedSize, ospBucketStat.localAllocatedSize) &&
        Objects.equals(this.create, ospBucketStat.create) &&
        Objects.equals(this.utilizedSize, ospBucketStat.utilizedSize) &&
        Objects.equals(this.totalDelSuccessOps, ospBucketStat.totalDelSuccessOps) &&
        Objects.equals(this.originCdnAllocatedObjects, ospBucketStat.originCdnAllocatedObjects) &&
        Objects.equals(this.totalListSuccessOps, ospBucketStat.totalListSuccessOps) &&
        Objects.equals(this.latencyObjExpired, ospBucketStat.latencyObjExpired) &&
        Objects.equals(this.totalObjExpiredSuccessOps, ospBucketStat.totalObjExpiredSuccessOps) &&
        Objects.equals(this.rxBandwidthKbyte, ospBucketStat.rxBandwidthKbyte) &&
        Objects.equals(this.totalOpsPm, ospBucketStat.totalOpsPm) &&
        Objects.equals(this.totalRxSuccessOps, ospBucketStat.totalRxSuccessOps) &&
        Objects.equals(this.delLatencyUs, ospBucketStat.delLatencyUs) &&
        Objects.equals(this.totalRxBytes, ospBucketStat.totalRxBytes) &&
        Objects.equals(this.externalAllocatedSize, ospBucketStat.externalAllocatedSize) &&
        Objects.equals(this.localAllocatedObjects, ospBucketStat.localAllocatedObjects) &&
        Objects.equals(this.externalDataUsedCapacity, ospBucketStat.externalDataUsedCapacity) &&
        Objects.equals(this.totalOps, ospBucketStat.totalOps) &&
        Objects.equals(this.totalDelOps, ospBucketStat.totalDelOps) &&
        Objects.equals(this.downLatencyUs, ospBucketStat.downLatencyUs) &&
        Objects.equals(this.latencyDown, ospBucketStat.latencyDown) &&
        Objects.equals(this.listOpsPm, ospBucketStat.listOpsPm) &&
        Objects.equals(this.externalUtilizedSize, ospBucketStat.externalUtilizedSize) &&
        Objects.equals(this.txOpsPm, ospBucketStat.txOpsPm) &&
        Objects.equals(this.txBandwidthKbyte, ospBucketStat.txBandwidthKbyte) &&
        Objects.equals(this.delOpsPm, ospBucketStat.delOpsPm) &&
        Objects.equals(this.originCdnUtilizedSize, ospBucketStat.originCdnUtilizedSize) &&
        Objects.equals(this.fastFlowUtilizedSize, ospBucketStat.fastFlowUtilizedSize) &&
        Objects.equals(this.upLatencyUs, ospBucketStat.upLatencyUs) &&
        Objects.equals(this.allocatedSize, ospBucketStat.allocatedSize) &&
        Objects.equals(this.totalTxSuccessOps, ospBucketStat.totalTxSuccessOps) &&
        Objects.equals(this.latencyUp, ospBucketStat.latencyUp) &&
        Objects.equals(this.cacheAllocatedObjects, ospBucketStat.cacheAllocatedObjects) &&
        Objects.equals(this.totalListOps, ospBucketStat.totalListOps) &&
        Objects.equals(this.objExpiredLatencyUs, ospBucketStat.objExpiredLatencyUs) &&
        Objects.equals(this.totalTxOps, ospBucketStat.totalTxOps) &&
        Objects.equals(this.externalAllocatedObjects, ospBucketStat.externalAllocatedObjects) &&
        Objects.equals(this.storageClasses, ospBucketStat.storageClasses) &&
        Objects.equals(this.totalSuccessOps, ospBucketStat.totalSuccessOps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheAllocatedSize, fastFlowAllocatedObjects, rxOpsPm, latencyDel, originCdnAllocatedSize, fastFlowAllocatedSize, localUtilizedSize, totalObjExpiredOps, localDataUsedCapacity, zoneStats, totalRxOps, latencyList, listLatencyUs, allocatedObjects, totalTxBytes, objExpiredOpsPm, cacheUtilizedSize, localAllocatedSize, create, utilizedSize, totalDelSuccessOps, originCdnAllocatedObjects, totalListSuccessOps, latencyObjExpired, totalObjExpiredSuccessOps, rxBandwidthKbyte, totalOpsPm, totalRxSuccessOps, delLatencyUs, totalRxBytes, externalAllocatedSize, localAllocatedObjects, externalDataUsedCapacity, totalOps, totalDelOps, downLatencyUs, latencyDown, listOpsPm, externalUtilizedSize, txOpsPm, txBandwidthKbyte, delOpsPm, originCdnUtilizedSize, fastFlowUtilizedSize, upLatencyUs, allocatedSize, totalTxSuccessOps, latencyUp, cacheAllocatedObjects, totalListOps, objExpiredLatencyUs, totalTxOps, externalAllocatedObjects, storageClasses, totalSuccessOps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspBucketStat {\n");
    
    sb.append("    cacheAllocatedSize: ").append(toIndentedString(cacheAllocatedSize)).append("\n");
    sb.append("    fastFlowAllocatedObjects: ").append(toIndentedString(fastFlowAllocatedObjects)).append("\n");
    sb.append("    rxOpsPm: ").append(toIndentedString(rxOpsPm)).append("\n");
    sb.append("    latencyDel: ").append(toIndentedString(latencyDel)).append("\n");
    sb.append("    originCdnAllocatedSize: ").append(toIndentedString(originCdnAllocatedSize)).append("\n");
    sb.append("    fastFlowAllocatedSize: ").append(toIndentedString(fastFlowAllocatedSize)).append("\n");
    sb.append("    localUtilizedSize: ").append(toIndentedString(localUtilizedSize)).append("\n");
    sb.append("    totalObjExpiredOps: ").append(toIndentedString(totalObjExpiredOps)).append("\n");
    sb.append("    localDataUsedCapacity: ").append(toIndentedString(localDataUsedCapacity)).append("\n");
    sb.append("    zoneStats: ").append(toIndentedString(zoneStats)).append("\n");
    sb.append("    totalRxOps: ").append(toIndentedString(totalRxOps)).append("\n");
    sb.append("    latencyList: ").append(toIndentedString(latencyList)).append("\n");
    sb.append("    listLatencyUs: ").append(toIndentedString(listLatencyUs)).append("\n");
    sb.append("    allocatedObjects: ").append(toIndentedString(allocatedObjects)).append("\n");
    sb.append("    totalTxBytes: ").append(toIndentedString(totalTxBytes)).append("\n");
    sb.append("    objExpiredOpsPm: ").append(toIndentedString(objExpiredOpsPm)).append("\n");
    sb.append("    cacheUtilizedSize: ").append(toIndentedString(cacheUtilizedSize)).append("\n");
    sb.append("    localAllocatedSize: ").append(toIndentedString(localAllocatedSize)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    utilizedSize: ").append(toIndentedString(utilizedSize)).append("\n");
    sb.append("    totalDelSuccessOps: ").append(toIndentedString(totalDelSuccessOps)).append("\n");
    sb.append("    originCdnAllocatedObjects: ").append(toIndentedString(originCdnAllocatedObjects)).append("\n");
    sb.append("    totalListSuccessOps: ").append(toIndentedString(totalListSuccessOps)).append("\n");
    sb.append("    latencyObjExpired: ").append(toIndentedString(latencyObjExpired)).append("\n");
    sb.append("    totalObjExpiredSuccessOps: ").append(toIndentedString(totalObjExpiredSuccessOps)).append("\n");
    sb.append("    rxBandwidthKbyte: ").append(toIndentedString(rxBandwidthKbyte)).append("\n");
    sb.append("    totalOpsPm: ").append(toIndentedString(totalOpsPm)).append("\n");
    sb.append("    totalRxSuccessOps: ").append(toIndentedString(totalRxSuccessOps)).append("\n");
    sb.append("    delLatencyUs: ").append(toIndentedString(delLatencyUs)).append("\n");
    sb.append("    totalRxBytes: ").append(toIndentedString(totalRxBytes)).append("\n");
    sb.append("    externalAllocatedSize: ").append(toIndentedString(externalAllocatedSize)).append("\n");
    sb.append("    localAllocatedObjects: ").append(toIndentedString(localAllocatedObjects)).append("\n");
    sb.append("    externalDataUsedCapacity: ").append(toIndentedString(externalDataUsedCapacity)).append("\n");
    sb.append("    totalOps: ").append(toIndentedString(totalOps)).append("\n");
    sb.append("    totalDelOps: ").append(toIndentedString(totalDelOps)).append("\n");
    sb.append("    downLatencyUs: ").append(toIndentedString(downLatencyUs)).append("\n");
    sb.append("    latencyDown: ").append(toIndentedString(latencyDown)).append("\n");
    sb.append("    listOpsPm: ").append(toIndentedString(listOpsPm)).append("\n");
    sb.append("    externalUtilizedSize: ").append(toIndentedString(externalUtilizedSize)).append("\n");
    sb.append("    txOpsPm: ").append(toIndentedString(txOpsPm)).append("\n");
    sb.append("    txBandwidthKbyte: ").append(toIndentedString(txBandwidthKbyte)).append("\n");
    sb.append("    delOpsPm: ").append(toIndentedString(delOpsPm)).append("\n");
    sb.append("    originCdnUtilizedSize: ").append(toIndentedString(originCdnUtilizedSize)).append("\n");
    sb.append("    fastFlowUtilizedSize: ").append(toIndentedString(fastFlowUtilizedSize)).append("\n");
    sb.append("    upLatencyUs: ").append(toIndentedString(upLatencyUs)).append("\n");
    sb.append("    allocatedSize: ").append(toIndentedString(allocatedSize)).append("\n");
    sb.append("    totalTxSuccessOps: ").append(toIndentedString(totalTxSuccessOps)).append("\n");
    sb.append("    latencyUp: ").append(toIndentedString(latencyUp)).append("\n");
    sb.append("    cacheAllocatedObjects: ").append(toIndentedString(cacheAllocatedObjects)).append("\n");
    sb.append("    totalListOps: ").append(toIndentedString(totalListOps)).append("\n");
    sb.append("    objExpiredLatencyUs: ").append(toIndentedString(objExpiredLatencyUs)).append("\n");
    sb.append("    totalTxOps: ").append(toIndentedString(totalTxOps)).append("\n");
    sb.append("    externalAllocatedObjects: ").append(toIndentedString(externalAllocatedObjects)).append("\n");
    sb.append("    storageClasses: ").append(toIndentedString(storageClasses)).append("\n");
    sb.append("    totalSuccessOps: ").append(toIndentedString(totalSuccessOps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
