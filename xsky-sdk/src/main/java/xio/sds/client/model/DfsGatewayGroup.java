/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.FSActiveDirectoryNestview;
import xio.sds.client.model.FSLdapNestview;
import xio.sds.client.model.SSLCertificateNestview;
/**
 * DfsGatewayGroup defines model of dfs gateway group +X:model:generate;order_by&#x3D;-ID;with_detailed +X:benchmark:
 */
@Schema(description = "DfsGatewayGroup defines model of dfs gateway group +X:model:generate;order_by=-ID;with_detailed +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsGatewayGroup {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("ad")
  private FSActiveDirectoryNestview ad = null;

  @SerializedName("bucket_num")
  private Long bucketNum = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("cpus")
  private Long cpus = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("encoding")
  private String encoding = null;

  @SerializedName("gateway_num")
  private Long gatewayNum = null;

  @SerializedName("hdfs_num")
  private Long hdfsNum = null;

  @SerializedName("hdfs_securities")
  private List<String> hdfsSecurities = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("ldap")
  private FSLdapNestview ldap = null;

  @SerializedName("memory_kbyte")
  private Long memoryKbyte = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nfs_versions")
  private List<String> nfsVersions = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("protocol_auth_type")
  private Map<String, List<String>> protocolAuthType = null;

  @SerializedName("rootfs_num")
  private Long rootfsNum = null;

  @SerializedName("s3_port")
  private Long s3Port = null;

  @SerializedName("s3_scheme")
  private String s3Scheme = null;

  @SerializedName("s3_user_num")
  private Long s3UserNum = null;

  @SerializedName("securities")
  private List<String> securities = null;

  @SerializedName("share_nums")
  private Map<String, Long> shareNums = null;

  @SerializedName("shared")
  private Boolean shared = null;

  @SerializedName("smb1_enabled")
  private Boolean smb1Enabled = null;

  @SerializedName("smb_browseable")
  private Boolean smbBrowseable = null;

  @SerializedName("smb_homes")
  private Boolean smbHomes = null;

  @SerializedName("smb_ports")
  private List<Long> smbPorts = null;

  @SerializedName("smb_type")
  private String smbType = null;

  @SerializedName("ssl_certificate")
  private SSLCertificateNestview sslCertificate = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("types")
  private List<String> types = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("zone_num")
  private Long zoneNum = null;

  public DfsGatewayGroup actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsGatewayGroup ad(FSActiveDirectoryNestview ad) {
    this.ad = ad;
    return this;
  }

   /**
   * Get ad
   * @return ad
  **/
  @Schema(description = "")
  public FSActiveDirectoryNestview getAd() {
    return ad;
  }

  public void setAd(FSActiveDirectoryNestview ad) {
    this.ad = ad;
  }

  public DfsGatewayGroup bucketNum(Long bucketNum) {
    this.bucketNum = bucketNum;
    return this;
  }

   /**
   * Get bucketNum
   * @return bucketNum
  **/
  @Schema(description = "")
  public Long getBucketNum() {
    return bucketNum;
  }

  public void setBucketNum(Long bucketNum) {
    this.bucketNum = bucketNum;
  }

  public DfsGatewayGroup cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsGatewayGroup cpus(Long cpus) {
    this.cpus = cpus;
    return this;
  }

   /**
   * container resource limit
   * @return cpus
  **/
  @Schema(description = "container resource limit")
  public Long getCpus() {
    return cpus;
  }

  public void setCpus(Long cpus) {
    this.cpus = cpus;
  }

  public DfsGatewayGroup create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsGatewayGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsGatewayGroup encoding(String encoding) {
    this.encoding = encoding;
    return this;
  }

   /**
   * Get encoding
   * @return encoding
  **/
  @Schema(description = "")
  public String getEncoding() {
    return encoding;
  }

  public void setEncoding(String encoding) {
    this.encoding = encoding;
  }

  public DfsGatewayGroup gatewayNum(Long gatewayNum) {
    this.gatewayNum = gatewayNum;
    return this;
  }

   /**
   * Get gatewayNum
   * @return gatewayNum
  **/
  @Schema(description = "")
  public Long getGatewayNum() {
    return gatewayNum;
  }

  public void setGatewayNum(Long gatewayNum) {
    this.gatewayNum = gatewayNum;
  }

  public DfsGatewayGroup hdfsNum(Long hdfsNum) {
    this.hdfsNum = hdfsNum;
    return this;
  }

   /**
   * Get hdfsNum
   * @return hdfsNum
  **/
  @Schema(description = "")
  public Long getHdfsNum() {
    return hdfsNum;
  }

  public void setHdfsNum(Long hdfsNum) {
    this.hdfsNum = hdfsNum;
  }

  public DfsGatewayGroup hdfsSecurities(List<String> hdfsSecurities) {
    this.hdfsSecurities = hdfsSecurities;
    return this;
  }

  public DfsGatewayGroup addHdfsSecuritiesItem(String hdfsSecuritiesItem) {
    if (this.hdfsSecurities == null) {
      this.hdfsSecurities = new ArrayList<String>();
    }
    this.hdfsSecurities.add(hdfsSecuritiesItem);
    return this;
  }

   /**
   * hdfs domain auth type
   * @return hdfsSecurities
  **/
  @Schema(description = "hdfs domain auth type")
  public List<String> getHdfsSecurities() {
    return hdfsSecurities;
  }

  public void setHdfsSecurities(List<String> hdfsSecurities) {
    this.hdfsSecurities = hdfsSecurities;
  }

  public DfsGatewayGroup id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsGatewayGroup ldap(FSLdapNestview ldap) {
    this.ldap = ldap;
    return this;
  }

   /**
   * Get ldap
   * @return ldap
  **/
  @Schema(description = "")
  public FSLdapNestview getLdap() {
    return ldap;
  }

  public void setLdap(FSLdapNestview ldap) {
    this.ldap = ldap;
  }

  public DfsGatewayGroup memoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
    return this;
  }

   /**
   * Get memoryKbyte
   * @return memoryKbyte
  **/
  @Schema(description = "")
  public Long getMemoryKbyte() {
    return memoryKbyte;
  }

  public void setMemoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
  }

  public DfsGatewayGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsGatewayGroup nfsVersions(List<String> nfsVersions) {
    this.nfsVersions = nfsVersions;
    return this;
  }

  public DfsGatewayGroup addNfsVersionsItem(String nfsVersionsItem) {
    if (this.nfsVersions == null) {
      this.nfsVersions = new ArrayList<String>();
    }
    this.nfsVersions.add(nfsVersionsItem);
    return this;
  }

   /**
   * NFS attributes
   * @return nfsVersions
  **/
  @Schema(description = "NFS attributes")
  public List<String> getNfsVersions() {
    return nfsVersions;
  }

  public void setNfsVersions(List<String> nfsVersions) {
    this.nfsVersions = nfsVersions;
  }

  public DfsGatewayGroup port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * FTP attributes
   * @return port
  **/
  @Schema(description = "FTP attributes")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public DfsGatewayGroup protocolAuthType(Map<String, List<String>> protocolAuthType) {
    this.protocolAuthType = protocolAuthType;
    return this;
  }

  public DfsGatewayGroup putProtocolAuthTypeItem(String key, List<String> protocolAuthTypeItem) {
    if (this.protocolAuthType == null) {
      this.protocolAuthType = new HashMap<String, List<String>>();
    }
    this.protocolAuthType.put(key, protocolAuthTypeItem);
    return this;
  }

   /**
   * Get protocolAuthType
   * @return protocolAuthType
  **/
  @Schema(description = "")
  public Map<String, List<String>> getProtocolAuthType() {
    return protocolAuthType;
  }

  public void setProtocolAuthType(Map<String, List<String>> protocolAuthType) {
    this.protocolAuthType = protocolAuthType;
  }

  public DfsGatewayGroup rootfsNum(Long rootfsNum) {
    this.rootfsNum = rootfsNum;
    return this;
  }

   /**
   * Get rootfsNum
   * @return rootfsNum
  **/
  @Schema(description = "")
  public Long getRootfsNum() {
    return rootfsNum;
  }

  public void setRootfsNum(Long rootfsNum) {
    this.rootfsNum = rootfsNum;
  }

  public DfsGatewayGroup s3Port(Long s3Port) {
    this.s3Port = s3Port;
    return this;
  }

   /**
   * Get s3Port
   * @return s3Port
  **/
  @Schema(description = "")
  public Long getS3Port() {
    return s3Port;
  }

  public void setS3Port(Long s3Port) {
    this.s3Port = s3Port;
  }

  public DfsGatewayGroup s3Scheme(String s3Scheme) {
    this.s3Scheme = s3Scheme;
    return this;
  }

   /**
   * Get s3Scheme
   * @return s3Scheme
  **/
  @Schema(description = "")
  public String getS3Scheme() {
    return s3Scheme;
  }

  public void setS3Scheme(String s3Scheme) {
    this.s3Scheme = s3Scheme;
  }

  public DfsGatewayGroup s3UserNum(Long s3UserNum) {
    this.s3UserNum = s3UserNum;
    return this;
  }

   /**
   * Get s3UserNum
   * @return s3UserNum
  **/
  @Schema(description = "")
  public Long getS3UserNum() {
    return s3UserNum;
  }

  public void setS3UserNum(Long s3UserNum) {
    this.s3UserNum = s3UserNum;
  }

  public DfsGatewayGroup securities(List<String> securities) {
    this.securities = securities;
    return this;
  }

  public DfsGatewayGroup addSecuritiesItem(String securitiesItem) {
    if (this.securities == null) {
      this.securities = new ArrayList<String>();
    }
    this.securities.add(securitiesItem);
    return this;
  }

   /**
   * Get securities
   * @return securities
  **/
  @Schema(description = "")
  public List<String> getSecurities() {
    return securities;
  }

  public void setSecurities(List<String> securities) {
    this.securities = securities;
  }

  public DfsGatewayGroup shareNums(Map<String, Long> shareNums) {
    this.shareNums = shareNums;
    return this;
  }

  public DfsGatewayGroup putShareNumsItem(String key, Long shareNumsItem) {
    if (this.shareNums == null) {
      this.shareNums = new HashMap<String, Long>();
    }
    this.shareNums.put(key, shareNumsItem);
    return this;
  }

   /**
   * Get shareNums
   * @return shareNums
  **/
  @Schema(description = "")
  public Map<String, Long> getShareNums() {
    return shareNums;
  }

  public void setShareNums(Map<String, Long> shareNums) {
    this.shareNums = shareNums;
  }

  public DfsGatewayGroup shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Get shared
   * @return shared
  **/
  @Schema(description = "")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }

  public DfsGatewayGroup smb1Enabled(Boolean smb1Enabled) {
    this.smb1Enabled = smb1Enabled;
    return this;
  }

   /**
   * Get smb1Enabled
   * @return smb1Enabled
  **/
  @Schema(description = "")
  public Boolean isSmb1Enabled() {
    return smb1Enabled;
  }

  public void setSmb1Enabled(Boolean smb1Enabled) {
    this.smb1Enabled = smb1Enabled;
  }

  public DfsGatewayGroup smbBrowseable(Boolean smbBrowseable) {
    this.smbBrowseable = smbBrowseable;
    return this;
  }

   /**
   * Get smbBrowseable
   * @return smbBrowseable
  **/
  @Schema(description = "")
  public Boolean isSmbBrowseable() {
    return smbBrowseable;
  }

  public void setSmbBrowseable(Boolean smbBrowseable) {
    this.smbBrowseable = smbBrowseable;
  }

  public DfsGatewayGroup smbHomes(Boolean smbHomes) {
    this.smbHomes = smbHomes;
    return this;
  }

   /**
   * Get smbHomes
   * @return smbHomes
  **/
  @Schema(description = "")
  public Boolean isSmbHomes() {
    return smbHomes;
  }

  public void setSmbHomes(Boolean smbHomes) {
    this.smbHomes = smbHomes;
  }

  public DfsGatewayGroup smbPorts(List<Long> smbPorts) {
    this.smbPorts = smbPorts;
    return this;
  }

  public DfsGatewayGroup addSmbPortsItem(Long smbPortsItem) {
    if (this.smbPorts == null) {
      this.smbPorts = new ArrayList<Long>();
    }
    this.smbPorts.add(smbPortsItem);
    return this;
  }

   /**
   * Get smbPorts
   * @return smbPorts
  **/
  @Schema(description = "")
  public List<Long> getSmbPorts() {
    return smbPorts;
  }

  public void setSmbPorts(List<Long> smbPorts) {
    this.smbPorts = smbPorts;
  }

  public DfsGatewayGroup smbType(String smbType) {
    this.smbType = smbType;
    return this;
  }

   /**
   * SMB attributes
   * @return smbType
  **/
  @Schema(description = "SMB attributes")
  public String getSmbType() {
    return smbType;
  }

  public void setSmbType(String smbType) {
    this.smbType = smbType;
  }

  public DfsGatewayGroup sslCertificate(SSLCertificateNestview sslCertificate) {
    this.sslCertificate = sslCertificate;
    return this;
  }

   /**
   * Get sslCertificate
   * @return sslCertificate
  **/
  @Schema(description = "")
  public SSLCertificateNestview getSslCertificate() {
    return sslCertificate;
  }

  public void setSslCertificate(SSLCertificateNestview sslCertificate) {
    this.sslCertificate = sslCertificate;
  }

  public DfsGatewayGroup status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsGatewayGroup types(List<String> types) {
    this.types = types;
    return this;
  }

  public DfsGatewayGroup addTypesItem(String typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<String>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @Schema(description = "")
  public List<String> getTypes() {
    return types;
  }

  public void setTypes(List<String> types) {
    this.types = types;
  }

  public DfsGatewayGroup update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public DfsGatewayGroup zoneNum(Long zoneNum) {
    this.zoneNum = zoneNum;
    return this;
  }

   /**
   * Get zoneNum
   * @return zoneNum
  **/
  @Schema(description = "")
  public Long getZoneNum() {
    return zoneNum;
  }

  public void setZoneNum(Long zoneNum) {
    this.zoneNum = zoneNum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsGatewayGroup dfsGatewayGroup = (DfsGatewayGroup) o;
    return Objects.equals(this.actionStatus, dfsGatewayGroup.actionStatus) &&
        Objects.equals(this.ad, dfsGatewayGroup.ad) &&
        Objects.equals(this.bucketNum, dfsGatewayGroup.bucketNum) &&
        Objects.equals(this.cluster, dfsGatewayGroup.cluster) &&
        Objects.equals(this.cpus, dfsGatewayGroup.cpus) &&
        Objects.equals(this.create, dfsGatewayGroup.create) &&
        Objects.equals(this.description, dfsGatewayGroup.description) &&
        Objects.equals(this.encoding, dfsGatewayGroup.encoding) &&
        Objects.equals(this.gatewayNum, dfsGatewayGroup.gatewayNum) &&
        Objects.equals(this.hdfsNum, dfsGatewayGroup.hdfsNum) &&
        Objects.equals(this.hdfsSecurities, dfsGatewayGroup.hdfsSecurities) &&
        Objects.equals(this.id, dfsGatewayGroup.id) &&
        Objects.equals(this.ldap, dfsGatewayGroup.ldap) &&
        Objects.equals(this.memoryKbyte, dfsGatewayGroup.memoryKbyte) &&
        Objects.equals(this.name, dfsGatewayGroup.name) &&
        Objects.equals(this.nfsVersions, dfsGatewayGroup.nfsVersions) &&
        Objects.equals(this.port, dfsGatewayGroup.port) &&
        Objects.equals(this.protocolAuthType, dfsGatewayGroup.protocolAuthType) &&
        Objects.equals(this.rootfsNum, dfsGatewayGroup.rootfsNum) &&
        Objects.equals(this.s3Port, dfsGatewayGroup.s3Port) &&
        Objects.equals(this.s3Scheme, dfsGatewayGroup.s3Scheme) &&
        Objects.equals(this.s3UserNum, dfsGatewayGroup.s3UserNum) &&
        Objects.equals(this.securities, dfsGatewayGroup.securities) &&
        Objects.equals(this.shareNums, dfsGatewayGroup.shareNums) &&
        Objects.equals(this.shared, dfsGatewayGroup.shared) &&
        Objects.equals(this.smb1Enabled, dfsGatewayGroup.smb1Enabled) &&
        Objects.equals(this.smbBrowseable, dfsGatewayGroup.smbBrowseable) &&
        Objects.equals(this.smbHomes, dfsGatewayGroup.smbHomes) &&
        Objects.equals(this.smbPorts, dfsGatewayGroup.smbPorts) &&
        Objects.equals(this.smbType, dfsGatewayGroup.smbType) &&
        Objects.equals(this.sslCertificate, dfsGatewayGroup.sslCertificate) &&
        Objects.equals(this.status, dfsGatewayGroup.status) &&
        Objects.equals(this.types, dfsGatewayGroup.types) &&
        Objects.equals(this.update, dfsGatewayGroup.update) &&
        Objects.equals(this.zoneNum, dfsGatewayGroup.zoneNum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, ad, bucketNum, cluster, cpus, create, description, encoding, gatewayNum, hdfsNum, hdfsSecurities, id, ldap, memoryKbyte, name, nfsVersions, port, protocolAuthType, rootfsNum, s3Port, s3Scheme, s3UserNum, securities, shareNums, shared, smb1Enabled, smbBrowseable, smbHomes, smbPorts, smbType, sslCertificate, status, types, update, zoneNum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsGatewayGroup {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    ad: ").append(toIndentedString(ad)).append("\n");
    sb.append("    bucketNum: ").append(toIndentedString(bucketNum)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    cpus: ").append(toIndentedString(cpus)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    gatewayNum: ").append(toIndentedString(gatewayNum)).append("\n");
    sb.append("    hdfsNum: ").append(toIndentedString(hdfsNum)).append("\n");
    sb.append("    hdfsSecurities: ").append(toIndentedString(hdfsSecurities)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ldap: ").append(toIndentedString(ldap)).append("\n");
    sb.append("    memoryKbyte: ").append(toIndentedString(memoryKbyte)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfsVersions: ").append(toIndentedString(nfsVersions)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    protocolAuthType: ").append(toIndentedString(protocolAuthType)).append("\n");
    sb.append("    rootfsNum: ").append(toIndentedString(rootfsNum)).append("\n");
    sb.append("    s3Port: ").append(toIndentedString(s3Port)).append("\n");
    sb.append("    s3Scheme: ").append(toIndentedString(s3Scheme)).append("\n");
    sb.append("    s3UserNum: ").append(toIndentedString(s3UserNum)).append("\n");
    sb.append("    securities: ").append(toIndentedString(securities)).append("\n");
    sb.append("    shareNums: ").append(toIndentedString(shareNums)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    smb1Enabled: ").append(toIndentedString(smb1Enabled)).append("\n");
    sb.append("    smbBrowseable: ").append(toIndentedString(smbBrowseable)).append("\n");
    sb.append("    smbHomes: ").append(toIndentedString(smbHomes)).append("\n");
    sb.append("    smbPorts: ").append(toIndentedString(smbPorts)).append("\n");
    sb.append("    smbType: ").append(toIndentedString(smbType)).append("\n");
    sb.append("    sslCertificate: ").append(toIndentedString(sslCertificate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    zoneNum: ").append(toIndentedString(zoneNum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
