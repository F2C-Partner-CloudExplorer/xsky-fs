/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * DfsQosStat records dfs qos stat info
 */
@Schema(description = "DfsQosStat records dfs qos stat info")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsQosStat {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("read_bandwidth")
  private Long readBandwidth = null;

  @SerializedName("read_object")
  private Long readObject = null;

  @SerializedName("total_bandwidth")
  private Long totalBandwidth = null;

  @SerializedName("total_object")
  private Long totalObject = null;

  @SerializedName("write_bandwidth")
  private Long writeBandwidth = null;

  @SerializedName("write_object")
  private Long writeObject = null;

  public DfsQosStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsQosStat readBandwidth(Long readBandwidth) {
    this.readBandwidth = readBandwidth;
    return this;
  }

   /**
   * Get readBandwidth
   * @return readBandwidth
  **/
  @Schema(description = "")
  public Long getReadBandwidth() {
    return readBandwidth;
  }

  public void setReadBandwidth(Long readBandwidth) {
    this.readBandwidth = readBandwidth;
  }

  public DfsQosStat readObject(Long readObject) {
    this.readObject = readObject;
    return this;
  }

   /**
   * Get readObject
   * @return readObject
  **/
  @Schema(description = "")
  public Long getReadObject() {
    return readObject;
  }

  public void setReadObject(Long readObject) {
    this.readObject = readObject;
  }

  public DfsQosStat totalBandwidth(Long totalBandwidth) {
    this.totalBandwidth = totalBandwidth;
    return this;
  }

   /**
   * Get totalBandwidth
   * @return totalBandwidth
  **/
  @Schema(description = "")
  public Long getTotalBandwidth() {
    return totalBandwidth;
  }

  public void setTotalBandwidth(Long totalBandwidth) {
    this.totalBandwidth = totalBandwidth;
  }

  public DfsQosStat totalObject(Long totalObject) {
    this.totalObject = totalObject;
    return this;
  }

   /**
   * Get totalObject
   * @return totalObject
  **/
  @Schema(description = "")
  public Long getTotalObject() {
    return totalObject;
  }

  public void setTotalObject(Long totalObject) {
    this.totalObject = totalObject;
  }

  public DfsQosStat writeBandwidth(Long writeBandwidth) {
    this.writeBandwidth = writeBandwidth;
    return this;
  }

   /**
   * Get writeBandwidth
   * @return writeBandwidth
  **/
  @Schema(description = "")
  public Long getWriteBandwidth() {
    return writeBandwidth;
  }

  public void setWriteBandwidth(Long writeBandwidth) {
    this.writeBandwidth = writeBandwidth;
  }

  public DfsQosStat writeObject(Long writeObject) {
    this.writeObject = writeObject;
    return this;
  }

   /**
   * Get writeObject
   * @return writeObject
  **/
  @Schema(description = "")
  public Long getWriteObject() {
    return writeObject;
  }

  public void setWriteObject(Long writeObject) {
    this.writeObject = writeObject;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsQosStat dfsQosStat = (DfsQosStat) o;
    return Objects.equals(this.create, dfsQosStat.create) &&
        Objects.equals(this.readBandwidth, dfsQosStat.readBandwidth) &&
        Objects.equals(this.readObject, dfsQosStat.readObject) &&
        Objects.equals(this.totalBandwidth, dfsQosStat.totalBandwidth) &&
        Objects.equals(this.totalObject, dfsQosStat.totalObject) &&
        Objects.equals(this.writeBandwidth, dfsQosStat.writeBandwidth) &&
        Objects.equals(this.writeObject, dfsQosStat.writeObject);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, readBandwidth, readObject, totalBandwidth, totalObject, writeBandwidth, writeObject);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsQosStat {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    readBandwidth: ").append(toIndentedString(readBandwidth)).append("\n");
    sb.append("    readObject: ").append(toIndentedString(readObject)).append("\n");
    sb.append("    totalBandwidth: ").append(toIndentedString(totalBandwidth)).append("\n");
    sb.append("    totalObject: ").append(toIndentedString(totalObject)).append("\n");
    sb.append("    writeBandwidth: ").append(toIndentedString(writeBandwidth)).append("\n");
    sb.append("    writeObject: ").append(toIndentedString(writeObject)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
