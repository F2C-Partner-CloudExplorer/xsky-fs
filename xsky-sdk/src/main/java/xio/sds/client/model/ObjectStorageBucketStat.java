/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.OSBucketUsageCategory;
import xio.sds.client.model.OSSample;
import xio.sds.client.model.OSStorageClassStat;
/**
 * ObjectStorageBucketStat define the object storage bucket statistics
 */
@Schema(description = "ObjectStorageBucketStat define the object storage bucket statistics")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class ObjectStorageBucketStat extends OSSample {
  @SerializedName("allocated_objects")
  private Long allocatedObjects = null;

  @SerializedName("allocated_size")
  private Long allocatedSize = null;

  @SerializedName("cache_allocated_objects")
  private Long cacheAllocatedObjects = null;

  @SerializedName("cache_allocated_size")
  private Long cacheAllocatedSize = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("del_ops_pm")
  private Double delOpsPm = null;

  @SerializedName("down_latency_us")
  private Double downLatencyUs = null;

  @SerializedName("external_allocated_objects")
  private Long externalAllocatedObjects = null;

  @SerializedName("external_allocated_size")
  private Long externalAllocatedSize = null;

  @SerializedName("latency_down")
  private Long latencyDown = null;

  @SerializedName("latency_up")
  private Long latencyUp = null;

  @SerializedName("list_ops_pm")
  private Double listOpsPm = null;

  @SerializedName("local_allocated_objects")
  private Long localAllocatedObjects = null;

  @SerializedName("local_allocated_size")
  private Long localAllocatedSize = null;

  @SerializedName("num_down")
  private Long numDown = null;

  @SerializedName("num_up")
  private Long numUp = null;

  @SerializedName("rx_bandwidth_kbyte")
  private Double rxBandwidthKbyte = null;

  @SerializedName("rx_ops_pm")
  private Double rxOpsPm = null;

  @SerializedName("storage_classes")
  private Map<String, OSStorageClassStat> storageClasses = null;

  @SerializedName("total_del_ops")
  private Long totalDelOps = null;

  @SerializedName("total_del_success_ops")
  private Long totalDelSuccessOps = null;

  @SerializedName("total_rx_bytes")
  private Long totalRxBytes = null;

  @SerializedName("total_rx_ops")
  private Long totalRxOps = null;

  @SerializedName("total_rx_success_ops")
  private Long totalRxSuccessOps = null;

  @SerializedName("total_tx_bytes")
  private Long totalTxBytes = null;

  @SerializedName("total_tx_ops")
  private Long totalTxOps = null;

  @SerializedName("total_tx_success_ops")
  private Long totalTxSuccessOps = null;

  @SerializedName("tx_bandwidth_kbyte")
  private Double txBandwidthKbyte = null;

  @SerializedName("tx_ops_pm")
  private Double txOpsPm = null;

  @SerializedName("up_latency_us")
  private Double upLatencyUs = null;

  public ObjectStorageBucketStat allocatedObjects(Long allocatedObjects) {
    this.allocatedObjects = allocatedObjects;
    return this;
  }

   /**
   * Get allocatedObjects
   * @return allocatedObjects
  **/
  @Schema(description = "")
  public Long getAllocatedObjects() {
    return allocatedObjects;
  }

  public void setAllocatedObjects(Long allocatedObjects) {
    this.allocatedObjects = allocatedObjects;
  }

  public ObjectStorageBucketStat allocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
    return this;
  }

   /**
   * Get allocatedSize
   * @return allocatedSize
  **/
  @Schema(description = "")
  public Long getAllocatedSize() {
    return allocatedSize;
  }

  public void setAllocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
  }

  public ObjectStorageBucketStat cacheAllocatedObjects(Long cacheAllocatedObjects) {
    this.cacheAllocatedObjects = cacheAllocatedObjects;
    return this;
  }

   /**
   * Get cacheAllocatedObjects
   * @return cacheAllocatedObjects
  **/
  @Schema(description = "")
  public Long getCacheAllocatedObjects() {
    return cacheAllocatedObjects;
  }

  public void setCacheAllocatedObjects(Long cacheAllocatedObjects) {
    this.cacheAllocatedObjects = cacheAllocatedObjects;
  }

  public ObjectStorageBucketStat cacheAllocatedSize(Long cacheAllocatedSize) {
    this.cacheAllocatedSize = cacheAllocatedSize;
    return this;
  }

   /**
   * Get cacheAllocatedSize
   * @return cacheAllocatedSize
  **/
  @Schema(description = "")
  public Long getCacheAllocatedSize() {
    return cacheAllocatedSize;
  }

  public void setCacheAllocatedSize(Long cacheAllocatedSize) {
    this.cacheAllocatedSize = cacheAllocatedSize;
  }

  public ObjectStorageBucketStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public ObjectStorageBucketStat delOpsPm(Double delOpsPm) {
    this.delOpsPm = delOpsPm;
    return this;
  }

   /**
   * Get delOpsPm
   * @return delOpsPm
  **/
  @Schema(description = "")
  public Double getDelOpsPm() {
    return delOpsPm;
  }

  public void setDelOpsPm(Double delOpsPm) {
    this.delOpsPm = delOpsPm;
  }

  public ObjectStorageBucketStat downLatencyUs(Double downLatencyUs) {
    this.downLatencyUs = downLatencyUs;
    return this;
  }

   /**
   * Get downLatencyUs
   * @return downLatencyUs
  **/
  @Schema(description = "")
  public Double getDownLatencyUs() {
    return downLatencyUs;
  }

  public void setDownLatencyUs(Double downLatencyUs) {
    this.downLatencyUs = downLatencyUs;
  }

  public ObjectStorageBucketStat externalAllocatedObjects(Long externalAllocatedObjects) {
    this.externalAllocatedObjects = externalAllocatedObjects;
    return this;
  }

   /**
   * Get externalAllocatedObjects
   * @return externalAllocatedObjects
  **/
  @Schema(description = "")
  public Long getExternalAllocatedObjects() {
    return externalAllocatedObjects;
  }

  public void setExternalAllocatedObjects(Long externalAllocatedObjects) {
    this.externalAllocatedObjects = externalAllocatedObjects;
  }

  public ObjectStorageBucketStat externalAllocatedSize(Long externalAllocatedSize) {
    this.externalAllocatedSize = externalAllocatedSize;
    return this;
  }

   /**
   * Get externalAllocatedSize
   * @return externalAllocatedSize
  **/
  @Schema(description = "")
  public Long getExternalAllocatedSize() {
    return externalAllocatedSize;
  }

  public void setExternalAllocatedSize(Long externalAllocatedSize) {
    this.externalAllocatedSize = externalAllocatedSize;
  }

  public ObjectStorageBucketStat latencyDown(Long latencyDown) {
    this.latencyDown = latencyDown;
    return this;
  }

   /**
   * Get latencyDown
   * @return latencyDown
  **/
  @Schema(description = "")
  public Long getLatencyDown() {
    return latencyDown;
  }

  public void setLatencyDown(Long latencyDown) {
    this.latencyDown = latencyDown;
  }

  public ObjectStorageBucketStat latencyUp(Long latencyUp) {
    this.latencyUp = latencyUp;
    return this;
  }

   /**
   * Get latencyUp
   * @return latencyUp
  **/
  @Schema(description = "")
  public Long getLatencyUp() {
    return latencyUp;
  }

  public void setLatencyUp(Long latencyUp) {
    this.latencyUp = latencyUp;
  }

  public ObjectStorageBucketStat listOpsPm(Double listOpsPm) {
    this.listOpsPm = listOpsPm;
    return this;
  }

   /**
   * Get listOpsPm
   * @return listOpsPm
  **/
  @Schema(description = "")
  public Double getListOpsPm() {
    return listOpsPm;
  }

  public void setListOpsPm(Double listOpsPm) {
    this.listOpsPm = listOpsPm;
  }

  public ObjectStorageBucketStat localAllocatedObjects(Long localAllocatedObjects) {
    this.localAllocatedObjects = localAllocatedObjects;
    return this;
  }

   /**
   * Get localAllocatedObjects
   * @return localAllocatedObjects
  **/
  @Schema(description = "")
  public Long getLocalAllocatedObjects() {
    return localAllocatedObjects;
  }

  public void setLocalAllocatedObjects(Long localAllocatedObjects) {
    this.localAllocatedObjects = localAllocatedObjects;
  }

  public ObjectStorageBucketStat localAllocatedSize(Long localAllocatedSize) {
    this.localAllocatedSize = localAllocatedSize;
    return this;
  }

   /**
   * Get localAllocatedSize
   * @return localAllocatedSize
  **/
  @Schema(description = "")
  public Long getLocalAllocatedSize() {
    return localAllocatedSize;
  }

  public void setLocalAllocatedSize(Long localAllocatedSize) {
    this.localAllocatedSize = localAllocatedSize;
  }

  public ObjectStorageBucketStat numDown(Long numDown) {
    this.numDown = numDown;
    return this;
  }

   /**
   * Get numDown
   * @return numDown
  **/
  @Schema(description = "")
  public Long getNumDown() {
    return numDown;
  }

  public void setNumDown(Long numDown) {
    this.numDown = numDown;
  }

  public ObjectStorageBucketStat numUp(Long numUp) {
    this.numUp = numUp;
    return this;
  }

   /**
   * Get numUp
   * @return numUp
  **/
  @Schema(description = "")
  public Long getNumUp() {
    return numUp;
  }

  public void setNumUp(Long numUp) {
    this.numUp = numUp;
  }

  public ObjectStorageBucketStat rxBandwidthKbyte(Double rxBandwidthKbyte) {
    this.rxBandwidthKbyte = rxBandwidthKbyte;
    return this;
  }

   /**
   * Get rxBandwidthKbyte
   * @return rxBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getRxBandwidthKbyte() {
    return rxBandwidthKbyte;
  }

  public void setRxBandwidthKbyte(Double rxBandwidthKbyte) {
    this.rxBandwidthKbyte = rxBandwidthKbyte;
  }

  public ObjectStorageBucketStat rxOpsPm(Double rxOpsPm) {
    this.rxOpsPm = rxOpsPm;
    return this;
  }

   /**
   * Get rxOpsPm
   * @return rxOpsPm
  **/
  @Schema(description = "")
  public Double getRxOpsPm() {
    return rxOpsPm;
  }

  public void setRxOpsPm(Double rxOpsPm) {
    this.rxOpsPm = rxOpsPm;
  }

  public ObjectStorageBucketStat storageClasses(Map<String, OSStorageClassStat> storageClasses) {
    this.storageClasses = storageClasses;
    return this;
  }

  public ObjectStorageBucketStat putStorageClassesItem(String key, OSStorageClassStat storageClassesItem) {
    if (this.storageClasses == null) {
      this.storageClasses = new HashMap<String, OSStorageClassStat>();
    }
    this.storageClasses.put(key, storageClassesItem);
    return this;
  }

   /**
   * Get storageClasses
   * @return storageClasses
  **/
  @Schema(description = "")
  public Map<String, OSStorageClassStat> getStorageClasses() {
    return storageClasses;
  }

  public void setStorageClasses(Map<String, OSStorageClassStat> storageClasses) {
    this.storageClasses = storageClasses;
  }

  public ObjectStorageBucketStat totalDelOps(Long totalDelOps) {
    this.totalDelOps = totalDelOps;
    return this;
  }

   /**
   * Get totalDelOps
   * @return totalDelOps
  **/
  @Schema(description = "")
  public Long getTotalDelOps() {
    return totalDelOps;
  }

  public void setTotalDelOps(Long totalDelOps) {
    this.totalDelOps = totalDelOps;
  }

  public ObjectStorageBucketStat totalDelSuccessOps(Long totalDelSuccessOps) {
    this.totalDelSuccessOps = totalDelSuccessOps;
    return this;
  }

   /**
   * Get totalDelSuccessOps
   * @return totalDelSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalDelSuccessOps() {
    return totalDelSuccessOps;
  }

  public void setTotalDelSuccessOps(Long totalDelSuccessOps) {
    this.totalDelSuccessOps = totalDelSuccessOps;
  }

  public ObjectStorageBucketStat totalRxBytes(Long totalRxBytes) {
    this.totalRxBytes = totalRxBytes;
    return this;
  }

   /**
   * Get totalRxBytes
   * @return totalRxBytes
  **/
  @Schema(description = "")
  public Long getTotalRxBytes() {
    return totalRxBytes;
  }

  public void setTotalRxBytes(Long totalRxBytes) {
    this.totalRxBytes = totalRxBytes;
  }

  public ObjectStorageBucketStat totalRxOps(Long totalRxOps) {
    this.totalRxOps = totalRxOps;
    return this;
  }

   /**
   * Get totalRxOps
   * @return totalRxOps
  **/
  @Schema(description = "")
  public Long getTotalRxOps() {
    return totalRxOps;
  }

  public void setTotalRxOps(Long totalRxOps) {
    this.totalRxOps = totalRxOps;
  }

  public ObjectStorageBucketStat totalRxSuccessOps(Long totalRxSuccessOps) {
    this.totalRxSuccessOps = totalRxSuccessOps;
    return this;
  }

   /**
   * Get totalRxSuccessOps
   * @return totalRxSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalRxSuccessOps() {
    return totalRxSuccessOps;
  }

  public void setTotalRxSuccessOps(Long totalRxSuccessOps) {
    this.totalRxSuccessOps = totalRxSuccessOps;
  }

  public ObjectStorageBucketStat totalTxBytes(Long totalTxBytes) {
    this.totalTxBytes = totalTxBytes;
    return this;
  }

   /**
   * Get totalTxBytes
   * @return totalTxBytes
  **/
  @Schema(description = "")
  public Long getTotalTxBytes() {
    return totalTxBytes;
  }

  public void setTotalTxBytes(Long totalTxBytes) {
    this.totalTxBytes = totalTxBytes;
  }

  public ObjectStorageBucketStat totalTxOps(Long totalTxOps) {
    this.totalTxOps = totalTxOps;
    return this;
  }

   /**
   * Get totalTxOps
   * @return totalTxOps
  **/
  @Schema(description = "")
  public Long getTotalTxOps() {
    return totalTxOps;
  }

  public void setTotalTxOps(Long totalTxOps) {
    this.totalTxOps = totalTxOps;
  }

  public ObjectStorageBucketStat totalTxSuccessOps(Long totalTxSuccessOps) {
    this.totalTxSuccessOps = totalTxSuccessOps;
    return this;
  }

   /**
   * Get totalTxSuccessOps
   * @return totalTxSuccessOps
  **/
  @Schema(description = "")
  public Long getTotalTxSuccessOps() {
    return totalTxSuccessOps;
  }

  public void setTotalTxSuccessOps(Long totalTxSuccessOps) {
    this.totalTxSuccessOps = totalTxSuccessOps;
  }

  public ObjectStorageBucketStat txBandwidthKbyte(Double txBandwidthKbyte) {
    this.txBandwidthKbyte = txBandwidthKbyte;
    return this;
  }

   /**
   * Get txBandwidthKbyte
   * @return txBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getTxBandwidthKbyte() {
    return txBandwidthKbyte;
  }

  public void setTxBandwidthKbyte(Double txBandwidthKbyte) {
    this.txBandwidthKbyte = txBandwidthKbyte;
  }

  public ObjectStorageBucketStat txOpsPm(Double txOpsPm) {
    this.txOpsPm = txOpsPm;
    return this;
  }

   /**
   * Get txOpsPm
   * @return txOpsPm
  **/
  @Schema(description = "")
  public Double getTxOpsPm() {
    return txOpsPm;
  }

  public void setTxOpsPm(Double txOpsPm) {
    this.txOpsPm = txOpsPm;
  }

  public ObjectStorageBucketStat upLatencyUs(Double upLatencyUs) {
    this.upLatencyUs = upLatencyUs;
    return this;
  }

   /**
   * Get upLatencyUs
   * @return upLatencyUs
  **/
  @Schema(description = "")
  public Double getUpLatencyUs() {
    return upLatencyUs;
  }

  public void setUpLatencyUs(Double upLatencyUs) {
    this.upLatencyUs = upLatencyUs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectStorageBucketStat objectStorageBucketStat = (ObjectStorageBucketStat) o;
    return Objects.equals(this.allocatedObjects, objectStorageBucketStat.allocatedObjects) &&
        Objects.equals(this.allocatedSize, objectStorageBucketStat.allocatedSize) &&
        Objects.equals(this.cacheAllocatedObjects, objectStorageBucketStat.cacheAllocatedObjects) &&
        Objects.equals(this.cacheAllocatedSize, objectStorageBucketStat.cacheAllocatedSize) &&
        Objects.equals(this.create, objectStorageBucketStat.create) &&
        Objects.equals(this.delOpsPm, objectStorageBucketStat.delOpsPm) &&
        Objects.equals(this.downLatencyUs, objectStorageBucketStat.downLatencyUs) &&
        Objects.equals(this.externalAllocatedObjects, objectStorageBucketStat.externalAllocatedObjects) &&
        Objects.equals(this.externalAllocatedSize, objectStorageBucketStat.externalAllocatedSize) &&
        Objects.equals(this.latencyDown, objectStorageBucketStat.latencyDown) &&
        Objects.equals(this.latencyUp, objectStorageBucketStat.latencyUp) &&
        Objects.equals(this.listOpsPm, objectStorageBucketStat.listOpsPm) &&
        Objects.equals(this.localAllocatedObjects, objectStorageBucketStat.localAllocatedObjects) &&
        Objects.equals(this.localAllocatedSize, objectStorageBucketStat.localAllocatedSize) &&
        Objects.equals(this.numDown, objectStorageBucketStat.numDown) &&
        Objects.equals(this.numUp, objectStorageBucketStat.numUp) &&
        Objects.equals(this.rxBandwidthKbyte, objectStorageBucketStat.rxBandwidthKbyte) &&
        Objects.equals(this.rxOpsPm, objectStorageBucketStat.rxOpsPm) &&
        Objects.equals(this.storageClasses, objectStorageBucketStat.storageClasses) &&
        Objects.equals(this.totalDelOps, objectStorageBucketStat.totalDelOps) &&
        Objects.equals(this.totalDelSuccessOps, objectStorageBucketStat.totalDelSuccessOps) &&
        Objects.equals(this.totalRxBytes, objectStorageBucketStat.totalRxBytes) &&
        Objects.equals(this.totalRxOps, objectStorageBucketStat.totalRxOps) &&
        Objects.equals(this.totalRxSuccessOps, objectStorageBucketStat.totalRxSuccessOps) &&
        Objects.equals(this.totalTxBytes, objectStorageBucketStat.totalTxBytes) &&
        Objects.equals(this.totalTxOps, objectStorageBucketStat.totalTxOps) &&
        Objects.equals(this.totalTxSuccessOps, objectStorageBucketStat.totalTxSuccessOps) &&
        Objects.equals(this.txBandwidthKbyte, objectStorageBucketStat.txBandwidthKbyte) &&
        Objects.equals(this.txOpsPm, objectStorageBucketStat.txOpsPm) &&
        Objects.equals(this.upLatencyUs, objectStorageBucketStat.upLatencyUs) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocatedObjects, allocatedSize, cacheAllocatedObjects, cacheAllocatedSize, create, delOpsPm, downLatencyUs, externalAllocatedObjects, externalAllocatedSize, latencyDown, latencyUp, listOpsPm, localAllocatedObjects, localAllocatedSize, numDown, numUp, rxBandwidthKbyte, rxOpsPm, storageClasses, totalDelOps, totalDelSuccessOps, totalRxBytes, totalRxOps, totalRxSuccessOps, totalTxBytes, totalTxOps, totalTxSuccessOps, txBandwidthKbyte, txOpsPm, upLatencyUs, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectStorageBucketStat {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    allocatedObjects: ").append(toIndentedString(allocatedObjects)).append("\n");
    sb.append("    allocatedSize: ").append(toIndentedString(allocatedSize)).append("\n");
    sb.append("    cacheAllocatedObjects: ").append(toIndentedString(cacheAllocatedObjects)).append("\n");
    sb.append("    cacheAllocatedSize: ").append(toIndentedString(cacheAllocatedSize)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    delOpsPm: ").append(toIndentedString(delOpsPm)).append("\n");
    sb.append("    downLatencyUs: ").append(toIndentedString(downLatencyUs)).append("\n");
    sb.append("    externalAllocatedObjects: ").append(toIndentedString(externalAllocatedObjects)).append("\n");
    sb.append("    externalAllocatedSize: ").append(toIndentedString(externalAllocatedSize)).append("\n");
    sb.append("    latencyDown: ").append(toIndentedString(latencyDown)).append("\n");
    sb.append("    latencyUp: ").append(toIndentedString(latencyUp)).append("\n");
    sb.append("    listOpsPm: ").append(toIndentedString(listOpsPm)).append("\n");
    sb.append("    localAllocatedObjects: ").append(toIndentedString(localAllocatedObjects)).append("\n");
    sb.append("    localAllocatedSize: ").append(toIndentedString(localAllocatedSize)).append("\n");
    sb.append("    numDown: ").append(toIndentedString(numDown)).append("\n");
    sb.append("    numUp: ").append(toIndentedString(numUp)).append("\n");
    sb.append("    rxBandwidthKbyte: ").append(toIndentedString(rxBandwidthKbyte)).append("\n");
    sb.append("    rxOpsPm: ").append(toIndentedString(rxOpsPm)).append("\n");
    sb.append("    storageClasses: ").append(toIndentedString(storageClasses)).append("\n");
    sb.append("    totalDelOps: ").append(toIndentedString(totalDelOps)).append("\n");
    sb.append("    totalDelSuccessOps: ").append(toIndentedString(totalDelSuccessOps)).append("\n");
    sb.append("    totalRxBytes: ").append(toIndentedString(totalRxBytes)).append("\n");
    sb.append("    totalRxOps: ").append(toIndentedString(totalRxOps)).append("\n");
    sb.append("    totalRxSuccessOps: ").append(toIndentedString(totalRxSuccessOps)).append("\n");
    sb.append("    totalTxBytes: ").append(toIndentedString(totalTxBytes)).append("\n");
    sb.append("    totalTxOps: ").append(toIndentedString(totalTxOps)).append("\n");
    sb.append("    totalTxSuccessOps: ").append(toIndentedString(totalTxSuccessOps)).append("\n");
    sb.append("    txBandwidthKbyte: ").append(toIndentedString(txBandwidthKbyte)).append("\n");
    sb.append("    txOpsPm: ").append(toIndentedString(txOpsPm)).append("\n");
    sb.append("    upLatencyUs: ").append(toIndentedString(upLatencyUs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
