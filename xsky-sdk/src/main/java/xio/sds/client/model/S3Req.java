/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.S3Key;
/**
 * S3Req
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class S3Req {
  @SerializedName("bucket_limit")
  private Long bucketLimit = null;

  @SerializedName("bucket_path")
  private String bucketPath = null;

  @SerializedName("bucket_permission")
  private String bucketPermission = null;

  @SerializedName("gateway_group_id")
  private Long gatewayGroupId = null;

  @SerializedName("s3_enabled")
  private Boolean s3Enabled = null;

  @SerializedName("s3_keys")
  private List<S3Key> s3Keys = null;

  public S3Req bucketLimit(Long bucketLimit) {
    this.bucketLimit = bucketLimit;
    return this;
  }

   /**
   * Get bucketLimit
   * @return bucketLimit
  **/
  @Schema(description = "")
  public Long getBucketLimit() {
    return bucketLimit;
  }

  public void setBucketLimit(Long bucketLimit) {
    this.bucketLimit = bucketLimit;
  }

  public S3Req bucketPath(String bucketPath) {
    this.bucketPath = bucketPath;
    return this;
  }

   /**
   * Get bucketPath
   * @return bucketPath
  **/
  @Schema(description = "")
  public String getBucketPath() {
    return bucketPath;
  }

  public void setBucketPath(String bucketPath) {
    this.bucketPath = bucketPath;
  }

  public S3Req bucketPermission(String bucketPermission) {
    this.bucketPermission = bucketPermission;
    return this;
  }

   /**
   * Get bucketPermission
   * @return bucketPermission
  **/
  @Schema(description = "")
  public String getBucketPermission() {
    return bucketPermission;
  }

  public void setBucketPermission(String bucketPermission) {
    this.bucketPermission = bucketPermission;
  }

  public S3Req gatewayGroupId(Long gatewayGroupId) {
    this.gatewayGroupId = gatewayGroupId;
    return this;
  }

   /**
   * Get gatewayGroupId
   * @return gatewayGroupId
  **/
  @Schema(description = "")
  public Long getGatewayGroupId() {
    return gatewayGroupId;
  }

  public void setGatewayGroupId(Long gatewayGroupId) {
    this.gatewayGroupId = gatewayGroupId;
  }

  public S3Req s3Enabled(Boolean s3Enabled) {
    this.s3Enabled = s3Enabled;
    return this;
  }

   /**
   * Get s3Enabled
   * @return s3Enabled
  **/
  @Schema(description = "")
  public Boolean isS3Enabled() {
    return s3Enabled;
  }

  public void setS3Enabled(Boolean s3Enabled) {
    this.s3Enabled = s3Enabled;
  }

  public S3Req s3Keys(List<S3Key> s3Keys) {
    this.s3Keys = s3Keys;
    return this;
  }

  public S3Req addS3KeysItem(S3Key s3KeysItem) {
    if (this.s3Keys == null) {
      this.s3Keys = new ArrayList<S3Key>();
    }
    this.s3Keys.add(s3KeysItem);
    return this;
  }

   /**
   * Get s3Keys
   * @return s3Keys
  **/
  @Schema(description = "")
  public List<S3Key> getS3Keys() {
    return s3Keys;
  }

  public void setS3Keys(List<S3Key> s3Keys) {
    this.s3Keys = s3Keys;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S3Req s3Req = (S3Req) o;
    return Objects.equals(this.bucketLimit, s3Req.bucketLimit) &&
        Objects.equals(this.bucketPath, s3Req.bucketPath) &&
        Objects.equals(this.bucketPermission, s3Req.bucketPermission) &&
        Objects.equals(this.gatewayGroupId, s3Req.gatewayGroupId) &&
        Objects.equals(this.s3Enabled, s3Req.s3Enabled) &&
        Objects.equals(this.s3Keys, s3Req.s3Keys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketLimit, bucketPath, bucketPermission, gatewayGroupId, s3Enabled, s3Keys);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S3Req {\n");
    
    sb.append("    bucketLimit: ").append(toIndentedString(bucketLimit)).append("\n");
    sb.append("    bucketPath: ").append(toIndentedString(bucketPath)).append("\n");
    sb.append("    bucketPermission: ").append(toIndentedString(bucketPermission)).append("\n");
    sb.append("    gatewayGroupId: ").append(toIndentedString(gatewayGroupId)).append("\n");
    sb.append("    s3Enabled: ").append(toIndentedString(s3Enabled)).append("\n");
    sb.append("    s3Keys: ").append(toIndentedString(s3Keys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
