/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * DfsPathNestviewDfsPathStat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsPathNestviewDfsPathStat {
  @SerializedName("access")
  private OffsetDateTime access = null;

  @SerializedName("change")
  private OffsetDateTime change = null;

  @SerializedName("dp_dfs_snapshot_policies")
  private List<String> dpDfsSnapshotPolicies = null;

  @SerializedName("dp_snapshot_num")
  private Long dpSnapshotNum = null;

  @SerializedName("files")
  private Long files = null;

  @SerializedName("last_snapshot_time")
  private OffsetDateTime lastSnapshotTime = null;

  @SerializedName("modify")
  private OffsetDateTime modify = null;

  @SerializedName("quota_num")
  private Long quotaNum = null;

  @SerializedName("shared")
  private Boolean shared = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("snapshot_num")
  private Long snapshotNum = null;

  @SerializedName("total_snapshot_num")
  private Long totalSnapshotNum = null;

  public DfsPathNestviewDfsPathStat access(OffsetDateTime access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @Schema(description = "")
  public OffsetDateTime getAccess() {
    return access;
  }

  public void setAccess(OffsetDateTime access) {
    this.access = access;
  }

  public DfsPathNestviewDfsPathStat change(OffsetDateTime change) {
    this.change = change;
    return this;
  }

   /**
   * Get change
   * @return change
  **/
  @Schema(description = "")
  public OffsetDateTime getChange() {
    return change;
  }

  public void setChange(OffsetDateTime change) {
    this.change = change;
  }

  public DfsPathNestviewDfsPathStat dpDfsSnapshotPolicies(List<String> dpDfsSnapshotPolicies) {
    this.dpDfsSnapshotPolicies = dpDfsSnapshotPolicies;
    return this;
  }

  public DfsPathNestviewDfsPathStat addDpDfsSnapshotPoliciesItem(String dpDfsSnapshotPoliciesItem) {
    if (this.dpDfsSnapshotPolicies == null) {
      this.dpDfsSnapshotPolicies = new ArrayList<String>();
    }
    this.dpDfsSnapshotPolicies.add(dpDfsSnapshotPoliciesItem);
    return this;
  }

   /**
   * Get dpDfsSnapshotPolicies
   * @return dpDfsSnapshotPolicies
  **/
  @Schema(description = "")
  public List<String> getDpDfsSnapshotPolicies() {
    return dpDfsSnapshotPolicies;
  }

  public void setDpDfsSnapshotPolicies(List<String> dpDfsSnapshotPolicies) {
    this.dpDfsSnapshotPolicies = dpDfsSnapshotPolicies;
  }

  public DfsPathNestviewDfsPathStat dpSnapshotNum(Long dpSnapshotNum) {
    this.dpSnapshotNum = dpSnapshotNum;
    return this;
  }

   /**
   * Get dpSnapshotNum
   * @return dpSnapshotNum
  **/
  @Schema(description = "")
  public Long getDpSnapshotNum() {
    return dpSnapshotNum;
  }

  public void setDpSnapshotNum(Long dpSnapshotNum) {
    this.dpSnapshotNum = dpSnapshotNum;
  }

  public DfsPathNestviewDfsPathStat files(Long files) {
    this.files = files;
    return this;
  }

   /**
   * Get files
   * @return files
  **/
  @Schema(description = "")
  public Long getFiles() {
    return files;
  }

  public void setFiles(Long files) {
    this.files = files;
  }

  public DfsPathNestviewDfsPathStat lastSnapshotTime(OffsetDateTime lastSnapshotTime) {
    this.lastSnapshotTime = lastSnapshotTime;
    return this;
  }

   /**
   * Get lastSnapshotTime
   * @return lastSnapshotTime
  **/
  @Schema(description = "")
  public OffsetDateTime getLastSnapshotTime() {
    return lastSnapshotTime;
  }

  public void setLastSnapshotTime(OffsetDateTime lastSnapshotTime) {
    this.lastSnapshotTime = lastSnapshotTime;
  }

  public DfsPathNestviewDfsPathStat modify(OffsetDateTime modify) {
    this.modify = modify;
    return this;
  }

   /**
   * Get modify
   * @return modify
  **/
  @Schema(description = "")
  public OffsetDateTime getModify() {
    return modify;
  }

  public void setModify(OffsetDateTime modify) {
    this.modify = modify;
  }

  public DfsPathNestviewDfsPathStat quotaNum(Long quotaNum) {
    this.quotaNum = quotaNum;
    return this;
  }

   /**
   * Get quotaNum
   * @return quotaNum
  **/
  @Schema(description = "")
  public Long getQuotaNum() {
    return quotaNum;
  }

  public void setQuotaNum(Long quotaNum) {
    this.quotaNum = quotaNum;
  }

  public DfsPathNestviewDfsPathStat shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Get shared
   * @return shared
  **/
  @Schema(description = "")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }

  public DfsPathNestviewDfsPathStat size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public DfsPathNestviewDfsPathStat snapshotNum(Long snapshotNum) {
    this.snapshotNum = snapshotNum;
    return this;
  }

   /**
   * Get snapshotNum
   * @return snapshotNum
  **/
  @Schema(description = "")
  public Long getSnapshotNum() {
    return snapshotNum;
  }

  public void setSnapshotNum(Long snapshotNum) {
    this.snapshotNum = snapshotNum;
  }

  public DfsPathNestviewDfsPathStat totalSnapshotNum(Long totalSnapshotNum) {
    this.totalSnapshotNum = totalSnapshotNum;
    return this;
  }

   /**
   * Get totalSnapshotNum
   * @return totalSnapshotNum
  **/
  @Schema(description = "")
  public Long getTotalSnapshotNum() {
    return totalSnapshotNum;
  }

  public void setTotalSnapshotNum(Long totalSnapshotNum) {
    this.totalSnapshotNum = totalSnapshotNum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsPathNestviewDfsPathStat dfsPathNestviewDfsPathStat = (DfsPathNestviewDfsPathStat) o;
    return Objects.equals(this.access, dfsPathNestviewDfsPathStat.access) &&
        Objects.equals(this.change, dfsPathNestviewDfsPathStat.change) &&
        Objects.equals(this.dpDfsSnapshotPolicies, dfsPathNestviewDfsPathStat.dpDfsSnapshotPolicies) &&
        Objects.equals(this.dpSnapshotNum, dfsPathNestviewDfsPathStat.dpSnapshotNum) &&
        Objects.equals(this.files, dfsPathNestviewDfsPathStat.files) &&
        Objects.equals(this.lastSnapshotTime, dfsPathNestviewDfsPathStat.lastSnapshotTime) &&
        Objects.equals(this.modify, dfsPathNestviewDfsPathStat.modify) &&
        Objects.equals(this.quotaNum, dfsPathNestviewDfsPathStat.quotaNum) &&
        Objects.equals(this.shared, dfsPathNestviewDfsPathStat.shared) &&
        Objects.equals(this.size, dfsPathNestviewDfsPathStat.size) &&
        Objects.equals(this.snapshotNum, dfsPathNestviewDfsPathStat.snapshotNum) &&
        Objects.equals(this.totalSnapshotNum, dfsPathNestviewDfsPathStat.totalSnapshotNum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(access, change, dpDfsSnapshotPolicies, dpSnapshotNum, files, lastSnapshotTime, modify, quotaNum, shared, size, snapshotNum, totalSnapshotNum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsPathNestviewDfsPathStat {\n");
    
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    change: ").append(toIndentedString(change)).append("\n");
    sb.append("    dpDfsSnapshotPolicies: ").append(toIndentedString(dpDfsSnapshotPolicies)).append("\n");
    sb.append("    dpSnapshotNum: ").append(toIndentedString(dpSnapshotNum)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    lastSnapshotTime: ").append(toIndentedString(lastSnapshotTime)).append("\n");
    sb.append("    modify: ").append(toIndentedString(modify)).append("\n");
    sb.append("    quotaNum: ").append(toIndentedString(quotaNum)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    snapshotNum: ").append(toIndentedString(snapshotNum)).append("\n");
    sb.append("    totalSnapshotNum: ").append(toIndentedString(totalSnapshotNum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
