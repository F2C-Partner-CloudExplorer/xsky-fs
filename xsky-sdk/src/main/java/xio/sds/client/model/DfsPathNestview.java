/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.DfsPathNestviewDfsPathPerformance;
import xio.sds.client.model.DfsPathNestviewDfsPathStat;
/**
 * DfsPathNestview
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsPathNestview {
  @SerializedName("dfs_path_performance")
  private DfsPathNestviewDfsPathPerformance dfsPathPerformance = null;

  @SerializedName("dfs_path_stat")
  private DfsPathNestviewDfsPathStat dfsPathStat = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("stretched")
  private Boolean stretched = null;

  public DfsPathNestview dfsPathPerformance(DfsPathNestviewDfsPathPerformance dfsPathPerformance) {
    this.dfsPathPerformance = dfsPathPerformance;
    return this;
  }

   /**
   * Get dfsPathPerformance
   * @return dfsPathPerformance
  **/
  @Schema(description = "")
  public DfsPathNestviewDfsPathPerformance getDfsPathPerformance() {
    return dfsPathPerformance;
  }

  public void setDfsPathPerformance(DfsPathNestviewDfsPathPerformance dfsPathPerformance) {
    this.dfsPathPerformance = dfsPathPerformance;
  }

  public DfsPathNestview dfsPathStat(DfsPathNestviewDfsPathStat dfsPathStat) {
    this.dfsPathStat = dfsPathStat;
    return this;
  }

   /**
   * Get dfsPathStat
   * @return dfsPathStat
  **/
  @Schema(description = "")
  public DfsPathNestviewDfsPathStat getDfsPathStat() {
    return dfsPathStat;
  }

  public void setDfsPathStat(DfsPathNestviewDfsPathStat dfsPathStat) {
    this.dfsPathStat = dfsPathStat;
  }

  public DfsPathNestview id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsPathNestview name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsPathNestview stretched(Boolean stretched) {
    this.stretched = stretched;
    return this;
  }

   /**
   * Get stretched
   * @return stretched
  **/
  @Schema(description = "")
  public Boolean isStretched() {
    return stretched;
  }

  public void setStretched(Boolean stretched) {
    this.stretched = stretched;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsPathNestview dfsPathNestview = (DfsPathNestview) o;
    return Objects.equals(this.dfsPathPerformance, dfsPathNestview.dfsPathPerformance) &&
        Objects.equals(this.dfsPathStat, dfsPathNestview.dfsPathStat) &&
        Objects.equals(this.id, dfsPathNestview.id) &&
        Objects.equals(this.name, dfsPathNestview.name) &&
        Objects.equals(this.stretched, dfsPathNestview.stretched);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dfsPathPerformance, dfsPathStat, id, name, stretched);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsPathNestview {\n");
    
    sb.append("    dfsPathPerformance: ").append(toIndentedString(dfsPathPerformance)).append("\n");
    sb.append("    dfsPathStat: ").append(toIndentedString(dfsPathStat)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stretched: ").append(toIndentedString(stretched)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
