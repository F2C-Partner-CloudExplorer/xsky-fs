/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.AccessPathNestview;
import xio.sds.client.model.CloudPlatformNestview;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DpBlockReplicationPolicyNestview;
import xio.sds.client.model.DpBlockSnapshotPolicyNestview;
import xio.sds.client.model.PoolNestview;
import xio.sds.client.model.RBDClient;
import xio.sds.client.model.RemoteClusterNestview;
import xio.sds.client.model.SnapshotNestview;
import xio.sds.client.model.TrashResourceNestview;
import xio.sds.client.model.Volume;
import xio.sds.client.model.VolumeGroupNestview;
import xio.sds.client.model.VolumeQosSpec;
import xio.sds.client.model.VolumeStat;
/**
 * VolumeRecord defines the response content of volume related API
 */
@Schema(description = "VolumeRecord defines the response content of volume related API")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class VolumeRecord extends Volume {
  @SerializedName("samples")
  private List<VolumeStat> samples = null;

  public VolumeRecord samples(List<VolumeStat> samples) {
    this.samples = samples;
    return this;
  }

  public VolumeRecord addSamplesItem(VolumeStat samplesItem) {
    if (this.samples == null) {
      this.samples = new ArrayList<VolumeStat>();
    }
    this.samples.add(samplesItem);
    return this;
  }

   /**
   * Get samples
   * @return samples
  **/
  @Schema(description = "")
  public List<VolumeStat> getSamples() {
    return samples;
  }

  public void setSamples(List<VolumeStat> samples) {
    this.samples = samples;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeRecord volumeRecord = (VolumeRecord) o;
    return Objects.equals(this.samples, volumeRecord.samples) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(samples, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeRecord {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    samples: ").append(toIndentedString(samples)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
