/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.DfsHdfsACLReq;
import xio.sds.client.model.DfsHdfsIPWhiteList;
import xio.sds.client.model.DfsHdfsProxyUserReq;
/**
 * DfsHdfsCreateReqHdfs
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsHdfsCreateReqHdfs {
  @SerializedName("auth_to_locals")
  private List<String> authToLocals = null;

  @SerializedName("auth_type")
  private String authType = null;

  @SerializedName("block_size")
  private Long blockSize = null;

  @SerializedName("checksum_type")
  private String checksumType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_gateway_group_id")
  private Long dfsGatewayGroupId = null;

  @SerializedName("dfs_gateway_zone_id")
  private Long dfsGatewayZoneId = null;

  @SerializedName("dfs_hdfs_acls")
  private List<DfsHdfsACLReq> dfsHdfsAcls = null;

  @SerializedName("dfs_hdfs_ip_white_lists")
  private List<DfsHdfsIPWhiteList> dfsHdfsIpWhiteLists = null;

  @SerializedName("dfs_hdfs_proxy_users")
  private List<DfsHdfsProxyUserReq> dfsHdfsProxyUsers = null;

  @SerializedName("kerberos_id")
  private Long kerberosId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("path")
  private String path = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("ranger")
  private Boolean ranger = null;

  @SerializedName("ranger_ip")
  private String rangerIp = null;

  @SerializedName("ranger_service_name")
  private String rangerServiceName = null;

  @SerializedName("ranger_url")
  private String rangerUrl = null;

  @SerializedName("rootfs_id")
  private Long rootfsId = null;

  public DfsHdfsCreateReqHdfs authToLocals(List<String> authToLocals) {
    this.authToLocals = authToLocals;
    return this;
  }

  public DfsHdfsCreateReqHdfs addAuthToLocalsItem(String authToLocalsItem) {
    if (this.authToLocals == null) {
      this.authToLocals = new ArrayList<String>();
    }
    this.authToLocals.add(authToLocalsItem);
    return this;
  }

   /**
   * auth to local of hdfs
   * @return authToLocals
  **/
  @Schema(description = "auth to local of hdfs")
  public List<String> getAuthToLocals() {
    return authToLocals;
  }

  public void setAuthToLocals(List<String> authToLocals) {
    this.authToLocals = authToLocals;
  }

  public DfsHdfsCreateReqHdfs authType(String authType) {
    this.authType = authType;
    return this;
  }

   /**
   * auth type of hdfs
   * @return authType
  **/
  @Schema(required = true, description = "auth type of hdfs")
  public String getAuthType() {
    return authType;
  }

  public void setAuthType(String authType) {
    this.authType = authType;
  }

  public DfsHdfsCreateReqHdfs blockSize(Long blockSize) {
    this.blockSize = blockSize;
    return this;
  }

   /**
   * block size
   * @return blockSize
  **/
  @Schema(required = true, description = "block size")
  public Long getBlockSize() {
    return blockSize;
  }

  public void setBlockSize(Long blockSize) {
    this.blockSize = blockSize;
  }

  public DfsHdfsCreateReqHdfs checksumType(String checksumType) {
    this.checksumType = checksumType;
    return this;
  }

   /**
   * checksum type
   * @return checksumType
  **/
  @Schema(required = true, description = "checksum type")
  public String getChecksumType() {
    return checksumType;
  }

  public void setChecksumType(String checksumType) {
    this.checksumType = checksumType;
  }

  public DfsHdfsCreateReqHdfs description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of hdfs
   * @return description
  **/
  @Schema(description = "description of hdfs")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsHdfsCreateReqHdfs dfsGatewayGroupId(Long dfsGatewayGroupId) {
    this.dfsGatewayGroupId = dfsGatewayGroupId;
    return this;
  }

   /**
   * id of dfs gateway group
   * @return dfsGatewayGroupId
  **/
  @Schema(description = "id of dfs gateway group")
  public Long getDfsGatewayGroupId() {
    return dfsGatewayGroupId;
  }

  public void setDfsGatewayGroupId(Long dfsGatewayGroupId) {
    this.dfsGatewayGroupId = dfsGatewayGroupId;
  }

  public DfsHdfsCreateReqHdfs dfsGatewayZoneId(Long dfsGatewayZoneId) {
    this.dfsGatewayZoneId = dfsGatewayZoneId;
    return this;
  }

   /**
   * id of dfs gateway zone
   * @return dfsGatewayZoneId
  **/
  @Schema(required = true, description = "id of dfs gateway zone")
  public Long getDfsGatewayZoneId() {
    return dfsGatewayZoneId;
  }

  public void setDfsGatewayZoneId(Long dfsGatewayZoneId) {
    this.dfsGatewayZoneId = dfsGatewayZoneId;
  }

  public DfsHdfsCreateReqHdfs dfsHdfsAcls(List<DfsHdfsACLReq> dfsHdfsAcls) {
    this.dfsHdfsAcls = dfsHdfsAcls;
    return this;
  }

  public DfsHdfsCreateReqHdfs addDfsHdfsAclsItem(DfsHdfsACLReq dfsHdfsAclsItem) {
    if (this.dfsHdfsAcls == null) {
      this.dfsHdfsAcls = new ArrayList<DfsHdfsACLReq>();
    }
    this.dfsHdfsAcls.add(dfsHdfsAclsItem);
    return this;
  }

   /**
   * dfs hdfs acl list
   * @return dfsHdfsAcls
  **/
  @Schema(description = "dfs hdfs acl list")
  public List<DfsHdfsACLReq> getDfsHdfsAcls() {
    return dfsHdfsAcls;
  }

  public void setDfsHdfsAcls(List<DfsHdfsACLReq> dfsHdfsAcls) {
    this.dfsHdfsAcls = dfsHdfsAcls;
  }

  public DfsHdfsCreateReqHdfs dfsHdfsIpWhiteLists(List<DfsHdfsIPWhiteList> dfsHdfsIpWhiteLists) {
    this.dfsHdfsIpWhiteLists = dfsHdfsIpWhiteLists;
    return this;
  }

  public DfsHdfsCreateReqHdfs addDfsHdfsIpWhiteListsItem(DfsHdfsIPWhiteList dfsHdfsIpWhiteListsItem) {
    if (this.dfsHdfsIpWhiteLists == null) {
      this.dfsHdfsIpWhiteLists = new ArrayList<DfsHdfsIPWhiteList>();
    }
    this.dfsHdfsIpWhiteLists.add(dfsHdfsIpWhiteListsItem);
    return this;
  }

   /**
   * dfs hdfs access ip list
   * @return dfsHdfsIpWhiteLists
  **/
  @Schema(description = "dfs hdfs access ip list")
  public List<DfsHdfsIPWhiteList> getDfsHdfsIpWhiteLists() {
    return dfsHdfsIpWhiteLists;
  }

  public void setDfsHdfsIpWhiteLists(List<DfsHdfsIPWhiteList> dfsHdfsIpWhiteLists) {
    this.dfsHdfsIpWhiteLists = dfsHdfsIpWhiteLists;
  }

  public DfsHdfsCreateReqHdfs dfsHdfsProxyUsers(List<DfsHdfsProxyUserReq> dfsHdfsProxyUsers) {
    this.dfsHdfsProxyUsers = dfsHdfsProxyUsers;
    return this;
  }

  public DfsHdfsCreateReqHdfs addDfsHdfsProxyUsersItem(DfsHdfsProxyUserReq dfsHdfsProxyUsersItem) {
    if (this.dfsHdfsProxyUsers == null) {
      this.dfsHdfsProxyUsers = new ArrayList<DfsHdfsProxyUserReq>();
    }
    this.dfsHdfsProxyUsers.add(dfsHdfsProxyUsersItem);
    return this;
  }

   /**
   * dfs hdfs proxy user list
   * @return dfsHdfsProxyUsers
  **/
  @Schema(description = "dfs hdfs proxy user list")
  public List<DfsHdfsProxyUserReq> getDfsHdfsProxyUsers() {
    return dfsHdfsProxyUsers;
  }

  public void setDfsHdfsProxyUsers(List<DfsHdfsProxyUserReq> dfsHdfsProxyUsers) {
    this.dfsHdfsProxyUsers = dfsHdfsProxyUsers;
  }

  public DfsHdfsCreateReqHdfs kerberosId(Long kerberosId) {
    this.kerberosId = kerberosId;
    return this;
  }

   /**
   * fs kerberos id
   * @return kerberosId
  **/
  @Schema(description = "fs kerberos id")
  public Long getKerberosId() {
    return kerberosId;
  }

  public void setKerberosId(Long kerberosId) {
    this.kerberosId = kerberosId;
  }

  public DfsHdfsCreateReqHdfs name(String name) {
    this.name = name;
    return this;
  }

   /**
   * dfs hdfs name
   * @return name
  **/
  @Schema(required = true, description = "dfs hdfs name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsHdfsCreateReqHdfs path(String path) {
    this.path = path;
    return this;
  }

   /**
   * path
   * @return path
  **/
  @Schema(required = true, description = "path")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public DfsHdfsCreateReqHdfs port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * port of dfs hdfs
   * @return port
  **/
  @Schema(description = "port of dfs hdfs")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public DfsHdfsCreateReqHdfs ranger(Boolean ranger) {
    this.ranger = ranger;
    return this;
  }

   /**
   * enabled of hdfs ranger
   * @return ranger
  **/
  @Schema(description = "enabled of hdfs ranger")
  public Boolean isRanger() {
    return ranger;
  }

  public void setRanger(Boolean ranger) {
    this.ranger = ranger;
  }

  public DfsHdfsCreateReqHdfs rangerIp(String rangerIp) {
    this.rangerIp = rangerIp;
    return this;
  }

   /**
   * ranger ip of hdfs
   * @return rangerIp
  **/
  @Schema(description = "ranger ip of hdfs")
  public String getRangerIp() {
    return rangerIp;
  }

  public void setRangerIp(String rangerIp) {
    this.rangerIp = rangerIp;
  }

  public DfsHdfsCreateReqHdfs rangerServiceName(String rangerServiceName) {
    this.rangerServiceName = rangerServiceName;
    return this;
  }

   /**
   * ranger service name of hdfs
   * @return rangerServiceName
  **/
  @Schema(description = "ranger service name of hdfs")
  public String getRangerServiceName() {
    return rangerServiceName;
  }

  public void setRangerServiceName(String rangerServiceName) {
    this.rangerServiceName = rangerServiceName;
  }

  public DfsHdfsCreateReqHdfs rangerUrl(String rangerUrl) {
    this.rangerUrl = rangerUrl;
    return this;
  }

   /**
   * ranger url of hdfs
   * @return rangerUrl
  **/
  @Schema(description = "ranger url of hdfs")
  public String getRangerUrl() {
    return rangerUrl;
  }

  public void setRangerUrl(String rangerUrl) {
    this.rangerUrl = rangerUrl;
  }

  public DfsHdfsCreateReqHdfs rootfsId(Long rootfsId) {
    this.rootfsId = rootfsId;
    return this;
  }

   /**
   * id of dfs rootfs
   * @return rootfsId
  **/
  @Schema(required = true, description = "id of dfs rootfs")
  public Long getRootfsId() {
    return rootfsId;
  }

  public void setRootfsId(Long rootfsId) {
    this.rootfsId = rootfsId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsHdfsCreateReqHdfs dfsHdfsCreateReqHdfs = (DfsHdfsCreateReqHdfs) o;
    return Objects.equals(this.authToLocals, dfsHdfsCreateReqHdfs.authToLocals) &&
        Objects.equals(this.authType, dfsHdfsCreateReqHdfs.authType) &&
        Objects.equals(this.blockSize, dfsHdfsCreateReqHdfs.blockSize) &&
        Objects.equals(this.checksumType, dfsHdfsCreateReqHdfs.checksumType) &&
        Objects.equals(this.description, dfsHdfsCreateReqHdfs.description) &&
        Objects.equals(this.dfsGatewayGroupId, dfsHdfsCreateReqHdfs.dfsGatewayGroupId) &&
        Objects.equals(this.dfsGatewayZoneId, dfsHdfsCreateReqHdfs.dfsGatewayZoneId) &&
        Objects.equals(this.dfsHdfsAcls, dfsHdfsCreateReqHdfs.dfsHdfsAcls) &&
        Objects.equals(this.dfsHdfsIpWhiteLists, dfsHdfsCreateReqHdfs.dfsHdfsIpWhiteLists) &&
        Objects.equals(this.dfsHdfsProxyUsers, dfsHdfsCreateReqHdfs.dfsHdfsProxyUsers) &&
        Objects.equals(this.kerberosId, dfsHdfsCreateReqHdfs.kerberosId) &&
        Objects.equals(this.name, dfsHdfsCreateReqHdfs.name) &&
        Objects.equals(this.path, dfsHdfsCreateReqHdfs.path) &&
        Objects.equals(this.port, dfsHdfsCreateReqHdfs.port) &&
        Objects.equals(this.ranger, dfsHdfsCreateReqHdfs.ranger) &&
        Objects.equals(this.rangerIp, dfsHdfsCreateReqHdfs.rangerIp) &&
        Objects.equals(this.rangerServiceName, dfsHdfsCreateReqHdfs.rangerServiceName) &&
        Objects.equals(this.rangerUrl, dfsHdfsCreateReqHdfs.rangerUrl) &&
        Objects.equals(this.rootfsId, dfsHdfsCreateReqHdfs.rootfsId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authToLocals, authType, blockSize, checksumType, description, dfsGatewayGroupId, dfsGatewayZoneId, dfsHdfsAcls, dfsHdfsIpWhiteLists, dfsHdfsProxyUsers, kerberosId, name, path, port, ranger, rangerIp, rangerServiceName, rangerUrl, rootfsId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsHdfsCreateReqHdfs {\n");
    
    sb.append("    authToLocals: ").append(toIndentedString(authToLocals)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    blockSize: ").append(toIndentedString(blockSize)).append("\n");
    sb.append("    checksumType: ").append(toIndentedString(checksumType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsGatewayGroupId: ").append(toIndentedString(dfsGatewayGroupId)).append("\n");
    sb.append("    dfsGatewayZoneId: ").append(toIndentedString(dfsGatewayZoneId)).append("\n");
    sb.append("    dfsHdfsAcls: ").append(toIndentedString(dfsHdfsAcls)).append("\n");
    sb.append("    dfsHdfsIpWhiteLists: ").append(toIndentedString(dfsHdfsIpWhiteLists)).append("\n");
    sb.append("    dfsHdfsProxyUsers: ").append(toIndentedString(dfsHdfsProxyUsers)).append("\n");
    sb.append("    kerberosId: ").append(toIndentedString(kerberosId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    ranger: ").append(toIndentedString(ranger)).append("\n");
    sb.append("    rangerIp: ").append(toIndentedString(rangerIp)).append("\n");
    sb.append("    rangerServiceName: ").append(toIndentedString(rangerServiceName)).append("\n");
    sb.append("    rangerUrl: ").append(toIndentedString(rangerUrl)).append("\n");
    sb.append("    rootfsId: ").append(toIndentedString(rootfsId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
