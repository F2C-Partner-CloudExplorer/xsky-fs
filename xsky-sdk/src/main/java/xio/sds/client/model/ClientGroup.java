/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.Client;
import xio.sds.client.model.ClusterNestview;
/**
 * ClientGroup defines the access client group
 */
@Schema(description = "ClientGroup defines the access client group")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class ClientGroup {
  @SerializedName("access_path_num")
  private Long accessPathNum = null;

  @SerializedName("block_volume_num")
  private Long blockVolumeNum = null;

  @SerializedName("chap")
  private Boolean chap = null;

  @SerializedName("client_num")
  private Long clientNum = null;

  @SerializedName("clients")
  private List<Client> clients = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("iname")
  private String iname = null;

  @SerializedName("isecret")
  private String isecret = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public ClientGroup accessPathNum(Long accessPathNum) {
    this.accessPathNum = accessPathNum;
    return this;
  }

   /**
   * Get accessPathNum
   * @return accessPathNum
  **/
  @Schema(description = "")
  public Long getAccessPathNum() {
    return accessPathNum;
  }

  public void setAccessPathNum(Long accessPathNum) {
    this.accessPathNum = accessPathNum;
  }

  public ClientGroup blockVolumeNum(Long blockVolumeNum) {
    this.blockVolumeNum = blockVolumeNum;
    return this;
  }

   /**
   * Get blockVolumeNum
   * @return blockVolumeNum
  **/
  @Schema(description = "")
  public Long getBlockVolumeNum() {
    return blockVolumeNum;
  }

  public void setBlockVolumeNum(Long blockVolumeNum) {
    this.blockVolumeNum = blockVolumeNum;
  }

  public ClientGroup chap(Boolean chap) {
    this.chap = chap;
    return this;
  }

   /**
   * Get chap
   * @return chap
  **/
  @Schema(description = "")
  public Boolean isChap() {
    return chap;
  }

  public void setChap(Boolean chap) {
    this.chap = chap;
  }

  public ClientGroup clientNum(Long clientNum) {
    this.clientNum = clientNum;
    return this;
  }

   /**
   * Get clientNum
   * @return clientNum
  **/
  @Schema(description = "")
  public Long getClientNum() {
    return clientNum;
  }

  public void setClientNum(Long clientNum) {
    this.clientNum = clientNum;
  }

  public ClientGroup clients(List<Client> clients) {
    this.clients = clients;
    return this;
  }

  public ClientGroup addClientsItem(Client clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<Client>();
    }
    this.clients.add(clientsItem);
    return this;
  }

   /**
   * Get clients
   * @return clients
  **/
  @Schema(description = "")
  public List<Client> getClients() {
    return clients;
  }

  public void setClients(List<Client> clients) {
    this.clients = clients;
  }

  public ClientGroup cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public ClientGroup create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public ClientGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ClientGroup id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ClientGroup iname(String iname) {
    this.iname = iname;
    return this;
  }

   /**
   * Get iname
   * @return iname
  **/
  @Schema(description = "")
  public String getIname() {
    return iname;
  }

  public void setIname(String iname) {
    this.iname = iname;
  }

  public ClientGroup isecret(String isecret) {
    this.isecret = isecret;
    return this;
  }

   /**
   * Get isecret
   * @return isecret
  **/
  @Schema(description = "")
  public String getIsecret() {
    return isecret;
  }

  public void setIsecret(String isecret) {
    this.isecret = isecret;
  }

  public ClientGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ClientGroup status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ClientGroup type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ClientGroup uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public ClientGroup update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientGroup clientGroup = (ClientGroup) o;
    return Objects.equals(this.accessPathNum, clientGroup.accessPathNum) &&
        Objects.equals(this.blockVolumeNum, clientGroup.blockVolumeNum) &&
        Objects.equals(this.chap, clientGroup.chap) &&
        Objects.equals(this.clientNum, clientGroup.clientNum) &&
        Objects.equals(this.clients, clientGroup.clients) &&
        Objects.equals(this.cluster, clientGroup.cluster) &&
        Objects.equals(this.create, clientGroup.create) &&
        Objects.equals(this.description, clientGroup.description) &&
        Objects.equals(this.id, clientGroup.id) &&
        Objects.equals(this.iname, clientGroup.iname) &&
        Objects.equals(this.isecret, clientGroup.isecret) &&
        Objects.equals(this.name, clientGroup.name) &&
        Objects.equals(this.status, clientGroup.status) &&
        Objects.equals(this.type, clientGroup.type) &&
        Objects.equals(this.uid, clientGroup.uid) &&
        Objects.equals(this.update, clientGroup.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessPathNum, blockVolumeNum, chap, clientNum, clients, cluster, create, description, id, iname, isecret, name, status, type, uid, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientGroup {\n");
    
    sb.append("    accessPathNum: ").append(toIndentedString(accessPathNum)).append("\n");
    sb.append("    blockVolumeNum: ").append(toIndentedString(blockVolumeNum)).append("\n");
    sb.append("    chap: ").append(toIndentedString(chap)).append("\n");
    sb.append("    clientNum: ").append(toIndentedString(clientNum)).append("\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    iname: ").append(toIndentedString(iname)).append("\n");
    sb.append("    isecret: ").append(toIndentedString(isecret)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
