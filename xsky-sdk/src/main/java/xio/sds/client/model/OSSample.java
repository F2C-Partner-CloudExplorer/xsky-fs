/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import xio.sds.client.model.OSBucketUsageCategory;
/**
 * OSSample contains os samples
 */
@Schema(description = "OSSample contains os samples")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OSSample {
  @SerializedName("delete_obj_category")
  private OSBucketUsageCategory deleteObjCategory = null;

  @SerializedName("get_obj_category")
  private OSBucketUsageCategory getObjCategory = null;

  @SerializedName("list_bucket_category")
  private OSBucketUsageCategory listBucketCategory = null;

  @SerializedName("objects")
  private Long objects = null;

  @SerializedName("post_obj_category")
  private OSBucketUsageCategory postObjCategory = null;

  @SerializedName("put_obj_category")
  private OSBucketUsageCategory putObjCategory = null;

  @SerializedName("used_capacity_bytes")
  private Map<String, Long> usedCapacityBytes = null;

  public OSSample deleteObjCategory(OSBucketUsageCategory deleteObjCategory) {
    this.deleteObjCategory = deleteObjCategory;
    return this;
  }

   /**
   * Get deleteObjCategory
   * @return deleteObjCategory
  **/
  @Schema(description = "")
  public OSBucketUsageCategory getDeleteObjCategory() {
    return deleteObjCategory;
  }

  public void setDeleteObjCategory(OSBucketUsageCategory deleteObjCategory) {
    this.deleteObjCategory = deleteObjCategory;
  }

  public OSSample getObjCategory(OSBucketUsageCategory getObjCategory) {
    this.getObjCategory = getObjCategory;
    return this;
  }

   /**
   * Get getObjCategory
   * @return getObjCategory
  **/
  @Schema(description = "")
  public OSBucketUsageCategory getGetObjCategory() {
    return getObjCategory;
  }

  public void setGetObjCategory(OSBucketUsageCategory getObjCategory) {
    this.getObjCategory = getObjCategory;
  }

  public OSSample listBucketCategory(OSBucketUsageCategory listBucketCategory) {
    this.listBucketCategory = listBucketCategory;
    return this;
  }

   /**
   * Get listBucketCategory
   * @return listBucketCategory
  **/
  @Schema(description = "")
  public OSBucketUsageCategory getListBucketCategory() {
    return listBucketCategory;
  }

  public void setListBucketCategory(OSBucketUsageCategory listBucketCategory) {
    this.listBucketCategory = listBucketCategory;
  }

  public OSSample objects(Long objects) {
    this.objects = objects;
    return this;
  }

   /**
   * Get objects
   * @return objects
  **/
  @Schema(description = "")
  public Long getObjects() {
    return objects;
  }

  public void setObjects(Long objects) {
    this.objects = objects;
  }

  public OSSample postObjCategory(OSBucketUsageCategory postObjCategory) {
    this.postObjCategory = postObjCategory;
    return this;
  }

   /**
   * Get postObjCategory
   * @return postObjCategory
  **/
  @Schema(description = "")
  public OSBucketUsageCategory getPostObjCategory() {
    return postObjCategory;
  }

  public void setPostObjCategory(OSBucketUsageCategory postObjCategory) {
    this.postObjCategory = postObjCategory;
  }

  public OSSample putObjCategory(OSBucketUsageCategory putObjCategory) {
    this.putObjCategory = putObjCategory;
    return this;
  }

   /**
   * Get putObjCategory
   * @return putObjCategory
  **/
  @Schema(description = "")
  public OSBucketUsageCategory getPutObjCategory() {
    return putObjCategory;
  }

  public void setPutObjCategory(OSBucketUsageCategory putObjCategory) {
    this.putObjCategory = putObjCategory;
  }

  public OSSample usedCapacityBytes(Map<String, Long> usedCapacityBytes) {
    this.usedCapacityBytes = usedCapacityBytes;
    return this;
  }

  public OSSample putUsedCapacityBytesItem(String key, Long usedCapacityBytesItem) {
    if (this.usedCapacityBytes == null) {
      this.usedCapacityBytes = new HashMap<String, Long>();
    }
    this.usedCapacityBytes.put(key, usedCapacityBytesItem);
    return this;
  }

   /**
   * Get usedCapacityBytes
   * @return usedCapacityBytes
  **/
  @Schema(description = "")
  public Map<String, Long> getUsedCapacityBytes() {
    return usedCapacityBytes;
  }

  public void setUsedCapacityBytes(Map<String, Long> usedCapacityBytes) {
    this.usedCapacityBytes = usedCapacityBytes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSSample osSample = (OSSample) o;
    return Objects.equals(this.deleteObjCategory, osSample.deleteObjCategory) &&
        Objects.equals(this.getObjCategory, osSample.getObjCategory) &&
        Objects.equals(this.listBucketCategory, osSample.listBucketCategory) &&
        Objects.equals(this.objects, osSample.objects) &&
        Objects.equals(this.postObjCategory, osSample.postObjCategory) &&
        Objects.equals(this.putObjCategory, osSample.putObjCategory) &&
        Objects.equals(this.usedCapacityBytes, osSample.usedCapacityBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deleteObjCategory, getObjCategory, listBucketCategory, objects, postObjCategory, putObjCategory, usedCapacityBytes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSSample {\n");
    
    sb.append("    deleteObjCategory: ").append(toIndentedString(deleteObjCategory)).append("\n");
    sb.append("    getObjCategory: ").append(toIndentedString(getObjCategory)).append("\n");
    sb.append("    listBucketCategory: ").append(toIndentedString(listBucketCategory)).append("\n");
    sb.append("    objects: ").append(toIndentedString(objects)).append("\n");
    sb.append("    postObjCategory: ").append(toIndentedString(postObjCategory)).append("\n");
    sb.append("    putObjCategory: ").append(toIndentedString(putObjCategory)).append("\n");
    sb.append("    usedCapacityBytes: ").append(toIndentedString(usedCapacityBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
