/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * FSLdapCreateReqInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class FSLdapCreateReqInfo {
  @SerializedName("admin_dn")
  private String adminDn = null;

  @SerializedName("connection_timeout")
  private Long connectionTimeout = null;

  @SerializedName("group_suffix")
  private String groupSuffix = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("ips")
  private List<String> ips = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("suffix")
  private String suffix = null;

  @SerializedName("timeout")
  private Long timeout = null;

  @SerializedName("user_suffix")
  private String userSuffix = null;

  public FSLdapCreateReqInfo adminDn(String adminDn) {
    this.adminDn = adminDn;
    return this;
  }

   /**
   * ldap admin dn
   * @return adminDn
  **/
  @Schema(description = "ldap admin dn")
  public String getAdminDn() {
    return adminDn;
  }

  public void setAdminDn(String adminDn) {
    this.adminDn = adminDn;
  }

  public FSLdapCreateReqInfo connectionTimeout(Long connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
    return this;
  }

   /**
   * timeout for connection
   * @return connectionTimeout
  **/
  @Schema(description = "timeout for connection")
  public Long getConnectionTimeout() {
    return connectionTimeout;
  }

  public void setConnectionTimeout(Long connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
  }

  public FSLdapCreateReqInfo groupSuffix(String groupSuffix) {
    this.groupSuffix = groupSuffix;
    return this;
  }

   /**
   * group suffix
   * @return groupSuffix
  **/
  @Schema(description = "group suffix")
  public String getGroupSuffix() {
    return groupSuffix;
  }

  public void setGroupSuffix(String groupSuffix) {
    this.groupSuffix = groupSuffix;
  }

  public FSLdapCreateReqInfo ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * ip of server
   * @return ip
  **/
  @Schema(required = true, description = "ip of server")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public FSLdapCreateReqInfo ips(List<String> ips) {
    this.ips = ips;
    return this;
  }

  public FSLdapCreateReqInfo addIpsItem(String ipsItem) {
    if (this.ips == null) {
      this.ips = new ArrayList<String>();
    }
    this.ips.add(ipsItem);
    return this;
  }

   /**
   * ips of standby servers
   * @return ips
  **/
  @Schema(description = "ips of standby servers")
  public List<String> getIps() {
    return ips;
  }

  public void setIps(List<String> ips) {
    this.ips = ips;
  }

  public FSLdapCreateReqInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of ldap
   * @return name
  **/
  @Schema(required = true, description = "name of ldap")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FSLdapCreateReqInfo password(String password) {
    this.password = password;
    return this;
  }

   /**
   * bind password
   * @return password
  **/
  @Schema(description = "bind password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public FSLdapCreateReqInfo port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * ldap service port
   * @return port
  **/
  @Schema(required = true, description = "ldap service port")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public FSLdapCreateReqInfo suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

   /**
   * ldap suffix
   * @return suffix
  **/
  @Schema(required = true, description = "ldap suffix")
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  public FSLdapCreateReqInfo timeout(Long timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * timeout for searching
   * @return timeout
  **/
  @Schema(description = "timeout for searching")
  public Long getTimeout() {
    return timeout;
  }

  public void setTimeout(Long timeout) {
    this.timeout = timeout;
  }

  public FSLdapCreateReqInfo userSuffix(String userSuffix) {
    this.userSuffix = userSuffix;
    return this;
  }

   /**
   * user suffix
   * @return userSuffix
  **/
  @Schema(description = "user suffix")
  public String getUserSuffix() {
    return userSuffix;
  }

  public void setUserSuffix(String userSuffix) {
    this.userSuffix = userSuffix;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FSLdapCreateReqInfo fsLdapCreateReqInfo = (FSLdapCreateReqInfo) o;
    return Objects.equals(this.adminDn, fsLdapCreateReqInfo.adminDn) &&
        Objects.equals(this.connectionTimeout, fsLdapCreateReqInfo.connectionTimeout) &&
        Objects.equals(this.groupSuffix, fsLdapCreateReqInfo.groupSuffix) &&
        Objects.equals(this.ip, fsLdapCreateReqInfo.ip) &&
        Objects.equals(this.ips, fsLdapCreateReqInfo.ips) &&
        Objects.equals(this.name, fsLdapCreateReqInfo.name) &&
        Objects.equals(this.password, fsLdapCreateReqInfo.password) &&
        Objects.equals(this.port, fsLdapCreateReqInfo.port) &&
        Objects.equals(this.suffix, fsLdapCreateReqInfo.suffix) &&
        Objects.equals(this.timeout, fsLdapCreateReqInfo.timeout) &&
        Objects.equals(this.userSuffix, fsLdapCreateReqInfo.userSuffix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminDn, connectionTimeout, groupSuffix, ip, ips, name, password, port, suffix, timeout, userSuffix);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FSLdapCreateReqInfo {\n");
    
    sb.append("    adminDn: ").append(toIndentedString(adminDn)).append("\n");
    sb.append("    connectionTimeout: ").append(toIndentedString(connectionTimeout)).append("\n");
    sb.append("    groupSuffix: ").append(toIndentedString(groupSuffix)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    ips: ").append(toIndentedString(ips)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    userSuffix: ").append(toIndentedString(userSuffix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
