/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * OspMetadataServerStat represents osp metadata server stat info
 */
@Schema(description = "OspMetadataServerStat represents osp metadata server stat info")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspMetadataServerStat {
  @SerializedName("cpu_util")
  private Double cpuUtil = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("disk_util")
  private Double diskUtil = null;

  @SerializedName("mem_usage_percent")
  private Double memUsagePercent = null;

  @SerializedName("recv_bandwidth_kbyte")
  private Double recvBandwidthKbyte = null;

  @SerializedName("send_bandwidth_kbyte")
  private Double sendBandwidthKbyte = null;

  @SerializedName("total_size_byte")
  private Long totalSizeByte = null;

  @SerializedName("used_size_byte")
  private Long usedSizeByte = null;

  public OspMetadataServerStat cpuUtil(Double cpuUtil) {
    this.cpuUtil = cpuUtil;
    return this;
  }

   /**
   * Get cpuUtil
   * @return cpuUtil
  **/
  @Schema(description = "")
  public Double getCpuUtil() {
    return cpuUtil;
  }

  public void setCpuUtil(Double cpuUtil) {
    this.cpuUtil = cpuUtil;
  }

  public OspMetadataServerStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OspMetadataServerStat diskUtil(Double diskUtil) {
    this.diskUtil = diskUtil;
    return this;
  }

   /**
   * Get diskUtil
   * @return diskUtil
  **/
  @Schema(description = "")
  public Double getDiskUtil() {
    return diskUtil;
  }

  public void setDiskUtil(Double diskUtil) {
    this.diskUtil = diskUtil;
  }

  public OspMetadataServerStat memUsagePercent(Double memUsagePercent) {
    this.memUsagePercent = memUsagePercent;
    return this;
  }

   /**
   * Get memUsagePercent
   * @return memUsagePercent
  **/
  @Schema(description = "")
  public Double getMemUsagePercent() {
    return memUsagePercent;
  }

  public void setMemUsagePercent(Double memUsagePercent) {
    this.memUsagePercent = memUsagePercent;
  }

  public OspMetadataServerStat recvBandwidthKbyte(Double recvBandwidthKbyte) {
    this.recvBandwidthKbyte = recvBandwidthKbyte;
    return this;
  }

   /**
   * Get recvBandwidthKbyte
   * @return recvBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getRecvBandwidthKbyte() {
    return recvBandwidthKbyte;
  }

  public void setRecvBandwidthKbyte(Double recvBandwidthKbyte) {
    this.recvBandwidthKbyte = recvBandwidthKbyte;
  }

  public OspMetadataServerStat sendBandwidthKbyte(Double sendBandwidthKbyte) {
    this.sendBandwidthKbyte = sendBandwidthKbyte;
    return this;
  }

   /**
   * Get sendBandwidthKbyte
   * @return sendBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getSendBandwidthKbyte() {
    return sendBandwidthKbyte;
  }

  public void setSendBandwidthKbyte(Double sendBandwidthKbyte) {
    this.sendBandwidthKbyte = sendBandwidthKbyte;
  }

  public OspMetadataServerStat totalSizeByte(Long totalSizeByte) {
    this.totalSizeByte = totalSizeByte;
    return this;
  }

   /**
   * Get totalSizeByte
   * @return totalSizeByte
  **/
  @Schema(description = "")
  public Long getTotalSizeByte() {
    return totalSizeByte;
  }

  public void setTotalSizeByte(Long totalSizeByte) {
    this.totalSizeByte = totalSizeByte;
  }

  public OspMetadataServerStat usedSizeByte(Long usedSizeByte) {
    this.usedSizeByte = usedSizeByte;
    return this;
  }

   /**
   * Get usedSizeByte
   * @return usedSizeByte
  **/
  @Schema(description = "")
  public Long getUsedSizeByte() {
    return usedSizeByte;
  }

  public void setUsedSizeByte(Long usedSizeByte) {
    this.usedSizeByte = usedSizeByte;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspMetadataServerStat ospMetadataServerStat = (OspMetadataServerStat) o;
    return Objects.equals(this.cpuUtil, ospMetadataServerStat.cpuUtil) &&
        Objects.equals(this.create, ospMetadataServerStat.create) &&
        Objects.equals(this.diskUtil, ospMetadataServerStat.diskUtil) &&
        Objects.equals(this.memUsagePercent, ospMetadataServerStat.memUsagePercent) &&
        Objects.equals(this.recvBandwidthKbyte, ospMetadataServerStat.recvBandwidthKbyte) &&
        Objects.equals(this.sendBandwidthKbyte, ospMetadataServerStat.sendBandwidthKbyte) &&
        Objects.equals(this.totalSizeByte, ospMetadataServerStat.totalSizeByte) &&
        Objects.equals(this.usedSizeByte, ospMetadataServerStat.usedSizeByte);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuUtil, create, diskUtil, memUsagePercent, recvBandwidthKbyte, sendBandwidthKbyte, totalSizeByte, usedSizeByte);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspMetadataServerStat {\n");
    
    sb.append("    cpuUtil: ").append(toIndentedString(cpuUtil)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    diskUtil: ").append(toIndentedString(diskUtil)).append("\n");
    sb.append("    memUsagePercent: ").append(toIndentedString(memUsagePercent)).append("\n");
    sb.append("    recvBandwidthKbyte: ").append(toIndentedString(recvBandwidthKbyte)).append("\n");
    sb.append("    sendBandwidthKbyte: ").append(toIndentedString(sendBandwidthKbyte)).append("\n");
    sb.append("    totalSizeByte: ").append(toIndentedString(totalSizeByte)).append("\n");
    sb.append("    usedSizeByte: ").append(toIndentedString(usedSizeByte)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
