/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.Disk;
import xio.sds.client.model.HostNestview;
import xio.sds.client.model.OsdGroupNestview;
import xio.sds.client.model.OspMetadataCluster;
import xio.sds.client.model.Partition;
import xio.sds.client.model.PoolNestview;
/**
 * Osd contains information of a osd and it&#x27;s stats.
 */
@Schema(description = "Osd contains information of a osd and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class Osd {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("bind_osd_group")
  private OsdGroupNestview bindOsdGroup = null;

  @SerializedName("bind_pool")
  private PoolNestview bindPool = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("data_dir")
  private String dataDir = null;

  @SerializedName("disk")
  private Disk disk = null;

  @SerializedName("exit_count")
  private Long exitCount = null;

  @SerializedName("exit_time")
  private OffsetDateTime exitTime = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("in")
  private Boolean in = null;

  @SerializedName("init_time")
  private OffsetDateTime initTime = null;

  @SerializedName("last_scrub_time")
  private OffsetDateTime lastScrubTime = null;

  @SerializedName("meta_bytes")
  private Long metaBytes = null;

  @SerializedName("min_alloc_size")
  private Long minAllocSize = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("numa_node")
  private Long numaNode = null;

  @SerializedName("omap_byte")
  private Long omapByte = null;

  @SerializedName("osd_group")
  private OsdGroupNestview osdGroup = null;

  @SerializedName("osd_id")
  private Long osdId = null;

  @SerializedName("osp_metadata_cluster")
  private OspMetadataCluster ospMetadataCluster = null;

  @SerializedName("partition")
  private Partition partition = null;

  @SerializedName("pool")
  private PoolNestview pool = null;

  @SerializedName("read_cache_size")
  private Long readCacheSize = null;

  @SerializedName("role")
  private String role = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_class")
  private String statusClass = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("up")
  private Boolean up = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("uuid")
  private String uuid = null;

  public Osd actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public Osd bindOsdGroup(OsdGroupNestview bindOsdGroup) {
    this.bindOsdGroup = bindOsdGroup;
    return this;
  }

   /**
   * Get bindOsdGroup
   * @return bindOsdGroup
  **/
  @Schema(description = "")
  public OsdGroupNestview getBindOsdGroup() {
    return bindOsdGroup;
  }

  public void setBindOsdGroup(OsdGroupNestview bindOsdGroup) {
    this.bindOsdGroup = bindOsdGroup;
  }

  public Osd bindPool(PoolNestview bindPool) {
    this.bindPool = bindPool;
    return this;
  }

   /**
   * Get bindPool
   * @return bindPool
  **/
  @Schema(description = "")
  public PoolNestview getBindPool() {
    return bindPool;
  }

  public void setBindPool(PoolNestview bindPool) {
    this.bindPool = bindPool;
  }

  public Osd cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public Osd create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public Osd dataDir(String dataDir) {
    this.dataDir = dataDir;
    return this;
  }

   /**
   * Get dataDir
   * @return dataDir
  **/
  @Schema(description = "")
  public String getDataDir() {
    return dataDir;
  }

  public void setDataDir(String dataDir) {
    this.dataDir = dataDir;
  }

  public Osd disk(Disk disk) {
    this.disk = disk;
    return this;
  }

   /**
   * Get disk
   * @return disk
  **/
  @Schema(description = "")
  public Disk getDisk() {
    return disk;
  }

  public void setDisk(Disk disk) {
    this.disk = disk;
  }

  public Osd exitCount(Long exitCount) {
    this.exitCount = exitCount;
    return this;
  }

   /**
   * Get exitCount
   * @return exitCount
  **/
  @Schema(description = "")
  public Long getExitCount() {
    return exitCount;
  }

  public void setExitCount(Long exitCount) {
    this.exitCount = exitCount;
  }

  public Osd exitTime(OffsetDateTime exitTime) {
    this.exitTime = exitTime;
    return this;
  }

   /**
   * Get exitTime
   * @return exitTime
  **/
  @Schema(description = "")
  public OffsetDateTime getExitTime() {
    return exitTime;
  }

  public void setExitTime(OffsetDateTime exitTime) {
    this.exitTime = exitTime;
  }

  public Osd host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public Osd id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Osd in(Boolean in) {
    this.in = in;
    return this;
  }

   /**
   * Get in
   * @return in
  **/
  @Schema(description = "")
  public Boolean isIn() {
    return in;
  }

  public void setIn(Boolean in) {
    this.in = in;
  }

  public Osd initTime(OffsetDateTime initTime) {
    this.initTime = initTime;
    return this;
  }

   /**
   * Get initTime
   * @return initTime
  **/
  @Schema(description = "")
  public OffsetDateTime getInitTime() {
    return initTime;
  }

  public void setInitTime(OffsetDateTime initTime) {
    this.initTime = initTime;
  }

  public Osd lastScrubTime(OffsetDateTime lastScrubTime) {
    this.lastScrubTime = lastScrubTime;
    return this;
  }

   /**
   * Get lastScrubTime
   * @return lastScrubTime
  **/
  @Schema(description = "")
  public OffsetDateTime getLastScrubTime() {
    return lastScrubTime;
  }

  public void setLastScrubTime(OffsetDateTime lastScrubTime) {
    this.lastScrubTime = lastScrubTime;
  }

  public Osd metaBytes(Long metaBytes) {
    this.metaBytes = metaBytes;
    return this;
  }

   /**
   * Get metaBytes
   * @return metaBytes
  **/
  @Schema(description = "")
  public Long getMetaBytes() {
    return metaBytes;
  }

  public void setMetaBytes(Long metaBytes) {
    this.metaBytes = metaBytes;
  }

  public Osd minAllocSize(Long minAllocSize) {
    this.minAllocSize = minAllocSize;
    return this;
  }

   /**
   * Get minAllocSize
   * @return minAllocSize
  **/
  @Schema(description = "")
  public Long getMinAllocSize() {
    return minAllocSize;
  }

  public void setMinAllocSize(Long minAllocSize) {
    this.minAllocSize = minAllocSize;
  }

  public Osd name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Osd numaNode(Long numaNode) {
    this.numaNode = numaNode;
    return this;
  }

   /**
   * Get numaNode
   * @return numaNode
  **/
  @Schema(description = "")
  public Long getNumaNode() {
    return numaNode;
  }

  public void setNumaNode(Long numaNode) {
    this.numaNode = numaNode;
  }

  public Osd omapByte(Long omapByte) {
    this.omapByte = omapByte;
    return this;
  }

   /**
   * Get omapByte
   * @return omapByte
  **/
  @Schema(description = "")
  public Long getOmapByte() {
    return omapByte;
  }

  public void setOmapByte(Long omapByte) {
    this.omapByte = omapByte;
  }

  public Osd osdGroup(OsdGroupNestview osdGroup) {
    this.osdGroup = osdGroup;
    return this;
  }

   /**
   * Get osdGroup
   * @return osdGroup
  **/
  @Schema(description = "")
  public OsdGroupNestview getOsdGroup() {
    return osdGroup;
  }

  public void setOsdGroup(OsdGroupNestview osdGroup) {
    this.osdGroup = osdGroup;
  }

  public Osd osdId(Long osdId) {
    this.osdId = osdId;
    return this;
  }

   /**
   * Get osdId
   * @return osdId
  **/
  @Schema(description = "")
  public Long getOsdId() {
    return osdId;
  }

  public void setOsdId(Long osdId) {
    this.osdId = osdId;
  }

  public Osd ospMetadataCluster(OspMetadataCluster ospMetadataCluster) {
    this.ospMetadataCluster = ospMetadataCluster;
    return this;
  }

   /**
   * Get ospMetadataCluster
   * @return ospMetadataCluster
  **/
  @Schema(description = "")
  public OspMetadataCluster getOspMetadataCluster() {
    return ospMetadataCluster;
  }

  public void setOspMetadataCluster(OspMetadataCluster ospMetadataCluster) {
    this.ospMetadataCluster = ospMetadataCluster;
  }

  public Osd partition(Partition partition) {
    this.partition = partition;
    return this;
  }

   /**
   * Get partition
   * @return partition
  **/
  @Schema(description = "")
  public Partition getPartition() {
    return partition;
  }

  public void setPartition(Partition partition) {
    this.partition = partition;
  }

  public Osd pool(PoolNestview pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Get pool
   * @return pool
  **/
  @Schema(description = "")
  public PoolNestview getPool() {
    return pool;
  }

  public void setPool(PoolNestview pool) {
    this.pool = pool;
  }

  public Osd readCacheSize(Long readCacheSize) {
    this.readCacheSize = readCacheSize;
    return this;
  }

   /**
   * Get readCacheSize
   * @return readCacheSize
  **/
  @Schema(description = "")
  public Long getReadCacheSize() {
    return readCacheSize;
  }

  public void setReadCacheSize(Long readCacheSize) {
    this.readCacheSize = readCacheSize;
  }

  public Osd role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public Osd status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Osd statusClass(String statusClass) {
    this.statusClass = statusClass;
    return this;
  }

   /**
   * Get statusClass
   * @return statusClass
  **/
  @Schema(description = "")
  public String getStatusClass() {
    return statusClass;
  }

  public void setStatusClass(String statusClass) {
    this.statusClass = statusClass;
  }

  public Osd type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Osd up(Boolean up) {
    this.up = up;
    return this;
  }

   /**
   * Get up
   * @return up
  **/
  @Schema(description = "")
  public Boolean isUp() {
    return up;
  }

  public void setUp(Boolean up) {
    this.up = up;
  }

  public Osd update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public Osd uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Osd osd = (Osd) o;
    return Objects.equals(this.actionStatus, osd.actionStatus) &&
        Objects.equals(this.bindOsdGroup, osd.bindOsdGroup) &&
        Objects.equals(this.bindPool, osd.bindPool) &&
        Objects.equals(this.cluster, osd.cluster) &&
        Objects.equals(this.create, osd.create) &&
        Objects.equals(this.dataDir, osd.dataDir) &&
        Objects.equals(this.disk, osd.disk) &&
        Objects.equals(this.exitCount, osd.exitCount) &&
        Objects.equals(this.exitTime, osd.exitTime) &&
        Objects.equals(this.host, osd.host) &&
        Objects.equals(this.id, osd.id) &&
        Objects.equals(this.in, osd.in) &&
        Objects.equals(this.initTime, osd.initTime) &&
        Objects.equals(this.lastScrubTime, osd.lastScrubTime) &&
        Objects.equals(this.metaBytes, osd.metaBytes) &&
        Objects.equals(this.minAllocSize, osd.minAllocSize) &&
        Objects.equals(this.name, osd.name) &&
        Objects.equals(this.numaNode, osd.numaNode) &&
        Objects.equals(this.omapByte, osd.omapByte) &&
        Objects.equals(this.osdGroup, osd.osdGroup) &&
        Objects.equals(this.osdId, osd.osdId) &&
        Objects.equals(this.ospMetadataCluster, osd.ospMetadataCluster) &&
        Objects.equals(this.partition, osd.partition) &&
        Objects.equals(this.pool, osd.pool) &&
        Objects.equals(this.readCacheSize, osd.readCacheSize) &&
        Objects.equals(this.role, osd.role) &&
        Objects.equals(this.status, osd.status) &&
        Objects.equals(this.statusClass, osd.statusClass) &&
        Objects.equals(this.type, osd.type) &&
        Objects.equals(this.up, osd.up) &&
        Objects.equals(this.update, osd.update) &&
        Objects.equals(this.uuid, osd.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, bindOsdGroup, bindPool, cluster, create, dataDir, disk, exitCount, exitTime, host, id, in, initTime, lastScrubTime, metaBytes, minAllocSize, name, numaNode, omapByte, osdGroup, osdId, ospMetadataCluster, partition, pool, readCacheSize, role, status, statusClass, type, up, update, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Osd {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    bindOsdGroup: ").append(toIndentedString(bindOsdGroup)).append("\n");
    sb.append("    bindPool: ").append(toIndentedString(bindPool)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    dataDir: ").append(toIndentedString(dataDir)).append("\n");
    sb.append("    disk: ").append(toIndentedString(disk)).append("\n");
    sb.append("    exitCount: ").append(toIndentedString(exitCount)).append("\n");
    sb.append("    exitTime: ").append(toIndentedString(exitTime)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    in: ").append(toIndentedString(in)).append("\n");
    sb.append("    initTime: ").append(toIndentedString(initTime)).append("\n");
    sb.append("    lastScrubTime: ").append(toIndentedString(lastScrubTime)).append("\n");
    sb.append("    metaBytes: ").append(toIndentedString(metaBytes)).append("\n");
    sb.append("    minAllocSize: ").append(toIndentedString(minAllocSize)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numaNode: ").append(toIndentedString(numaNode)).append("\n");
    sb.append("    omapByte: ").append(toIndentedString(omapByte)).append("\n");
    sb.append("    osdGroup: ").append(toIndentedString(osdGroup)).append("\n");
    sb.append("    osdId: ").append(toIndentedString(osdId)).append("\n");
    sb.append("    ospMetadataCluster: ").append(toIndentedString(ospMetadataCluster)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    readCacheSize: ").append(toIndentedString(readCacheSize)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusClass: ").append(toIndentedString(statusClass)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    up: ").append(toIndentedString(up)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
