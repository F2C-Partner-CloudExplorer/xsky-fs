/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsGatewayGroupNestview;
import xio.sds.client.model.DfsPathNestview;
import xio.sds.client.model.DfsRootfsNestview;
/**
 * DfsNFSShare defines model of dfs nfs share +X:model:generate;with_detailed;order_by&#x3D;-ID +X:benchmark:
 */
@Schema(description = "DfsNFSShare defines model of dfs nfs share +X:model:generate;with_detailed;order_by=-ID +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsNFSShare {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_gateway_group")
  private DfsGatewayGroupNestview dfsGatewayGroup = null;

  @SerializedName("dfs_path")
  private DfsPathNestview dfsPath = null;

  @SerializedName("dfs_rootfs")
  private DfsRootfsNestview dfsRootfs = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nfs_versions")
  private List<String> nfsVersions = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("total_snapshot_num")
  private Long totalSnapshotNum = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("version")
  private String version = null;

  public DfsNFSShare actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsNFSShare cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsNFSShare create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsNFSShare description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsNFSShare dfsGatewayGroup(DfsGatewayGroupNestview dfsGatewayGroup) {
    this.dfsGatewayGroup = dfsGatewayGroup;
    return this;
  }

   /**
   * Get dfsGatewayGroup
   * @return dfsGatewayGroup
  **/
  @Schema(description = "")
  public DfsGatewayGroupNestview getDfsGatewayGroup() {
    return dfsGatewayGroup;
  }

  public void setDfsGatewayGroup(DfsGatewayGroupNestview dfsGatewayGroup) {
    this.dfsGatewayGroup = dfsGatewayGroup;
  }

  public DfsNFSShare dfsPath(DfsPathNestview dfsPath) {
    this.dfsPath = dfsPath;
    return this;
  }

   /**
   * Get dfsPath
   * @return dfsPath
  **/
  @Schema(description = "")
  public DfsPathNestview getDfsPath() {
    return dfsPath;
  }

  public void setDfsPath(DfsPathNestview dfsPath) {
    this.dfsPath = dfsPath;
  }

  public DfsNFSShare dfsRootfs(DfsRootfsNestview dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
    return this;
  }

   /**
   * Get dfsRootfs
   * @return dfsRootfs
  **/
  @Schema(description = "")
  public DfsRootfsNestview getDfsRootfs() {
    return dfsRootfs;
  }

  public void setDfsRootfs(DfsRootfsNestview dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
  }

  public DfsNFSShare id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsNFSShare name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsNFSShare nfsVersions(List<String> nfsVersions) {
    this.nfsVersions = nfsVersions;
    return this;
  }

  public DfsNFSShare addNfsVersionsItem(String nfsVersionsItem) {
    if (this.nfsVersions == null) {
      this.nfsVersions = new ArrayList<String>();
    }
    this.nfsVersions.add(nfsVersionsItem);
    return this;
  }

   /**
   * Get nfsVersions
   * @return nfsVersions
  **/
  @Schema(description = "")
  public List<String> getNfsVersions() {
    return nfsVersions;
  }

  public void setNfsVersions(List<String> nfsVersions) {
    this.nfsVersions = nfsVersions;
  }

  public DfsNFSShare status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsNFSShare totalSnapshotNum(Long totalSnapshotNum) {
    this.totalSnapshotNum = totalSnapshotNum;
    return this;
  }

   /**
   * Get totalSnapshotNum
   * @return totalSnapshotNum
  **/
  @Schema(description = "")
  public Long getTotalSnapshotNum() {
    return totalSnapshotNum;
  }

  public void setTotalSnapshotNum(Long totalSnapshotNum) {
    this.totalSnapshotNum = totalSnapshotNum;
  }

  public DfsNFSShare update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public DfsNFSShare version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsNFSShare dfsNFSShare = (DfsNFSShare) o;
    return Objects.equals(this.actionStatus, dfsNFSShare.actionStatus) &&
        Objects.equals(this.cluster, dfsNFSShare.cluster) &&
        Objects.equals(this.create, dfsNFSShare.create) &&
        Objects.equals(this.description, dfsNFSShare.description) &&
        Objects.equals(this.dfsGatewayGroup, dfsNFSShare.dfsGatewayGroup) &&
        Objects.equals(this.dfsPath, dfsNFSShare.dfsPath) &&
        Objects.equals(this.dfsRootfs, dfsNFSShare.dfsRootfs) &&
        Objects.equals(this.id, dfsNFSShare.id) &&
        Objects.equals(this.name, dfsNFSShare.name) &&
        Objects.equals(this.nfsVersions, dfsNFSShare.nfsVersions) &&
        Objects.equals(this.status, dfsNFSShare.status) &&
        Objects.equals(this.totalSnapshotNum, dfsNFSShare.totalSnapshotNum) &&
        Objects.equals(this.update, dfsNFSShare.update) &&
        Objects.equals(this.version, dfsNFSShare.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, description, dfsGatewayGroup, dfsPath, dfsRootfs, id, name, nfsVersions, status, totalSnapshotNum, update, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsNFSShare {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsGatewayGroup: ").append(toIndentedString(dfsGatewayGroup)).append("\n");
    sb.append("    dfsPath: ").append(toIndentedString(dfsPath)).append("\n");
    sb.append("    dfsRootfs: ").append(toIndentedString(dfsRootfs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfsVersions: ").append(toIndentedString(nfsVersions)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    totalSnapshotNum: ").append(toIndentedString(totalSnapshotNum)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
