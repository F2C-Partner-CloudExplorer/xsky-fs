/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.FCPortNestview;
/**
 * FCPortErrCode defines model of fc port errcode stats data
 */
@Schema(description = "FCPortErrCode defines model of fc port errcode stats data")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class FCPortErrCode {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("error_frames")
  private Long errorFrames = null;

  @SerializedName("error_frames_offset")
  private Long errorFramesOffset = null;

  @SerializedName("error_frames_value")
  private Long errorFramesValue = null;

  @SerializedName("fc_port")
  private FCPortNestview fcPort = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("link_failure_count")
  private Long linkFailureCount = null;

  @SerializedName("loss_of_signal_count")
  private Long lossOfSignalCount = null;

  @SerializedName("loss_of_sync_count")
  private Long lossOfSyncCount = null;

  @SerializedName("start")
  private OffsetDateTime start = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public FCPortErrCode create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public FCPortErrCode errorFrames(Long errorFrames) {
    this.errorFrames = errorFrames;
    return this;
  }

   /**
   * Get errorFrames
   * @return errorFrames
  **/
  @Schema(description = "")
  public Long getErrorFrames() {
    return errorFrames;
  }

  public void setErrorFrames(Long errorFrames) {
    this.errorFrames = errorFrames;
  }

  public FCPortErrCode errorFramesOffset(Long errorFramesOffset) {
    this.errorFramesOffset = errorFramesOffset;
    return this;
  }

   /**
   * Get errorFramesOffset
   * @return errorFramesOffset
  **/
  @Schema(description = "")
  public Long getErrorFramesOffset() {
    return errorFramesOffset;
  }

  public void setErrorFramesOffset(Long errorFramesOffset) {
    this.errorFramesOffset = errorFramesOffset;
  }

  public FCPortErrCode errorFramesValue(Long errorFramesValue) {
    this.errorFramesValue = errorFramesValue;
    return this;
  }

   /**
   * Get errorFramesValue
   * @return errorFramesValue
  **/
  @Schema(description = "")
  public Long getErrorFramesValue() {
    return errorFramesValue;
  }

  public void setErrorFramesValue(Long errorFramesValue) {
    this.errorFramesValue = errorFramesValue;
  }

  public FCPortErrCode fcPort(FCPortNestview fcPort) {
    this.fcPort = fcPort;
    return this;
  }

   /**
   * Get fcPort
   * @return fcPort
  **/
  @Schema(description = "")
  public FCPortNestview getFcPort() {
    return fcPort;
  }

  public void setFcPort(FCPortNestview fcPort) {
    this.fcPort = fcPort;
  }

  public FCPortErrCode id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public FCPortErrCode linkFailureCount(Long linkFailureCount) {
    this.linkFailureCount = linkFailureCount;
    return this;
  }

   /**
   * Get linkFailureCount
   * @return linkFailureCount
  **/
  @Schema(description = "")
  public Long getLinkFailureCount() {
    return linkFailureCount;
  }

  public void setLinkFailureCount(Long linkFailureCount) {
    this.linkFailureCount = linkFailureCount;
  }

  public FCPortErrCode lossOfSignalCount(Long lossOfSignalCount) {
    this.lossOfSignalCount = lossOfSignalCount;
    return this;
  }

   /**
   * Get lossOfSignalCount
   * @return lossOfSignalCount
  **/
  @Schema(description = "")
  public Long getLossOfSignalCount() {
    return lossOfSignalCount;
  }

  public void setLossOfSignalCount(Long lossOfSignalCount) {
    this.lossOfSignalCount = lossOfSignalCount;
  }

  public FCPortErrCode lossOfSyncCount(Long lossOfSyncCount) {
    this.lossOfSyncCount = lossOfSyncCount;
    return this;
  }

   /**
   * Get lossOfSyncCount
   * @return lossOfSyncCount
  **/
  @Schema(description = "")
  public Long getLossOfSyncCount() {
    return lossOfSyncCount;
  }

  public void setLossOfSyncCount(Long lossOfSyncCount) {
    this.lossOfSyncCount = lossOfSyncCount;
  }

  public FCPortErrCode start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @Schema(description = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public FCPortErrCode update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FCPortErrCode fcPortErrCode = (FCPortErrCode) o;
    return Objects.equals(this.create, fcPortErrCode.create) &&
        Objects.equals(this.errorFrames, fcPortErrCode.errorFrames) &&
        Objects.equals(this.errorFramesOffset, fcPortErrCode.errorFramesOffset) &&
        Objects.equals(this.errorFramesValue, fcPortErrCode.errorFramesValue) &&
        Objects.equals(this.fcPort, fcPortErrCode.fcPort) &&
        Objects.equals(this.id, fcPortErrCode.id) &&
        Objects.equals(this.linkFailureCount, fcPortErrCode.linkFailureCount) &&
        Objects.equals(this.lossOfSignalCount, fcPortErrCode.lossOfSignalCount) &&
        Objects.equals(this.lossOfSyncCount, fcPortErrCode.lossOfSyncCount) &&
        Objects.equals(this.start, fcPortErrCode.start) &&
        Objects.equals(this.update, fcPortErrCode.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, errorFrames, errorFramesOffset, errorFramesValue, fcPort, id, linkFailureCount, lossOfSignalCount, lossOfSyncCount, start, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FCPortErrCode {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    errorFrames: ").append(toIndentedString(errorFrames)).append("\n");
    sb.append("    errorFramesOffset: ").append(toIndentedString(errorFramesOffset)).append("\n");
    sb.append("    errorFramesValue: ").append(toIndentedString(errorFramesValue)).append("\n");
    sb.append("    fcPort: ").append(toIndentedString(fcPort)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    linkFailureCount: ").append(toIndentedString(linkFailureCount)).append("\n");
    sb.append("    lossOfSignalCount: ").append(toIndentedString(lossOfSignalCount)).append("\n");
    sb.append("    lossOfSyncCount: ").append(toIndentedString(lossOfSyncCount)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
