/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OspBucketFlowStat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspBucketFlowStat {
  @SerializedName("rx_bytes")
  private Long rxBytes = null;

  @SerializedName("tx_bandwidth_kbyte")
  private Double txBandwidthKbyte = null;

  @SerializedName("total_ops")
  private Long totalOps = null;

  @SerializedName("tx_bytes")
  private Long txBytes = null;

  @SerializedName("rx_bandwidth_kbyte")
  private Double rxBandwidthKbyte = null;

  @SerializedName("total_ops_pm")
  private Double totalOpsPm = null;

  @SerializedName("total_latency")
  private Long totalLatency = null;

  @SerializedName("total_latency_us")
  private Double totalLatencyUs = null;

  @SerializedName("create")
  private String create = null;

  public OspBucketFlowStat rxBytes(Long rxBytes) {
    this.rxBytes = rxBytes;
    return this;
  }

   /**
   * Get rxBytes
   * @return rxBytes
  **/
  @Schema(description = "")
  public Long getRxBytes() {
    return rxBytes;
  }

  public void setRxBytes(Long rxBytes) {
    this.rxBytes = rxBytes;
  }

  public OspBucketFlowStat txBandwidthKbyte(Double txBandwidthKbyte) {
    this.txBandwidthKbyte = txBandwidthKbyte;
    return this;
  }

   /**
   * Get txBandwidthKbyte
   * @return txBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getTxBandwidthKbyte() {
    return txBandwidthKbyte;
  }

  public void setTxBandwidthKbyte(Double txBandwidthKbyte) {
    this.txBandwidthKbyte = txBandwidthKbyte;
  }

  public OspBucketFlowStat totalOps(Long totalOps) {
    this.totalOps = totalOps;
    return this;
  }

   /**
   * Get totalOps
   * @return totalOps
  **/
  @Schema(description = "")
  public Long getTotalOps() {
    return totalOps;
  }

  public void setTotalOps(Long totalOps) {
    this.totalOps = totalOps;
  }

  public OspBucketFlowStat txBytes(Long txBytes) {
    this.txBytes = txBytes;
    return this;
  }

   /**
   * Get txBytes
   * @return txBytes
  **/
  @Schema(description = "")
  public Long getTxBytes() {
    return txBytes;
  }

  public void setTxBytes(Long txBytes) {
    this.txBytes = txBytes;
  }

  public OspBucketFlowStat rxBandwidthKbyte(Double rxBandwidthKbyte) {
    this.rxBandwidthKbyte = rxBandwidthKbyte;
    return this;
  }

   /**
   * Get rxBandwidthKbyte
   * @return rxBandwidthKbyte
  **/
  @Schema(description = "")
  public Double getRxBandwidthKbyte() {
    return rxBandwidthKbyte;
  }

  public void setRxBandwidthKbyte(Double rxBandwidthKbyte) {
    this.rxBandwidthKbyte = rxBandwidthKbyte;
  }

  public OspBucketFlowStat totalOpsPm(Double totalOpsPm) {
    this.totalOpsPm = totalOpsPm;
    return this;
  }

   /**
   * Get totalOpsPm
   * @return totalOpsPm
  **/
  @Schema(description = "")
  public Double getTotalOpsPm() {
    return totalOpsPm;
  }

  public void setTotalOpsPm(Double totalOpsPm) {
    this.totalOpsPm = totalOpsPm;
  }

  public OspBucketFlowStat totalLatency(Long totalLatency) {
    this.totalLatency = totalLatency;
    return this;
  }

   /**
   * Get totalLatency
   * @return totalLatency
  **/
  @Schema(description = "")
  public Long getTotalLatency() {
    return totalLatency;
  }

  public void setTotalLatency(Long totalLatency) {
    this.totalLatency = totalLatency;
  }

  public OspBucketFlowStat totalLatencyUs(Double totalLatencyUs) {
    this.totalLatencyUs = totalLatencyUs;
    return this;
  }

   /**
   * Get totalLatencyUs
   * @return totalLatencyUs
  **/
  @Schema(description = "")
  public Double getTotalLatencyUs() {
    return totalLatencyUs;
  }

  public void setTotalLatencyUs(Double totalLatencyUs) {
    this.totalLatencyUs = totalLatencyUs;
  }

  public OspBucketFlowStat create(String create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public String getCreate() {
    return create;
  }

  public void setCreate(String create) {
    this.create = create;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspBucketFlowStat ospBucketFlowStat = (OspBucketFlowStat) o;
    return Objects.equals(this.rxBytes, ospBucketFlowStat.rxBytes) &&
        Objects.equals(this.txBandwidthKbyte, ospBucketFlowStat.txBandwidthKbyte) &&
        Objects.equals(this.totalOps, ospBucketFlowStat.totalOps) &&
        Objects.equals(this.txBytes, ospBucketFlowStat.txBytes) &&
        Objects.equals(this.rxBandwidthKbyte, ospBucketFlowStat.rxBandwidthKbyte) &&
        Objects.equals(this.totalOpsPm, ospBucketFlowStat.totalOpsPm) &&
        Objects.equals(this.totalLatency, ospBucketFlowStat.totalLatency) &&
        Objects.equals(this.totalLatencyUs, ospBucketFlowStat.totalLatencyUs) &&
        Objects.equals(this.create, ospBucketFlowStat.create);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rxBytes, txBandwidthKbyte, totalOps, txBytes, rxBandwidthKbyte, totalOpsPm, totalLatency, totalLatencyUs, create);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspBucketFlowStat {\n");
    
    sb.append("    rxBytes: ").append(toIndentedString(rxBytes)).append("\n");
    sb.append("    txBandwidthKbyte: ").append(toIndentedString(txBandwidthKbyte)).append("\n");
    sb.append("    totalOps: ").append(toIndentedString(totalOps)).append("\n");
    sb.append("    txBytes: ").append(toIndentedString(txBytes)).append("\n");
    sb.append("    rxBandwidthKbyte: ").append(toIndentedString(rxBandwidthKbyte)).append("\n");
    sb.append("    totalOpsPm: ").append(toIndentedString(totalOpsPm)).append("\n");
    sb.append("    totalLatency: ").append(toIndentedString(totalLatency)).append("\n");
    sb.append("    totalLatencyUs: ").append(toIndentedString(totalLatencyUs)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
