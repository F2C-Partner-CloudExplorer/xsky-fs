/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.FSUserNestview;
/**
 * FSUserGroup defines model of file storage user group
 */
@Schema(description = "FSUserGroup defines model of file storage user group")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class FSUserGroup {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("fs_users")
  private List<FSUserNestview> fsUsers = null;

  @SerializedName("group_id")
  private Long groupId = null;

  @SerializedName("hdfs_num")
  private Long hdfsNum = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("policy_filter_num")
  private Long policyFilterNum = null;

  @SerializedName("quota_num")
  private Long quotaNum = null;

  @SerializedName("share_nums")
  private Map<String, Long> shareNums = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("user_num")
  private Long userNum = null;

  public FSUserGroup actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public FSUserGroup cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public FSUserGroup create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public FSUserGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FSUserGroup fsUsers(List<FSUserNestview> fsUsers) {
    this.fsUsers = fsUsers;
    return this;
  }

  public FSUserGroup addFsUsersItem(FSUserNestview fsUsersItem) {
    if (this.fsUsers == null) {
      this.fsUsers = new ArrayList<FSUserNestview>();
    }
    this.fsUsers.add(fsUsersItem);
    return this;
  }

   /**
   * Not reload default, because it will cause a lot of memory in action log
   * @return fsUsers
  **/
  @Schema(description = "Not reload default, because it will cause a lot of memory in action log")
  public List<FSUserNestview> getFsUsers() {
    return fsUsers;
  }

  public void setFsUsers(List<FSUserNestview> fsUsers) {
    this.fsUsers = fsUsers;
  }

  public FSUserGroup groupId(Long groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @Schema(description = "")
  public Long getGroupId() {
    return groupId;
  }

  public void setGroupId(Long groupId) {
    this.groupId = groupId;
  }

  public FSUserGroup hdfsNum(Long hdfsNum) {
    this.hdfsNum = hdfsNum;
    return this;
  }

   /**
   * Get hdfsNum
   * @return hdfsNum
  **/
  @Schema(description = "")
  public Long getHdfsNum() {
    return hdfsNum;
  }

  public void setHdfsNum(Long hdfsNum) {
    this.hdfsNum = hdfsNum;
  }

  public FSUserGroup id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public FSUserGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FSUserGroup policyFilterNum(Long policyFilterNum) {
    this.policyFilterNum = policyFilterNum;
    return this;
  }

   /**
   * Get policyFilterNum
   * @return policyFilterNum
  **/
  @Schema(description = "")
  public Long getPolicyFilterNum() {
    return policyFilterNum;
  }

  public void setPolicyFilterNum(Long policyFilterNum) {
    this.policyFilterNum = policyFilterNum;
  }

  public FSUserGroup quotaNum(Long quotaNum) {
    this.quotaNum = quotaNum;
    return this;
  }

   /**
   * Get quotaNum
   * @return quotaNum
  **/
  @Schema(description = "")
  public Long getQuotaNum() {
    return quotaNum;
  }

  public void setQuotaNum(Long quotaNum) {
    this.quotaNum = quotaNum;
  }

  public FSUserGroup shareNums(Map<String, Long> shareNums) {
    this.shareNums = shareNums;
    return this;
  }

  public FSUserGroup putShareNumsItem(String key, Long shareNumsItem) {
    if (this.shareNums == null) {
      this.shareNums = new HashMap<String, Long>();
    }
    this.shareNums.put(key, shareNumsItem);
    return this;
  }

   /**
   * Get shareNums
   * @return shareNums
  **/
  @Schema(description = "")
  public Map<String, Long> getShareNums() {
    return shareNums;
  }

  public void setShareNums(Map<String, Long> shareNums) {
    this.shareNums = shareNums;
  }

  public FSUserGroup update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public FSUserGroup userNum(Long userNum) {
    this.userNum = userNum;
    return this;
  }

   /**
   * Get userNum
   * @return userNum
  **/
  @Schema(description = "")
  public Long getUserNum() {
    return userNum;
  }

  public void setUserNum(Long userNum) {
    this.userNum = userNum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FSUserGroup fsUserGroup = (FSUserGroup) o;
    return Objects.equals(this.actionStatus, fsUserGroup.actionStatus) &&
        Objects.equals(this.cluster, fsUserGroup.cluster) &&
        Objects.equals(this.create, fsUserGroup.create) &&
        Objects.equals(this.description, fsUserGroup.description) &&
        Objects.equals(this.fsUsers, fsUserGroup.fsUsers) &&
        Objects.equals(this.groupId, fsUserGroup.groupId) &&
        Objects.equals(this.hdfsNum, fsUserGroup.hdfsNum) &&
        Objects.equals(this.id, fsUserGroup.id) &&
        Objects.equals(this.name, fsUserGroup.name) &&
        Objects.equals(this.policyFilterNum, fsUserGroup.policyFilterNum) &&
        Objects.equals(this.quotaNum, fsUserGroup.quotaNum) &&
        Objects.equals(this.shareNums, fsUserGroup.shareNums) &&
        Objects.equals(this.update, fsUserGroup.update) &&
        Objects.equals(this.userNum, fsUserGroup.userNum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, description, fsUsers, groupId, hdfsNum, id, name, policyFilterNum, quotaNum, shareNums, update, userNum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FSUserGroup {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fsUsers: ").append(toIndentedString(fsUsers)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    hdfsNum: ").append(toIndentedString(hdfsNum)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    policyFilterNum: ").append(toIndentedString(policyFilterNum)).append("\n");
    sb.append("    quotaNum: ").append(toIndentedString(quotaNum)).append("\n");
    sb.append("    shareNums: ").append(toIndentedString(shareNums)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    userNum: ").append(toIndentedString(userNum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
