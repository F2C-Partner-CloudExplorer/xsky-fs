/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ChangePasswordReqReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class ChangePasswordReqReq {
  @SerializedName("encrypted_original_password")
  private String encryptedOriginalPassword = null;

  @SerializedName("encrypted_password")
  private String encryptedPassword = null;

  @SerializedName("original_password")
  private String originalPassword = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("rsa_key_id")
  private String rsaKeyId = null;

  public ChangePasswordReqReq encryptedOriginalPassword(String encryptedOriginalPassword) {
    this.encryptedOriginalPassword = encryptedOriginalPassword;
    return this;
  }

   /**
   * encrypted original password for auth
   * @return encryptedOriginalPassword
  **/
  @Schema(description = "encrypted original password for auth")
  public String getEncryptedOriginalPassword() {
    return encryptedOriginalPassword;
  }

  public void setEncryptedOriginalPassword(String encryptedOriginalPassword) {
    this.encryptedOriginalPassword = encryptedOriginalPassword;
  }

  public ChangePasswordReqReq encryptedPassword(String encryptedPassword) {
    this.encryptedPassword = encryptedPassword;
    return this;
  }

   /**
   * encrypted password for auth
   * @return encryptedPassword
  **/
  @Schema(description = "encrypted password for auth")
  public String getEncryptedPassword() {
    return encryptedPassword;
  }

  public void setEncryptedPassword(String encryptedPassword) {
    this.encryptedPassword = encryptedPassword;
  }

  public ChangePasswordReqReq originalPassword(String originalPassword) {
    this.originalPassword = originalPassword;
    return this;
  }

   /**
   * original password of user
   * @return originalPassword
  **/
  @Schema(required = true, description = "original password of user")
  public String getOriginalPassword() {
    return originalPassword;
  }

  public void setOriginalPassword(String originalPassword) {
    this.originalPassword = originalPassword;
  }

  public ChangePasswordReqReq password(String password) {
    this.password = password;
    return this;
  }

   /**
   * new password of user
   * @return password
  **/
  @Schema(required = true, description = "new password of user")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public ChangePasswordReqReq rsaKeyId(String rsaKeyId) {
    this.rsaKeyId = rsaKeyId;
    return this;
  }

   /**
   * rsa key id
   * @return rsaKeyId
  **/
  @Schema(description = "rsa key id")
  public String getRsaKeyId() {
    return rsaKeyId;
  }

  public void setRsaKeyId(String rsaKeyId) {
    this.rsaKeyId = rsaKeyId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChangePasswordReqReq changePasswordReqReq = (ChangePasswordReqReq) o;
    return Objects.equals(this.encryptedOriginalPassword, changePasswordReqReq.encryptedOriginalPassword) &&
        Objects.equals(this.encryptedPassword, changePasswordReqReq.encryptedPassword) &&
        Objects.equals(this.originalPassword, changePasswordReqReq.originalPassword) &&
        Objects.equals(this.password, changePasswordReqReq.password) &&
        Objects.equals(this.rsaKeyId, changePasswordReqReq.rsaKeyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encryptedOriginalPassword, encryptedPassword, originalPassword, password, rsaKeyId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChangePasswordReqReq {\n");
    
    sb.append("    encryptedOriginalPassword: ").append(toIndentedString(encryptedOriginalPassword)).append("\n");
    sb.append("    encryptedPassword: ").append(toIndentedString(encryptedPassword)).append("\n");
    sb.append("    originalPassword: ").append(toIndentedString(originalPassword)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    rsaKeyId: ").append(toIndentedString(rsaKeyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
