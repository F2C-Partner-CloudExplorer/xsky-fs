/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.Cluster;
import xio.sds.client.model.ProductInfo;
import xio.sds.client.model.ProductLimits;
import xio.sds.client.model.ProductService;
/**
 * License is used to manage backend license
 */
@Schema(description = "License is used to manage backend license")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class License {
  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("cluster")
  private Cluster cluster = null;

  @SerializedName("cluster_type")
  private String clusterType = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("customer")
  private String customer = null;

  @SerializedName("expired_time")
  private OffsetDateTime expiredTime = null;

  @SerializedName("features")
  private List<String> features = null;

  @SerializedName("fs_id")
  private String fsId = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("limits")
  private ProductLimits limits = null;

  @SerializedName("minor_version")
  private String minorVersion = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("name_cn")
  private String nameCn = null;

  @SerializedName("product_info")
  private ProductInfo productInfo = null;

  @SerializedName("protocols")
  private List<String> protocols = null;

  @SerializedName("registered")
  private Boolean registered = null;

  @SerializedName("services")
  private List<ProductService> services = null;

  @SerializedName("signed_time")
  private OffsetDateTime signedTime = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("version")
  private String version = null;

  public License active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public License cluster(Cluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public Cluster getCluster() {
    return cluster;
  }

  public void setCluster(Cluster cluster) {
    this.cluster = cluster;
  }

  public License clusterType(String clusterType) {
    this.clusterType = clusterType;
    return this;
  }

   /**
   * Get clusterType
   * @return clusterType
  **/
  @Schema(description = "")
  public String getClusterType() {
    return clusterType;
  }

  public void setClusterType(String clusterType) {
    this.clusterType = clusterType;
  }

  public License create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public License customer(String customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @Schema(description = "")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public License expiredTime(OffsetDateTime expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * Get expiredTime
   * @return expiredTime
  **/
  @Schema(description = "")
  public OffsetDateTime getExpiredTime() {
    return expiredTime;
  }

  public void setExpiredTime(OffsetDateTime expiredTime) {
    this.expiredTime = expiredTime;
  }

  public License features(List<String> features) {
    this.features = features;
    return this;
  }

  public License addFeaturesItem(String featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<String>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @Schema(description = "")
  public List<String> getFeatures() {
    return features;
  }

  public void setFeatures(List<String> features) {
    this.features = features;
  }

  public License fsId(String fsId) {
    this.fsId = fsId;
    return this;
  }

   /**
   * Get fsId
   * @return fsId
  **/
  @Schema(description = "")
  public String getFsId() {
    return fsId;
  }

  public void setFsId(String fsId) {
    this.fsId = fsId;
  }

  public License id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public License limits(ProductLimits limits) {
    this.limits = limits;
    return this;
  }

   /**
   * Get limits
   * @return limits
  **/
  @Schema(description = "")
  public ProductLimits getLimits() {
    return limits;
  }

  public void setLimits(ProductLimits limits) {
    this.limits = limits;
  }

  public License minorVersion(String minorVersion) {
    this.minorVersion = minorVersion;
    return this;
  }

   /**
   * Get minorVersion
   * @return minorVersion
  **/
  @Schema(description = "")
  public String getMinorVersion() {
    return minorVersion;
  }

  public void setMinorVersion(String minorVersion) {
    this.minorVersion = minorVersion;
  }

  public License name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public License nameCn(String nameCn) {
    this.nameCn = nameCn;
    return this;
  }

   /**
   * Get nameCn
   * @return nameCn
  **/
  @Schema(description = "")
  public String getNameCn() {
    return nameCn;
  }

  public void setNameCn(String nameCn) {
    this.nameCn = nameCn;
  }

  public License productInfo(ProductInfo productInfo) {
    this.productInfo = productInfo;
    return this;
  }

   /**
   * Get productInfo
   * @return productInfo
  **/
  @Schema(description = "")
  public ProductInfo getProductInfo() {
    return productInfo;
  }

  public void setProductInfo(ProductInfo productInfo) {
    this.productInfo = productInfo;
  }

  public License protocols(List<String> protocols) {
    this.protocols = protocols;
    return this;
  }

  public License addProtocolsItem(String protocolsItem) {
    if (this.protocols == null) {
      this.protocols = new ArrayList<String>();
    }
    this.protocols.add(protocolsItem);
    return this;
  }

   /**
   * Get protocols
   * @return protocols
  **/
  @Schema(description = "")
  public List<String> getProtocols() {
    return protocols;
  }

  public void setProtocols(List<String> protocols) {
    this.protocols = protocols;
  }

  public License registered(Boolean registered) {
    this.registered = registered;
    return this;
  }

   /**
   * Get registered
   * @return registered
  **/
  @Schema(description = "")
  public Boolean isRegistered() {
    return registered;
  }

  public void setRegistered(Boolean registered) {
    this.registered = registered;
  }

  public License services(List<ProductService> services) {
    this.services = services;
    return this;
  }

  public License addServicesItem(ProductService servicesItem) {
    if (this.services == null) {
      this.services = new ArrayList<ProductService>();
    }
    this.services.add(servicesItem);
    return this;
  }

   /**
   * Get services
   * @return services
  **/
  @Schema(description = "")
  public List<ProductService> getServices() {
    return services;
  }

  public void setServices(List<ProductService> services) {
    this.services = services;
  }

  public License signedTime(OffsetDateTime signedTime) {
    this.signedTime = signedTime;
    return this;
  }

   /**
   * Get signedTime
   * @return signedTime
  **/
  @Schema(description = "")
  public OffsetDateTime getSignedTime() {
    return signedTime;
  }

  public void setSignedTime(OffsetDateTime signedTime) {
    this.signedTime = signedTime;
  }

  public License status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public License type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public License uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public License version(String version) {
    this.version = version;
    return this;
  }

   /**
   * load from license info
   * @return version
  **/
  @Schema(description = "load from license info")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    License license = (License) o;
    return Objects.equals(this.active, license.active) &&
        Objects.equals(this.cluster, license.cluster) &&
        Objects.equals(this.clusterType, license.clusterType) &&
        Objects.equals(this.create, license.create) &&
        Objects.equals(this.customer, license.customer) &&
        Objects.equals(this.expiredTime, license.expiredTime) &&
        Objects.equals(this.features, license.features) &&
        Objects.equals(this.fsId, license.fsId) &&
        Objects.equals(this.id, license.id) &&
        Objects.equals(this.limits, license.limits) &&
        Objects.equals(this.minorVersion, license.minorVersion) &&
        Objects.equals(this.name, license.name) &&
        Objects.equals(this.nameCn, license.nameCn) &&
        Objects.equals(this.productInfo, license.productInfo) &&
        Objects.equals(this.protocols, license.protocols) &&
        Objects.equals(this.registered, license.registered) &&
        Objects.equals(this.services, license.services) &&
        Objects.equals(this.signedTime, license.signedTime) &&
        Objects.equals(this.status, license.status) &&
        Objects.equals(this.type, license.type) &&
        Objects.equals(this.uuid, license.uuid) &&
        Objects.equals(this.version, license.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, cluster, clusterType, create, customer, expiredTime, features, fsId, id, limits, minorVersion, name, nameCn, productInfo, protocols, registered, services, signedTime, status, type, uuid, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class License {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    clusterType: ").append(toIndentedString(clusterType)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    fsId: ").append(toIndentedString(fsId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    limits: ").append(toIndentedString(limits)).append("\n");
    sb.append("    minorVersion: ").append(toIndentedString(minorVersion)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameCn: ").append(toIndentedString(nameCn)).append("\n");
    sb.append("    productInfo: ").append(toIndentedString(productInfo)).append("\n");
    sb.append("    protocols: ").append(toIndentedString(protocols)).append("\n");
    sb.append("    registered: ").append(toIndentedString(registered)).append("\n");
    sb.append("    services: ").append(toIndentedString(services)).append("\n");
    sb.append("    signedTime: ").append(toIndentedString(signedTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
