/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VolumeQosSpec is a collection of all qos field
 */
@Schema(description = "VolumeQosSpec is a collection of all qos field")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class VolumeQosSpec {
  @SerializedName("burst_total_bw")
  private Long burstTotalBw = null;

  @SerializedName("burst_total_iops")
  private Long burstTotalIops = null;

  @SerializedName("max_total_bw")
  private Long maxTotalBw = null;

  @SerializedName("max_total_iops")
  private Long maxTotalIops = null;

  public VolumeQosSpec burstTotalBw(Long burstTotalBw) {
    this.burstTotalBw = burstTotalBw;
    return this;
  }

   /**
   * Get burstTotalBw
   * @return burstTotalBw
  **/
  @Schema(description = "")
  public Long getBurstTotalBw() {
    return burstTotalBw;
  }

  public void setBurstTotalBw(Long burstTotalBw) {
    this.burstTotalBw = burstTotalBw;
  }

  public VolumeQosSpec burstTotalIops(Long burstTotalIops) {
    this.burstTotalIops = burstTotalIops;
    return this;
  }

   /**
   * Get burstTotalIops
   * @return burstTotalIops
  **/
  @Schema(description = "")
  public Long getBurstTotalIops() {
    return burstTotalIops;
  }

  public void setBurstTotalIops(Long burstTotalIops) {
    this.burstTotalIops = burstTotalIops;
  }

  public VolumeQosSpec maxTotalBw(Long maxTotalBw) {
    this.maxTotalBw = maxTotalBw;
    return this;
  }

   /**
   * Get maxTotalBw
   * @return maxTotalBw
  **/
  @Schema(description = "")
  public Long getMaxTotalBw() {
    return maxTotalBw;
  }

  public void setMaxTotalBw(Long maxTotalBw) {
    this.maxTotalBw = maxTotalBw;
  }

  public VolumeQosSpec maxTotalIops(Long maxTotalIops) {
    this.maxTotalIops = maxTotalIops;
    return this;
  }

   /**
   * Get maxTotalIops
   * @return maxTotalIops
  **/
  @Schema(description = "")
  public Long getMaxTotalIops() {
    return maxTotalIops;
  }

  public void setMaxTotalIops(Long maxTotalIops) {
    this.maxTotalIops = maxTotalIops;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeQosSpec volumeQosSpec = (VolumeQosSpec) o;
    return Objects.equals(this.burstTotalBw, volumeQosSpec.burstTotalBw) &&
        Objects.equals(this.burstTotalIops, volumeQosSpec.burstTotalIops) &&
        Objects.equals(this.maxTotalBw, volumeQosSpec.maxTotalBw) &&
        Objects.equals(this.maxTotalIops, volumeQosSpec.maxTotalIops);
  }

  @Override
  public int hashCode() {
    return Objects.hash(burstTotalBw, burstTotalIops, maxTotalBw, maxTotalIops);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeQosSpec {\n");
    
    sb.append("    burstTotalBw: ").append(toIndentedString(burstTotalBw)).append("\n");
    sb.append("    burstTotalIops: ").append(toIndentedString(burstTotalIops)).append("\n");
    sb.append("    maxTotalBw: ").append(toIndentedString(maxTotalBw)).append("\n");
    sb.append("    maxTotalIops: ").append(toIndentedString(maxTotalIops)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
