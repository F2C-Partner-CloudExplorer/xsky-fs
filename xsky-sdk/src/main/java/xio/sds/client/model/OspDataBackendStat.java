/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.OspDataBackendTargetStat;
/**
 * OspDataBackendStat
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspDataBackendStat {
  @SerializedName("targets")
  private List<OspDataBackendTargetStat> targets = null;

  @SerializedName("create")
  private String create = null;

  @SerializedName("object_num")
  private Long objectNum = null;

  @SerializedName("data_size_byte")
  private Long dataSizeByte = null;

  public OspDataBackendStat targets(List<OspDataBackendTargetStat> targets) {
    this.targets = targets;
    return this;
  }

  public OspDataBackendStat addTargetsItem(OspDataBackendTargetStat targetsItem) {
    if (this.targets == null) {
      this.targets = new ArrayList<OspDataBackendTargetStat>();
    }
    this.targets.add(targetsItem);
    return this;
  }

   /**
   * Get targets
   * @return targets
  **/
  @Schema(description = "")
  public List<OspDataBackendTargetStat> getTargets() {
    return targets;
  }

  public void setTargets(List<OspDataBackendTargetStat> targets) {
    this.targets = targets;
  }

  public OspDataBackendStat create(String create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public String getCreate() {
    return create;
  }

  public void setCreate(String create) {
    this.create = create;
  }

  public OspDataBackendStat objectNum(Long objectNum) {
    this.objectNum = objectNum;
    return this;
  }

   /**
   * Get objectNum
   * @return objectNum
  **/
  @Schema(description = "")
  public Long getObjectNum() {
    return objectNum;
  }

  public void setObjectNum(Long objectNum) {
    this.objectNum = objectNum;
  }

  public OspDataBackendStat dataSizeByte(Long dataSizeByte) {
    this.dataSizeByte = dataSizeByte;
    return this;
  }

   /**
   * Get dataSizeByte
   * @return dataSizeByte
  **/
  @Schema(description = "")
  public Long getDataSizeByte() {
    return dataSizeByte;
  }

  public void setDataSizeByte(Long dataSizeByte) {
    this.dataSizeByte = dataSizeByte;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspDataBackendStat ospDataBackendStat = (OspDataBackendStat) o;
    return Objects.equals(this.targets, ospDataBackendStat.targets) &&
        Objects.equals(this.create, ospDataBackendStat.create) &&
        Objects.equals(this.objectNum, ospDataBackendStat.objectNum) &&
        Objects.equals(this.dataSizeByte, ospDataBackendStat.dataSizeByte);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targets, create, objectNum, dataSizeByte);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspDataBackendStat {\n");
    
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    objectNum: ").append(toIndentedString(objectNum)).append("\n");
    sb.append("    dataSizeByte: ").append(toIndentedString(dataSizeByte)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
