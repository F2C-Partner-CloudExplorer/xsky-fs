/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * MetadataClusterStat defines the basic info of a metadata cluster
 */
@Schema(description = "MetadataClusterStat defines the basic info of a metadata cluster")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class MetadataClusterStat {
  @SerializedName("available_data_kbyte")
  private Long availableDataKbyte = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("delete_latency_us")
  private Double deleteLatencyUs = null;

  @SerializedName("delete_ops")
  private Double deleteOps = null;

  @SerializedName("gc_data_kbyte")
  private Long gcDataKbyte = null;

  @SerializedName("list_latency_us")
  private Double listLatencyUs = null;

  @SerializedName("list_ops")
  private Double listOps = null;

  @SerializedName("num_available_inodes")
  private Long numAvailableInodes = null;

  @SerializedName("num_gc_inodes")
  private Long numGcInodes = null;

  @SerializedName("num_inodes")
  private Long numInodes = null;

  @SerializedName("num_used_inodes")
  private Long numUsedInodes = null;

  @SerializedName("read_latency_us")
  private Double readLatencyUs = null;

  @SerializedName("read_ops")
  private Double readOps = null;

  @SerializedName("recorded_data_kbyte")
  private Long recordedDataKbyte = null;

  @SerializedName("recovery_done")
  private Long recoveryDone = null;

  @SerializedName("recovery_left_second")
  private Double recoveryLeftSecond = null;

  @SerializedName("recovery_ops")
  private Double recoveryOps = null;

  @SerializedName("recovery_total")
  private Long recoveryTotal = null;

  @SerializedName("total_data_kbyte")
  private Long totalDataKbyte = null;

  @SerializedName("total_kbyte")
  private Long totalKbyte = null;

  @SerializedName("trash_files")
  private Long trashFiles = null;

  @SerializedName("trash_kbyte")
  private Long trashKbyte = null;

  @SerializedName("used_data_kbyte")
  private Long usedDataKbyte = null;

  @SerializedName("used_kbyte")
  private Long usedKbyte = null;

  @SerializedName("write_latency_us")
  private Double writeLatencyUs = null;

  @SerializedName("write_ops")
  private Double writeOps = null;

  public MetadataClusterStat availableDataKbyte(Long availableDataKbyte) {
    this.availableDataKbyte = availableDataKbyte;
    return this;
  }

   /**
   * Get availableDataKbyte
   * @return availableDataKbyte
  **/
  @Schema(description = "")
  public Long getAvailableDataKbyte() {
    return availableDataKbyte;
  }

  public void setAvailableDataKbyte(Long availableDataKbyte) {
    this.availableDataKbyte = availableDataKbyte;
  }

  public MetadataClusterStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public MetadataClusterStat deleteLatencyUs(Double deleteLatencyUs) {
    this.deleteLatencyUs = deleteLatencyUs;
    return this;
  }

   /**
   * Get deleteLatencyUs
   * @return deleteLatencyUs
  **/
  @Schema(description = "")
  public Double getDeleteLatencyUs() {
    return deleteLatencyUs;
  }

  public void setDeleteLatencyUs(Double deleteLatencyUs) {
    this.deleteLatencyUs = deleteLatencyUs;
  }

  public MetadataClusterStat deleteOps(Double deleteOps) {
    this.deleteOps = deleteOps;
    return this;
  }

   /**
   * Get deleteOps
   * @return deleteOps
  **/
  @Schema(description = "")
  public Double getDeleteOps() {
    return deleteOps;
  }

  public void setDeleteOps(Double deleteOps) {
    this.deleteOps = deleteOps;
  }

  public MetadataClusterStat gcDataKbyte(Long gcDataKbyte) {
    this.gcDataKbyte = gcDataKbyte;
    return this;
  }

   /**
   * Get gcDataKbyte
   * @return gcDataKbyte
  **/
  @Schema(description = "")
  public Long getGcDataKbyte() {
    return gcDataKbyte;
  }

  public void setGcDataKbyte(Long gcDataKbyte) {
    this.gcDataKbyte = gcDataKbyte;
  }

  public MetadataClusterStat listLatencyUs(Double listLatencyUs) {
    this.listLatencyUs = listLatencyUs;
    return this;
  }

   /**
   * Get listLatencyUs
   * @return listLatencyUs
  **/
  @Schema(description = "")
  public Double getListLatencyUs() {
    return listLatencyUs;
  }

  public void setListLatencyUs(Double listLatencyUs) {
    this.listLatencyUs = listLatencyUs;
  }

  public MetadataClusterStat listOps(Double listOps) {
    this.listOps = listOps;
    return this;
  }

   /**
   * Get listOps
   * @return listOps
  **/
  @Schema(description = "")
  public Double getListOps() {
    return listOps;
  }

  public void setListOps(Double listOps) {
    this.listOps = listOps;
  }

  public MetadataClusterStat numAvailableInodes(Long numAvailableInodes) {
    this.numAvailableInodes = numAvailableInodes;
    return this;
  }

   /**
   * Get numAvailableInodes
   * @return numAvailableInodes
  **/
  @Schema(description = "")
  public Long getNumAvailableInodes() {
    return numAvailableInodes;
  }

  public void setNumAvailableInodes(Long numAvailableInodes) {
    this.numAvailableInodes = numAvailableInodes;
  }

  public MetadataClusterStat numGcInodes(Long numGcInodes) {
    this.numGcInodes = numGcInodes;
    return this;
  }

   /**
   * Get numGcInodes
   * @return numGcInodes
  **/
  @Schema(description = "")
  public Long getNumGcInodes() {
    return numGcInodes;
  }

  public void setNumGcInodes(Long numGcInodes) {
    this.numGcInodes = numGcInodes;
  }

  public MetadataClusterStat numInodes(Long numInodes) {
    this.numInodes = numInodes;
    return this;
  }

   /**
   * Get numInodes
   * @return numInodes
  **/
  @Schema(description = "")
  public Long getNumInodes() {
    return numInodes;
  }

  public void setNumInodes(Long numInodes) {
    this.numInodes = numInodes;
  }

  public MetadataClusterStat numUsedInodes(Long numUsedInodes) {
    this.numUsedInodes = numUsedInodes;
    return this;
  }

   /**
   * Get numUsedInodes
   * @return numUsedInodes
  **/
  @Schema(description = "")
  public Long getNumUsedInodes() {
    return numUsedInodes;
  }

  public void setNumUsedInodes(Long numUsedInodes) {
    this.numUsedInodes = numUsedInodes;
  }

  public MetadataClusterStat readLatencyUs(Double readLatencyUs) {
    this.readLatencyUs = readLatencyUs;
    return this;
  }

   /**
   * Get readLatencyUs
   * @return readLatencyUs
  **/
  @Schema(description = "")
  public Double getReadLatencyUs() {
    return readLatencyUs;
  }

  public void setReadLatencyUs(Double readLatencyUs) {
    this.readLatencyUs = readLatencyUs;
  }

  public MetadataClusterStat readOps(Double readOps) {
    this.readOps = readOps;
    return this;
  }

   /**
   * primary metadata service stat
   * @return readOps
  **/
  @Schema(description = "primary metadata service stat")
  public Double getReadOps() {
    return readOps;
  }

  public void setReadOps(Double readOps) {
    this.readOps = readOps;
  }

  public MetadataClusterStat recordedDataKbyte(Long recordedDataKbyte) {
    this.recordedDataKbyte = recordedDataKbyte;
    return this;
  }

   /**
   * data kbyte used by user, different from UsedDataKbyte
   * @return recordedDataKbyte
  **/
  @Schema(description = "data kbyte used by user, different from UsedDataKbyte")
  public Long getRecordedDataKbyte() {
    return recordedDataKbyte;
  }

  public void setRecordedDataKbyte(Long recordedDataKbyte) {
    this.recordedDataKbyte = recordedDataKbyte;
  }

  public MetadataClusterStat recoveryDone(Long recoveryDone) {
    this.recoveryDone = recoveryDone;
    return this;
  }

   /**
   * Get recoveryDone
   * @return recoveryDone
  **/
  @Schema(description = "")
  public Long getRecoveryDone() {
    return recoveryDone;
  }

  public void setRecoveryDone(Long recoveryDone) {
    this.recoveryDone = recoveryDone;
  }

  public MetadataClusterStat recoveryLeftSecond(Double recoveryLeftSecond) {
    this.recoveryLeftSecond = recoveryLeftSecond;
    return this;
  }

   /**
   * Get recoveryLeftSecond
   * @return recoveryLeftSecond
  **/
  @Schema(description = "")
  public Double getRecoveryLeftSecond() {
    return recoveryLeftSecond;
  }

  public void setRecoveryLeftSecond(Double recoveryLeftSecond) {
    this.recoveryLeftSecond = recoveryLeftSecond;
  }

  public MetadataClusterStat recoveryOps(Double recoveryOps) {
    this.recoveryOps = recoveryOps;
    return this;
  }

   /**
   * Get recoveryOps
   * @return recoveryOps
  **/
  @Schema(description = "")
  public Double getRecoveryOps() {
    return recoveryOps;
  }

  public void setRecoveryOps(Double recoveryOps) {
    this.recoveryOps = recoveryOps;
  }

  public MetadataClusterStat recoveryTotal(Long recoveryTotal) {
    this.recoveryTotal = recoveryTotal;
    return this;
  }

   /**
   * Get recoveryTotal
   * @return recoveryTotal
  **/
  @Schema(description = "")
  public Long getRecoveryTotal() {
    return recoveryTotal;
  }

  public void setRecoveryTotal(Long recoveryTotal) {
    this.recoveryTotal = recoveryTotal;
  }

  public MetadataClusterStat totalDataKbyte(Long totalDataKbyte) {
    this.totalDataKbyte = totalDataKbyte;
    return this;
  }

   /**
   * Get totalDataKbyte
   * @return totalDataKbyte
  **/
  @Schema(description = "")
  public Long getTotalDataKbyte() {
    return totalDataKbyte;
  }

  public void setTotalDataKbyte(Long totalDataKbyte) {
    this.totalDataKbyte = totalDataKbyte;
  }

  public MetadataClusterStat totalKbyte(Long totalKbyte) {
    this.totalKbyte = totalKbyte;
    return this;
  }

   /**
   * Get totalKbyte
   * @return totalKbyte
  **/
  @Schema(description = "")
  public Long getTotalKbyte() {
    return totalKbyte;
  }

  public void setTotalKbyte(Long totalKbyte) {
    this.totalKbyte = totalKbyte;
  }

  public MetadataClusterStat trashFiles(Long trashFiles) {
    this.trashFiles = trashFiles;
    return this;
  }

   /**
   * Get trashFiles
   * @return trashFiles
  **/
  @Schema(description = "")
  public Long getTrashFiles() {
    return trashFiles;
  }

  public void setTrashFiles(Long trashFiles) {
    this.trashFiles = trashFiles;
  }

  public MetadataClusterStat trashKbyte(Long trashKbyte) {
    this.trashKbyte = trashKbyte;
    return this;
  }

   /**
   * Get trashKbyte
   * @return trashKbyte
  **/
  @Schema(description = "")
  public Long getTrashKbyte() {
    return trashKbyte;
  }

  public void setTrashKbyte(Long trashKbyte) {
    this.trashKbyte = trashKbyte;
  }

  public MetadataClusterStat usedDataKbyte(Long usedDataKbyte) {
    this.usedDataKbyte = usedDataKbyte;
    return this;
  }

   /**
   * Get usedDataKbyte
   * @return usedDataKbyte
  **/
  @Schema(description = "")
  public Long getUsedDataKbyte() {
    return usedDataKbyte;
  }

  public void setUsedDataKbyte(Long usedDataKbyte) {
    this.usedDataKbyte = usedDataKbyte;
  }

  public MetadataClusterStat usedKbyte(Long usedKbyte) {
    this.usedKbyte = usedKbyte;
    return this;
  }

   /**
   * Get usedKbyte
   * @return usedKbyte
  **/
  @Schema(description = "")
  public Long getUsedKbyte() {
    return usedKbyte;
  }

  public void setUsedKbyte(Long usedKbyte) {
    this.usedKbyte = usedKbyte;
  }

  public MetadataClusterStat writeLatencyUs(Double writeLatencyUs) {
    this.writeLatencyUs = writeLatencyUs;
    return this;
  }

   /**
   * Get writeLatencyUs
   * @return writeLatencyUs
  **/
  @Schema(description = "")
  public Double getWriteLatencyUs() {
    return writeLatencyUs;
  }

  public void setWriteLatencyUs(Double writeLatencyUs) {
    this.writeLatencyUs = writeLatencyUs;
  }

  public MetadataClusterStat writeOps(Double writeOps) {
    this.writeOps = writeOps;
    return this;
  }

   /**
   * Get writeOps
   * @return writeOps
  **/
  @Schema(description = "")
  public Double getWriteOps() {
    return writeOps;
  }

  public void setWriteOps(Double writeOps) {
    this.writeOps = writeOps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetadataClusterStat metadataClusterStat = (MetadataClusterStat) o;
    return Objects.equals(this.availableDataKbyte, metadataClusterStat.availableDataKbyte) &&
        Objects.equals(this.create, metadataClusterStat.create) &&
        Objects.equals(this.deleteLatencyUs, metadataClusterStat.deleteLatencyUs) &&
        Objects.equals(this.deleteOps, metadataClusterStat.deleteOps) &&
        Objects.equals(this.gcDataKbyte, metadataClusterStat.gcDataKbyte) &&
        Objects.equals(this.listLatencyUs, metadataClusterStat.listLatencyUs) &&
        Objects.equals(this.listOps, metadataClusterStat.listOps) &&
        Objects.equals(this.numAvailableInodes, metadataClusterStat.numAvailableInodes) &&
        Objects.equals(this.numGcInodes, metadataClusterStat.numGcInodes) &&
        Objects.equals(this.numInodes, metadataClusterStat.numInodes) &&
        Objects.equals(this.numUsedInodes, metadataClusterStat.numUsedInodes) &&
        Objects.equals(this.readLatencyUs, metadataClusterStat.readLatencyUs) &&
        Objects.equals(this.readOps, metadataClusterStat.readOps) &&
        Objects.equals(this.recordedDataKbyte, metadataClusterStat.recordedDataKbyte) &&
        Objects.equals(this.recoveryDone, metadataClusterStat.recoveryDone) &&
        Objects.equals(this.recoveryLeftSecond, metadataClusterStat.recoveryLeftSecond) &&
        Objects.equals(this.recoveryOps, metadataClusterStat.recoveryOps) &&
        Objects.equals(this.recoveryTotal, metadataClusterStat.recoveryTotal) &&
        Objects.equals(this.totalDataKbyte, metadataClusterStat.totalDataKbyte) &&
        Objects.equals(this.totalKbyte, metadataClusterStat.totalKbyte) &&
        Objects.equals(this.trashFiles, metadataClusterStat.trashFiles) &&
        Objects.equals(this.trashKbyte, metadataClusterStat.trashKbyte) &&
        Objects.equals(this.usedDataKbyte, metadataClusterStat.usedDataKbyte) &&
        Objects.equals(this.usedKbyte, metadataClusterStat.usedKbyte) &&
        Objects.equals(this.writeLatencyUs, metadataClusterStat.writeLatencyUs) &&
        Objects.equals(this.writeOps, metadataClusterStat.writeOps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableDataKbyte, create, deleteLatencyUs, deleteOps, gcDataKbyte, listLatencyUs, listOps, numAvailableInodes, numGcInodes, numInodes, numUsedInodes, readLatencyUs, readOps, recordedDataKbyte, recoveryDone, recoveryLeftSecond, recoveryOps, recoveryTotal, totalDataKbyte, totalKbyte, trashFiles, trashKbyte, usedDataKbyte, usedKbyte, writeLatencyUs, writeOps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetadataClusterStat {\n");
    
    sb.append("    availableDataKbyte: ").append(toIndentedString(availableDataKbyte)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    deleteLatencyUs: ").append(toIndentedString(deleteLatencyUs)).append("\n");
    sb.append("    deleteOps: ").append(toIndentedString(deleteOps)).append("\n");
    sb.append("    gcDataKbyte: ").append(toIndentedString(gcDataKbyte)).append("\n");
    sb.append("    listLatencyUs: ").append(toIndentedString(listLatencyUs)).append("\n");
    sb.append("    listOps: ").append(toIndentedString(listOps)).append("\n");
    sb.append("    numAvailableInodes: ").append(toIndentedString(numAvailableInodes)).append("\n");
    sb.append("    numGcInodes: ").append(toIndentedString(numGcInodes)).append("\n");
    sb.append("    numInodes: ").append(toIndentedString(numInodes)).append("\n");
    sb.append("    numUsedInodes: ").append(toIndentedString(numUsedInodes)).append("\n");
    sb.append("    readLatencyUs: ").append(toIndentedString(readLatencyUs)).append("\n");
    sb.append("    readOps: ").append(toIndentedString(readOps)).append("\n");
    sb.append("    recordedDataKbyte: ").append(toIndentedString(recordedDataKbyte)).append("\n");
    sb.append("    recoveryDone: ").append(toIndentedString(recoveryDone)).append("\n");
    sb.append("    recoveryLeftSecond: ").append(toIndentedString(recoveryLeftSecond)).append("\n");
    sb.append("    recoveryOps: ").append(toIndentedString(recoveryOps)).append("\n");
    sb.append("    recoveryTotal: ").append(toIndentedString(recoveryTotal)).append("\n");
    sb.append("    totalDataKbyte: ").append(toIndentedString(totalDataKbyte)).append("\n");
    sb.append("    totalKbyte: ").append(toIndentedString(totalKbyte)).append("\n");
    sb.append("    trashFiles: ").append(toIndentedString(trashFiles)).append("\n");
    sb.append("    trashKbyte: ").append(toIndentedString(trashKbyte)).append("\n");
    sb.append("    usedDataKbyte: ").append(toIndentedString(usedDataKbyte)).append("\n");
    sb.append("    usedKbyte: ").append(toIndentedString(usedKbyte)).append("\n");
    sb.append("    writeLatencyUs: ").append(toIndentedString(writeLatencyUs)).append("\n");
    sb.append("    writeOps: ").append(toIndentedString(writeOps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
