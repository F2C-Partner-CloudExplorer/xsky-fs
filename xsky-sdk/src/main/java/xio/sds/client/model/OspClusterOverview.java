/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OspClusterOverview
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspClusterOverview {
  @SerializedName("buckets")
  private Long buckets = null;

  @SerializedName("buckets_in_recycle")
  private Long bucketsInRecycle = null;

  @SerializedName("building_data_backends")
  private Long buildingDataBackends = null;

  @SerializedName("building_error_data_backends")
  private Long buildingErrorDataBackends = null;

  @SerializedName("building_error_zones")
  private Long buildingErrorZones = null;

  @SerializedName("building_s3_lb_groups")
  private Long buildingS3LbGroups = null;

  @SerializedName("building_zones")
  private Long buildingZones = null;

  @SerializedName("data_backends")
  private Long dataBackends = null;

  @SerializedName("data_bytes")
  private Long dataBytes = null;

  @SerializedName("deleting_buckets")
  private Long deletingBuckets = null;

  @SerializedName("deleting_data_backends")
  private Long deletingDataBackends = null;

  @SerializedName("deleting_error_buckets")
  private Long deletingErrorBuckets = null;

  @SerializedName("deleting_error_data_backends")
  private Long deletingErrorDataBackends = null;

  @SerializedName("deleting_error_storage_policies")
  private Long deletingErrorStoragePolicies = null;

  @SerializedName("deleting_error_users")
  private Long deletingErrorUsers = null;

  @SerializedName("deleting_error_zones")
  private Long deletingErrorZones = null;

  @SerializedName("deleting_s3_lb_groups")
  private Long deletingS3LbGroups = null;

  @SerializedName("deleting_storage_policies")
  private Long deletingStoragePolicies = null;

  @SerializedName("deleting_users")
  private Long deletingUsers = null;

  @SerializedName("deleting_zones")
  private Long deletingZones = null;

  @SerializedName("error_data_backends")
  private Long errorDataBackends = null;

  @SerializedName("error_s3_lb_groups")
  private Long errorS3LbGroups = null;

  @SerializedName("error_zones")
  private Long errorZones = null;

  @SerializedName("normal_hosts")
  private Long normalHosts = null;

  @SerializedName("object_num")
  private Long objectNum = null;

  @SerializedName("offline_hosts")
  private Long offlineHosts = null;

  @SerializedName("operation_failed_hosts")
  private Long operationFailedHosts = null;

  @SerializedName("s3_lb_groups")
  private Long s3LbGroups = null;

  @SerializedName("storage_policies")
  private Long storagePolicies = null;

  @SerializedName("system_metadata_cluster_status")
  private String systemMetadataClusterStatus = null;

  @SerializedName("users")
  private Long users = null;

  @SerializedName("warning_hosts")
  private Long warningHosts = null;

  @SerializedName("warning_zones")
  private Long warningZones = null;

  @SerializedName("zones")
  private Long zones = null;

  public OspClusterOverview buckets(Long buckets) {
    this.buckets = buckets;
    return this;
  }

   /**
   * Get buckets
   * @return buckets
  **/
  @Schema(description = "")
  public Long getBuckets() {
    return buckets;
  }

  public void setBuckets(Long buckets) {
    this.buckets = buckets;
  }

  public OspClusterOverview bucketsInRecycle(Long bucketsInRecycle) {
    this.bucketsInRecycle = bucketsInRecycle;
    return this;
  }

   /**
   * Get bucketsInRecycle
   * @return bucketsInRecycle
  **/
  @Schema(description = "")
  public Long getBucketsInRecycle() {
    return bucketsInRecycle;
  }

  public void setBucketsInRecycle(Long bucketsInRecycle) {
    this.bucketsInRecycle = bucketsInRecycle;
  }

  public OspClusterOverview buildingDataBackends(Long buildingDataBackends) {
    this.buildingDataBackends = buildingDataBackends;
    return this;
  }

   /**
   * Get buildingDataBackends
   * @return buildingDataBackends
  **/
  @Schema(description = "")
  public Long getBuildingDataBackends() {
    return buildingDataBackends;
  }

  public void setBuildingDataBackends(Long buildingDataBackends) {
    this.buildingDataBackends = buildingDataBackends;
  }

  public OspClusterOverview buildingErrorDataBackends(Long buildingErrorDataBackends) {
    this.buildingErrorDataBackends = buildingErrorDataBackends;
    return this;
  }

   /**
   * Get buildingErrorDataBackends
   * @return buildingErrorDataBackends
  **/
  @Schema(description = "")
  public Long getBuildingErrorDataBackends() {
    return buildingErrorDataBackends;
  }

  public void setBuildingErrorDataBackends(Long buildingErrorDataBackends) {
    this.buildingErrorDataBackends = buildingErrorDataBackends;
  }

  public OspClusterOverview buildingErrorZones(Long buildingErrorZones) {
    this.buildingErrorZones = buildingErrorZones;
    return this;
  }

   /**
   * Get buildingErrorZones
   * @return buildingErrorZones
  **/
  @Schema(description = "")
  public Long getBuildingErrorZones() {
    return buildingErrorZones;
  }

  public void setBuildingErrorZones(Long buildingErrorZones) {
    this.buildingErrorZones = buildingErrorZones;
  }

  public OspClusterOverview buildingS3LbGroups(Long buildingS3LbGroups) {
    this.buildingS3LbGroups = buildingS3LbGroups;
    return this;
  }

   /**
   * Get buildingS3LbGroups
   * @return buildingS3LbGroups
  **/
  @Schema(description = "")
  public Long getBuildingS3LbGroups() {
    return buildingS3LbGroups;
  }

  public void setBuildingS3LbGroups(Long buildingS3LbGroups) {
    this.buildingS3LbGroups = buildingS3LbGroups;
  }

  public OspClusterOverview buildingZones(Long buildingZones) {
    this.buildingZones = buildingZones;
    return this;
  }

   /**
   * Get buildingZones
   * @return buildingZones
  **/
  @Schema(description = "")
  public Long getBuildingZones() {
    return buildingZones;
  }

  public void setBuildingZones(Long buildingZones) {
    this.buildingZones = buildingZones;
  }

  public OspClusterOverview dataBackends(Long dataBackends) {
    this.dataBackends = dataBackends;
    return this;
  }

   /**
   * Get dataBackends
   * @return dataBackends
  **/
  @Schema(description = "")
  public Long getDataBackends() {
    return dataBackends;
  }

  public void setDataBackends(Long dataBackends) {
    this.dataBackends = dataBackends;
  }

  public OspClusterOverview dataBytes(Long dataBytes) {
    this.dataBytes = dataBytes;
    return this;
  }

   /**
   * Get dataBytes
   * @return dataBytes
  **/
  @Schema(description = "")
  public Long getDataBytes() {
    return dataBytes;
  }

  public void setDataBytes(Long dataBytes) {
    this.dataBytes = dataBytes;
  }

  public OspClusterOverview deletingBuckets(Long deletingBuckets) {
    this.deletingBuckets = deletingBuckets;
    return this;
  }

   /**
   * Get deletingBuckets
   * @return deletingBuckets
  **/
  @Schema(description = "")
  public Long getDeletingBuckets() {
    return deletingBuckets;
  }

  public void setDeletingBuckets(Long deletingBuckets) {
    this.deletingBuckets = deletingBuckets;
  }

  public OspClusterOverview deletingDataBackends(Long deletingDataBackends) {
    this.deletingDataBackends = deletingDataBackends;
    return this;
  }

   /**
   * Get deletingDataBackends
   * @return deletingDataBackends
  **/
  @Schema(description = "")
  public Long getDeletingDataBackends() {
    return deletingDataBackends;
  }

  public void setDeletingDataBackends(Long deletingDataBackends) {
    this.deletingDataBackends = deletingDataBackends;
  }

  public OspClusterOverview deletingErrorBuckets(Long deletingErrorBuckets) {
    this.deletingErrorBuckets = deletingErrorBuckets;
    return this;
  }

   /**
   * Get deletingErrorBuckets
   * @return deletingErrorBuckets
  **/
  @Schema(description = "")
  public Long getDeletingErrorBuckets() {
    return deletingErrorBuckets;
  }

  public void setDeletingErrorBuckets(Long deletingErrorBuckets) {
    this.deletingErrorBuckets = deletingErrorBuckets;
  }

  public OspClusterOverview deletingErrorDataBackends(Long deletingErrorDataBackends) {
    this.deletingErrorDataBackends = deletingErrorDataBackends;
    return this;
  }

   /**
   * Get deletingErrorDataBackends
   * @return deletingErrorDataBackends
  **/
  @Schema(description = "")
  public Long getDeletingErrorDataBackends() {
    return deletingErrorDataBackends;
  }

  public void setDeletingErrorDataBackends(Long deletingErrorDataBackends) {
    this.deletingErrorDataBackends = deletingErrorDataBackends;
  }

  public OspClusterOverview deletingErrorStoragePolicies(Long deletingErrorStoragePolicies) {
    this.deletingErrorStoragePolicies = deletingErrorStoragePolicies;
    return this;
  }

   /**
   * Get deletingErrorStoragePolicies
   * @return deletingErrorStoragePolicies
  **/
  @Schema(description = "")
  public Long getDeletingErrorStoragePolicies() {
    return deletingErrorStoragePolicies;
  }

  public void setDeletingErrorStoragePolicies(Long deletingErrorStoragePolicies) {
    this.deletingErrorStoragePolicies = deletingErrorStoragePolicies;
  }

  public OspClusterOverview deletingErrorUsers(Long deletingErrorUsers) {
    this.deletingErrorUsers = deletingErrorUsers;
    return this;
  }

   /**
   * Get deletingErrorUsers
   * @return deletingErrorUsers
  **/
  @Schema(description = "")
  public Long getDeletingErrorUsers() {
    return deletingErrorUsers;
  }

  public void setDeletingErrorUsers(Long deletingErrorUsers) {
    this.deletingErrorUsers = deletingErrorUsers;
  }

  public OspClusterOverview deletingErrorZones(Long deletingErrorZones) {
    this.deletingErrorZones = deletingErrorZones;
    return this;
  }

   /**
   * Get deletingErrorZones
   * @return deletingErrorZones
  **/
  @Schema(description = "")
  public Long getDeletingErrorZones() {
    return deletingErrorZones;
  }

  public void setDeletingErrorZones(Long deletingErrorZones) {
    this.deletingErrorZones = deletingErrorZones;
  }

  public OspClusterOverview deletingS3LbGroups(Long deletingS3LbGroups) {
    this.deletingS3LbGroups = deletingS3LbGroups;
    return this;
  }

   /**
   * Get deletingS3LbGroups
   * @return deletingS3LbGroups
  **/
  @Schema(description = "")
  public Long getDeletingS3LbGroups() {
    return deletingS3LbGroups;
  }

  public void setDeletingS3LbGroups(Long deletingS3LbGroups) {
    this.deletingS3LbGroups = deletingS3LbGroups;
  }

  public OspClusterOverview deletingStoragePolicies(Long deletingStoragePolicies) {
    this.deletingStoragePolicies = deletingStoragePolicies;
    return this;
  }

   /**
   * Get deletingStoragePolicies
   * @return deletingStoragePolicies
  **/
  @Schema(description = "")
  public Long getDeletingStoragePolicies() {
    return deletingStoragePolicies;
  }

  public void setDeletingStoragePolicies(Long deletingStoragePolicies) {
    this.deletingStoragePolicies = deletingStoragePolicies;
  }

  public OspClusterOverview deletingUsers(Long deletingUsers) {
    this.deletingUsers = deletingUsers;
    return this;
  }

   /**
   * Get deletingUsers
   * @return deletingUsers
  **/
  @Schema(description = "")
  public Long getDeletingUsers() {
    return deletingUsers;
  }

  public void setDeletingUsers(Long deletingUsers) {
    this.deletingUsers = deletingUsers;
  }

  public OspClusterOverview deletingZones(Long deletingZones) {
    this.deletingZones = deletingZones;
    return this;
  }

   /**
   * Get deletingZones
   * @return deletingZones
  **/
  @Schema(description = "")
  public Long getDeletingZones() {
    return deletingZones;
  }

  public void setDeletingZones(Long deletingZones) {
    this.deletingZones = deletingZones;
  }

  public OspClusterOverview errorDataBackends(Long errorDataBackends) {
    this.errorDataBackends = errorDataBackends;
    return this;
  }

   /**
   * Get errorDataBackends
   * @return errorDataBackends
  **/
  @Schema(description = "")
  public Long getErrorDataBackends() {
    return errorDataBackends;
  }

  public void setErrorDataBackends(Long errorDataBackends) {
    this.errorDataBackends = errorDataBackends;
  }

  public OspClusterOverview errorS3LbGroups(Long errorS3LbGroups) {
    this.errorS3LbGroups = errorS3LbGroups;
    return this;
  }

   /**
   * Get errorS3LbGroups
   * @return errorS3LbGroups
  **/
  @Schema(description = "")
  public Long getErrorS3LbGroups() {
    return errorS3LbGroups;
  }

  public void setErrorS3LbGroups(Long errorS3LbGroups) {
    this.errorS3LbGroups = errorS3LbGroups;
  }

  public OspClusterOverview errorZones(Long errorZones) {
    this.errorZones = errorZones;
    return this;
  }

   /**
   * Get errorZones
   * @return errorZones
  **/
  @Schema(description = "")
  public Long getErrorZones() {
    return errorZones;
  }

  public void setErrorZones(Long errorZones) {
    this.errorZones = errorZones;
  }

  public OspClusterOverview normalHosts(Long normalHosts) {
    this.normalHosts = normalHosts;
    return this;
  }

   /**
   * Get normalHosts
   * @return normalHosts
  **/
  @Schema(description = "")
  public Long getNormalHosts() {
    return normalHosts;
  }

  public void setNormalHosts(Long normalHosts) {
    this.normalHosts = normalHosts;
  }

  public OspClusterOverview objectNum(Long objectNum) {
    this.objectNum = objectNum;
    return this;
  }

   /**
   * Get objectNum
   * @return objectNum
  **/
  @Schema(description = "")
  public Long getObjectNum() {
    return objectNum;
  }

  public void setObjectNum(Long objectNum) {
    this.objectNum = objectNum;
  }

  public OspClusterOverview offlineHosts(Long offlineHosts) {
    this.offlineHosts = offlineHosts;
    return this;
  }

   /**
   * Get offlineHosts
   * @return offlineHosts
  **/
  @Schema(description = "")
  public Long getOfflineHosts() {
    return offlineHosts;
  }

  public void setOfflineHosts(Long offlineHosts) {
    this.offlineHosts = offlineHosts;
  }

  public OspClusterOverview operationFailedHosts(Long operationFailedHosts) {
    this.operationFailedHosts = operationFailedHosts;
    return this;
  }

   /**
   * Get operationFailedHosts
   * @return operationFailedHosts
  **/
  @Schema(description = "")
  public Long getOperationFailedHosts() {
    return operationFailedHosts;
  }

  public void setOperationFailedHosts(Long operationFailedHosts) {
    this.operationFailedHosts = operationFailedHosts;
  }

  public OspClusterOverview s3LbGroups(Long s3LbGroups) {
    this.s3LbGroups = s3LbGroups;
    return this;
  }

   /**
   * Get s3LbGroups
   * @return s3LbGroups
  **/
  @Schema(description = "")
  public Long getS3LbGroups() {
    return s3LbGroups;
  }

  public void setS3LbGroups(Long s3LbGroups) {
    this.s3LbGroups = s3LbGroups;
  }

  public OspClusterOverview storagePolicies(Long storagePolicies) {
    this.storagePolicies = storagePolicies;
    return this;
  }

   /**
   * Get storagePolicies
   * @return storagePolicies
  **/
  @Schema(description = "")
  public Long getStoragePolicies() {
    return storagePolicies;
  }

  public void setStoragePolicies(Long storagePolicies) {
    this.storagePolicies = storagePolicies;
  }

  public OspClusterOverview systemMetadataClusterStatus(String systemMetadataClusterStatus) {
    this.systemMetadataClusterStatus = systemMetadataClusterStatus;
    return this;
  }

   /**
   * Get systemMetadataClusterStatus
   * @return systemMetadataClusterStatus
  **/
  @Schema(description = "")
  public String getSystemMetadataClusterStatus() {
    return systemMetadataClusterStatus;
  }

  public void setSystemMetadataClusterStatus(String systemMetadataClusterStatus) {
    this.systemMetadataClusterStatus = systemMetadataClusterStatus;
  }

  public OspClusterOverview users(Long users) {
    this.users = users;
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public Long getUsers() {
    return users;
  }

  public void setUsers(Long users) {
    this.users = users;
  }

  public OspClusterOverview warningHosts(Long warningHosts) {
    this.warningHosts = warningHosts;
    return this;
  }

   /**
   * Get warningHosts
   * @return warningHosts
  **/
  @Schema(description = "")
  public Long getWarningHosts() {
    return warningHosts;
  }

  public void setWarningHosts(Long warningHosts) {
    this.warningHosts = warningHosts;
  }

  public OspClusterOverview warningZones(Long warningZones) {
    this.warningZones = warningZones;
    return this;
  }

   /**
   * Get warningZones
   * @return warningZones
  **/
  @Schema(description = "")
  public Long getWarningZones() {
    return warningZones;
  }

  public void setWarningZones(Long warningZones) {
    this.warningZones = warningZones;
  }

  public OspClusterOverview zones(Long zones) {
    this.zones = zones;
    return this;
  }

   /**
   * Get zones
   * @return zones
  **/
  @Schema(description = "")
  public Long getZones() {
    return zones;
  }

  public void setZones(Long zones) {
    this.zones = zones;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspClusterOverview ospClusterOverview = (OspClusterOverview) o;
    return Objects.equals(this.buckets, ospClusterOverview.buckets) &&
        Objects.equals(this.bucketsInRecycle, ospClusterOverview.bucketsInRecycle) &&
        Objects.equals(this.buildingDataBackends, ospClusterOverview.buildingDataBackends) &&
        Objects.equals(this.buildingErrorDataBackends, ospClusterOverview.buildingErrorDataBackends) &&
        Objects.equals(this.buildingErrorZones, ospClusterOverview.buildingErrorZones) &&
        Objects.equals(this.buildingS3LbGroups, ospClusterOverview.buildingS3LbGroups) &&
        Objects.equals(this.buildingZones, ospClusterOverview.buildingZones) &&
        Objects.equals(this.dataBackends, ospClusterOverview.dataBackends) &&
        Objects.equals(this.dataBytes, ospClusterOverview.dataBytes) &&
        Objects.equals(this.deletingBuckets, ospClusterOverview.deletingBuckets) &&
        Objects.equals(this.deletingDataBackends, ospClusterOverview.deletingDataBackends) &&
        Objects.equals(this.deletingErrorBuckets, ospClusterOverview.deletingErrorBuckets) &&
        Objects.equals(this.deletingErrorDataBackends, ospClusterOverview.deletingErrorDataBackends) &&
        Objects.equals(this.deletingErrorStoragePolicies, ospClusterOverview.deletingErrorStoragePolicies) &&
        Objects.equals(this.deletingErrorUsers, ospClusterOverview.deletingErrorUsers) &&
        Objects.equals(this.deletingErrorZones, ospClusterOverview.deletingErrorZones) &&
        Objects.equals(this.deletingS3LbGroups, ospClusterOverview.deletingS3LbGroups) &&
        Objects.equals(this.deletingStoragePolicies, ospClusterOverview.deletingStoragePolicies) &&
        Objects.equals(this.deletingUsers, ospClusterOverview.deletingUsers) &&
        Objects.equals(this.deletingZones, ospClusterOverview.deletingZones) &&
        Objects.equals(this.errorDataBackends, ospClusterOverview.errorDataBackends) &&
        Objects.equals(this.errorS3LbGroups, ospClusterOverview.errorS3LbGroups) &&
        Objects.equals(this.errorZones, ospClusterOverview.errorZones) &&
        Objects.equals(this.normalHosts, ospClusterOverview.normalHosts) &&
        Objects.equals(this.objectNum, ospClusterOverview.objectNum) &&
        Objects.equals(this.offlineHosts, ospClusterOverview.offlineHosts) &&
        Objects.equals(this.operationFailedHosts, ospClusterOverview.operationFailedHosts) &&
        Objects.equals(this.s3LbGroups, ospClusterOverview.s3LbGroups) &&
        Objects.equals(this.storagePolicies, ospClusterOverview.storagePolicies) &&
        Objects.equals(this.systemMetadataClusterStatus, ospClusterOverview.systemMetadataClusterStatus) &&
        Objects.equals(this.users, ospClusterOverview.users) &&
        Objects.equals(this.warningHosts, ospClusterOverview.warningHosts) &&
        Objects.equals(this.warningZones, ospClusterOverview.warningZones) &&
        Objects.equals(this.zones, ospClusterOverview.zones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(buckets, bucketsInRecycle, buildingDataBackends, buildingErrorDataBackends, buildingErrorZones, buildingS3LbGroups, buildingZones, dataBackends, dataBytes, deletingBuckets, deletingDataBackends, deletingErrorBuckets, deletingErrorDataBackends, deletingErrorStoragePolicies, deletingErrorUsers, deletingErrorZones, deletingS3LbGroups, deletingStoragePolicies, deletingUsers, deletingZones, errorDataBackends, errorS3LbGroups, errorZones, normalHosts, objectNum, offlineHosts, operationFailedHosts, s3LbGroups, storagePolicies, systemMetadataClusterStatus, users, warningHosts, warningZones, zones);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspClusterOverview {\n");
    
    sb.append("    buckets: ").append(toIndentedString(buckets)).append("\n");
    sb.append("    bucketsInRecycle: ").append(toIndentedString(bucketsInRecycle)).append("\n");
    sb.append("    buildingDataBackends: ").append(toIndentedString(buildingDataBackends)).append("\n");
    sb.append("    buildingErrorDataBackends: ").append(toIndentedString(buildingErrorDataBackends)).append("\n");
    sb.append("    buildingErrorZones: ").append(toIndentedString(buildingErrorZones)).append("\n");
    sb.append("    buildingS3LbGroups: ").append(toIndentedString(buildingS3LbGroups)).append("\n");
    sb.append("    buildingZones: ").append(toIndentedString(buildingZones)).append("\n");
    sb.append("    dataBackends: ").append(toIndentedString(dataBackends)).append("\n");
    sb.append("    dataBytes: ").append(toIndentedString(dataBytes)).append("\n");
    sb.append("    deletingBuckets: ").append(toIndentedString(deletingBuckets)).append("\n");
    sb.append("    deletingDataBackends: ").append(toIndentedString(deletingDataBackends)).append("\n");
    sb.append("    deletingErrorBuckets: ").append(toIndentedString(deletingErrorBuckets)).append("\n");
    sb.append("    deletingErrorDataBackends: ").append(toIndentedString(deletingErrorDataBackends)).append("\n");
    sb.append("    deletingErrorStoragePolicies: ").append(toIndentedString(deletingErrorStoragePolicies)).append("\n");
    sb.append("    deletingErrorUsers: ").append(toIndentedString(deletingErrorUsers)).append("\n");
    sb.append("    deletingErrorZones: ").append(toIndentedString(deletingErrorZones)).append("\n");
    sb.append("    deletingS3LbGroups: ").append(toIndentedString(deletingS3LbGroups)).append("\n");
    sb.append("    deletingStoragePolicies: ").append(toIndentedString(deletingStoragePolicies)).append("\n");
    sb.append("    deletingUsers: ").append(toIndentedString(deletingUsers)).append("\n");
    sb.append("    deletingZones: ").append(toIndentedString(deletingZones)).append("\n");
    sb.append("    errorDataBackends: ").append(toIndentedString(errorDataBackends)).append("\n");
    sb.append("    errorS3LbGroups: ").append(toIndentedString(errorS3LbGroups)).append("\n");
    sb.append("    errorZones: ").append(toIndentedString(errorZones)).append("\n");
    sb.append("    normalHosts: ").append(toIndentedString(normalHosts)).append("\n");
    sb.append("    objectNum: ").append(toIndentedString(objectNum)).append("\n");
    sb.append("    offlineHosts: ").append(toIndentedString(offlineHosts)).append("\n");
    sb.append("    operationFailedHosts: ").append(toIndentedString(operationFailedHosts)).append("\n");
    sb.append("    s3LbGroups: ").append(toIndentedString(s3LbGroups)).append("\n");
    sb.append("    storagePolicies: ").append(toIndentedString(storagePolicies)).append("\n");
    sb.append("    systemMetadataClusterStatus: ").append(toIndentedString(systemMetadataClusterStatus)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    warningHosts: ").append(toIndentedString(warningHosts)).append("\n");
    sb.append("    warningZones: ").append(toIndentedString(warningZones)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
