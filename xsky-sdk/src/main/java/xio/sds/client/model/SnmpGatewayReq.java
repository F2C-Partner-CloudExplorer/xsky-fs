/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SnmpGatewayReq
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class SnmpGatewayReq {
  @SerializedName("Port")
  private Long port = null;

  @SerializedName("auth_password")
  private String authPassword = null;

  @SerializedName("auth_protocol")
  private String authProtocol = null;

  @SerializedName("context_engine_id")
  private String contextEngineId = null;

  @SerializedName("context_name")
  private String contextName = null;

  @SerializedName("host_id")
  private Long hostId = null;

  @SerializedName("priv_password")
  private String privPassword = null;

  @SerializedName("priv_protocol")
  private String privProtocol = null;

  @SerializedName("read_community")
  private String readCommunity = null;

  @SerializedName("security_engine_id")
  private String securityEngineId = null;

  @SerializedName("security_level")
  private String securityLevel = null;

  @SerializedName("user_name")
  private String userName = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("write_community")
  private String writeCommunity = null;

  public SnmpGatewayReq port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public SnmpGatewayReq authPassword(String authPassword) {
    this.authPassword = authPassword;
    return this;
  }

   /**
   * Get authPassword
   * @return authPassword
  **/
  @Schema(description = "")
  public String getAuthPassword() {
    return authPassword;
  }

  public void setAuthPassword(String authPassword) {
    this.authPassword = authPassword;
  }

  public SnmpGatewayReq authProtocol(String authProtocol) {
    this.authProtocol = authProtocol;
    return this;
  }

   /**
   * Get authProtocol
   * @return authProtocol
  **/
  @Schema(description = "")
  public String getAuthProtocol() {
    return authProtocol;
  }

  public void setAuthProtocol(String authProtocol) {
    this.authProtocol = authProtocol;
  }

  public SnmpGatewayReq contextEngineId(String contextEngineId) {
    this.contextEngineId = contextEngineId;
    return this;
  }

   /**
   * Get contextEngineId
   * @return contextEngineId
  **/
  @Schema(description = "")
  public String getContextEngineId() {
    return contextEngineId;
  }

  public void setContextEngineId(String contextEngineId) {
    this.contextEngineId = contextEngineId;
  }

  public SnmpGatewayReq contextName(String contextName) {
    this.contextName = contextName;
    return this;
  }

   /**
   * Get contextName
   * @return contextName
  **/
  @Schema(description = "")
  public String getContextName() {
    return contextName;
  }

  public void setContextName(String contextName) {
    this.contextName = contextName;
  }

  public SnmpGatewayReq hostId(Long hostId) {
    this.hostId = hostId;
    return this;
  }

   /**
   * Get hostId
   * @return hostId
  **/
  @Schema(description = "")
  public Long getHostId() {
    return hostId;
  }

  public void setHostId(Long hostId) {
    this.hostId = hostId;
  }

  public SnmpGatewayReq privPassword(String privPassword) {
    this.privPassword = privPassword;
    return this;
  }

   /**
   * Get privPassword
   * @return privPassword
  **/
  @Schema(description = "")
  public String getPrivPassword() {
    return privPassword;
  }

  public void setPrivPassword(String privPassword) {
    this.privPassword = privPassword;
  }

  public SnmpGatewayReq privProtocol(String privProtocol) {
    this.privProtocol = privProtocol;
    return this;
  }

   /**
   * Get privProtocol
   * @return privProtocol
  **/
  @Schema(description = "")
  public String getPrivProtocol() {
    return privProtocol;
  }

  public void setPrivProtocol(String privProtocol) {
    this.privProtocol = privProtocol;
  }

  public SnmpGatewayReq readCommunity(String readCommunity) {
    this.readCommunity = readCommunity;
    return this;
  }

   /**
   * Get readCommunity
   * @return readCommunity
  **/
  @Schema(description = "")
  public String getReadCommunity() {
    return readCommunity;
  }

  public void setReadCommunity(String readCommunity) {
    this.readCommunity = readCommunity;
  }

  public SnmpGatewayReq securityEngineId(String securityEngineId) {
    this.securityEngineId = securityEngineId;
    return this;
  }

   /**
   * Get securityEngineId
   * @return securityEngineId
  **/
  @Schema(description = "")
  public String getSecurityEngineId() {
    return securityEngineId;
  }

  public void setSecurityEngineId(String securityEngineId) {
    this.securityEngineId = securityEngineId;
  }

  public SnmpGatewayReq securityLevel(String securityLevel) {
    this.securityLevel = securityLevel;
    return this;
  }

   /**
   * Get securityLevel
   * @return securityLevel
  **/
  @Schema(description = "")
  public String getSecurityLevel() {
    return securityLevel;
  }

  public void setSecurityLevel(String securityLevel) {
    this.securityLevel = securityLevel;
  }

  public SnmpGatewayReq userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public SnmpGatewayReq version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public SnmpGatewayReq writeCommunity(String writeCommunity) {
    this.writeCommunity = writeCommunity;
    return this;
  }

   /**
   * Get writeCommunity
   * @return writeCommunity
  **/
  @Schema(description = "")
  public String getWriteCommunity() {
    return writeCommunity;
  }

  public void setWriteCommunity(String writeCommunity) {
    this.writeCommunity = writeCommunity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnmpGatewayReq snmpGatewayReq = (SnmpGatewayReq) o;
    return Objects.equals(this.port, snmpGatewayReq.port) &&
        Objects.equals(this.authPassword, snmpGatewayReq.authPassword) &&
        Objects.equals(this.authProtocol, snmpGatewayReq.authProtocol) &&
        Objects.equals(this.contextEngineId, snmpGatewayReq.contextEngineId) &&
        Objects.equals(this.contextName, snmpGatewayReq.contextName) &&
        Objects.equals(this.hostId, snmpGatewayReq.hostId) &&
        Objects.equals(this.privPassword, snmpGatewayReq.privPassword) &&
        Objects.equals(this.privProtocol, snmpGatewayReq.privProtocol) &&
        Objects.equals(this.readCommunity, snmpGatewayReq.readCommunity) &&
        Objects.equals(this.securityEngineId, snmpGatewayReq.securityEngineId) &&
        Objects.equals(this.securityLevel, snmpGatewayReq.securityLevel) &&
        Objects.equals(this.userName, snmpGatewayReq.userName) &&
        Objects.equals(this.version, snmpGatewayReq.version) &&
        Objects.equals(this.writeCommunity, snmpGatewayReq.writeCommunity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(port, authPassword, authProtocol, contextEngineId, contextName, hostId, privPassword, privProtocol, readCommunity, securityEngineId, securityLevel, userName, version, writeCommunity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnmpGatewayReq {\n");
    
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    authPassword: ").append(toIndentedString(authPassword)).append("\n");
    sb.append("    authProtocol: ").append(toIndentedString(authProtocol)).append("\n");
    sb.append("    contextEngineId: ").append(toIndentedString(contextEngineId)).append("\n");
    sb.append("    contextName: ").append(toIndentedString(contextName)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    privPassword: ").append(toIndentedString(privPassword)).append("\n");
    sb.append("    privProtocol: ").append(toIndentedString(privProtocol)).append("\n");
    sb.append("    readCommunity: ").append(toIndentedString(readCommunity)).append("\n");
    sb.append("    securityEngineId: ").append(toIndentedString(securityEngineId)).append("\n");
    sb.append("    securityLevel: ").append(toIndentedString(securityLevel)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    writeCommunity: ").append(toIndentedString(writeCommunity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
