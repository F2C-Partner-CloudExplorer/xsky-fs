/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.HostNestview;
import xio.sds.client.model.OsdNestview;
import xio.sds.client.model.OspMetadataClusterNestview;
import xio.sds.client.model.PartitionNestview;
import xio.sds.client.model.PlacementNodeNestview;
/**
 * OspMetadataServer contains information of a osp metadata server and it&#x27;s stats.
 */
@Schema(description = "OspMetadataServer contains information of a osp metadata server and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspMetadataServer {
  @SerializedName("class")
  private String propertyClass = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("datacenter")
  private PlacementNodeNestview datacenter = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("metadata_cluster")
  private OspMetadataClusterNestview metadataCluster = null;

  @SerializedName("osd")
  private OsdNestview osd = null;

  @SerializedName("partition")
  private PartitionNestview partition = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("roles")
  private List<String> roles = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("version")
  private Long version = null;

  public OspMetadataServer propertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
    return this;
  }

   /**
   * Get propertyClass
   * @return propertyClass
  **/
  @Schema(description = "")
  public String getPropertyClass() {
    return propertyClass;
  }

  public void setPropertyClass(String propertyClass) {
    this.propertyClass = propertyClass;
  }

  public OspMetadataServer cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public OspMetadataServer create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OspMetadataServer datacenter(PlacementNodeNestview datacenter) {
    this.datacenter = datacenter;
    return this;
  }

   /**
   * Get datacenter
   * @return datacenter
  **/
  @Schema(description = "")
  public PlacementNodeNestview getDatacenter() {
    return datacenter;
  }

  public void setDatacenter(PlacementNodeNestview datacenter) {
    this.datacenter = datacenter;
  }

  public OspMetadataServer host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public OspMetadataServer id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public OspMetadataServer ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public OspMetadataServer metadataCluster(OspMetadataClusterNestview metadataCluster) {
    this.metadataCluster = metadataCluster;
    return this;
  }

   /**
   * Get metadataCluster
   * @return metadataCluster
  **/
  @Schema(description = "")
  public OspMetadataClusterNestview getMetadataCluster() {
    return metadataCluster;
  }

  public void setMetadataCluster(OspMetadataClusterNestview metadataCluster) {
    this.metadataCluster = metadataCluster;
  }

  public OspMetadataServer osd(OsdNestview osd) {
    this.osd = osd;
    return this;
  }

   /**
   * Get osd
   * @return osd
  **/
  @Schema(description = "")
  public OsdNestview getOsd() {
    return osd;
  }

  public void setOsd(OsdNestview osd) {
    this.osd = osd;
  }

  public OspMetadataServer partition(PartitionNestview partition) {
    this.partition = partition;
    return this;
  }

   /**
   * Get partition
   * @return partition
  **/
  @Schema(description = "")
  public PartitionNestview getPartition() {
    return partition;
  }

  public void setPartition(PartitionNestview partition) {
    this.partition = partition;
  }

  public OspMetadataServer port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public OspMetadataServer roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public OspMetadataServer addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @Schema(description = "")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public OspMetadataServer status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OspMetadataServer update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public OspMetadataServer version(Long version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public Long getVersion() {
    return version;
  }

  public void setVersion(Long version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspMetadataServer ospMetadataServer = (OspMetadataServer) o;
    return Objects.equals(this.propertyClass, ospMetadataServer.propertyClass) &&
        Objects.equals(this.cluster, ospMetadataServer.cluster) &&
        Objects.equals(this.create, ospMetadataServer.create) &&
        Objects.equals(this.datacenter, ospMetadataServer.datacenter) &&
        Objects.equals(this.host, ospMetadataServer.host) &&
        Objects.equals(this.id, ospMetadataServer.id) &&
        Objects.equals(this.ip, ospMetadataServer.ip) &&
        Objects.equals(this.metadataCluster, ospMetadataServer.metadataCluster) &&
        Objects.equals(this.osd, ospMetadataServer.osd) &&
        Objects.equals(this.partition, ospMetadataServer.partition) &&
        Objects.equals(this.port, ospMetadataServer.port) &&
        Objects.equals(this.roles, ospMetadataServer.roles) &&
        Objects.equals(this.status, ospMetadataServer.status) &&
        Objects.equals(this.update, ospMetadataServer.update) &&
        Objects.equals(this.version, ospMetadataServer.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyClass, cluster, create, datacenter, host, id, ip, metadataCluster, osd, partition, port, roles, status, update, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspMetadataServer {\n");
    
    sb.append("    propertyClass: ").append(toIndentedString(propertyClass)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    datacenter: ").append(toIndentedString(datacenter)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    metadataCluster: ").append(toIndentedString(metadataCluster)).append("\n");
    sb.append("    osd: ").append(toIndentedString(osd)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
