/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.OspBucketFilter;
/**
 * OspBucketSyncRuleUpdateReqInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspBucketSyncRuleUpdateReqInfo {
  @SerializedName("filter")
  private OspBucketFilter filter = null;

  @SerializedName("read_mode")
  private String readMode = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("replication_group")
  private Long replicationGroup = null;

  public OspBucketSyncRuleUpdateReqInfo filter(OspBucketFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @Schema(description = "")
  public OspBucketFilter getFilter() {
    return filter;
  }

  public void setFilter(OspBucketFilter filter) {
    this.filter = filter;
  }

  public OspBucketSyncRuleUpdateReqInfo readMode(String readMode) {
    this.readMode = readMode;
    return this;
  }

   /**
   * Get readMode
   * @return readMode
  **/
  @Schema(description = "")
  public String getReadMode() {
    return readMode;
  }

  public void setReadMode(String readMode) {
    this.readMode = readMode;
  }

  public OspBucketSyncRuleUpdateReqInfo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OspBucketSyncRuleUpdateReqInfo replicationGroup(Long replicationGroup) {
    this.replicationGroup = replicationGroup;
    return this;
  }

   /**
   * Get replicationGroup
   * @return replicationGroup
  **/
  @Schema(description = "")
  public Long getReplicationGroup() {
    return replicationGroup;
  }

  public void setReplicationGroup(Long replicationGroup) {
    this.replicationGroup = replicationGroup;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspBucketSyncRuleUpdateReqInfo ospBucketSyncRuleUpdateReqInfo = (OspBucketSyncRuleUpdateReqInfo) o;
    return Objects.equals(this.filter, ospBucketSyncRuleUpdateReqInfo.filter) &&
        Objects.equals(this.readMode, ospBucketSyncRuleUpdateReqInfo.readMode) &&
        Objects.equals(this.name, ospBucketSyncRuleUpdateReqInfo.name) &&
        Objects.equals(this.replicationGroup, ospBucketSyncRuleUpdateReqInfo.replicationGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, readMode, name, replicationGroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspBucketSyncRuleUpdateReqInfo {\n");
    
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    readMode: ").append(toIndentedString(readMode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    replicationGroup: ").append(toIndentedString(replicationGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
