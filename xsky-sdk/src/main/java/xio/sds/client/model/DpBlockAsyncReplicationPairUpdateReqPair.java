/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DpBlockAsyncReplicationPairUpdateReqPair
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DpBlockAsyncReplicationPairUpdateReqPair {
  @SerializedName("connected")
  private Boolean connected = null;

  @SerializedName("master_policy_cron")
  private String masterPolicyCron = null;

  @SerializedName("master_pool_name")
  private String masterPoolName = null;

  @SerializedName("master_volume_name")
  private String masterVolumeName = null;

  public DpBlockAsyncReplicationPairUpdateReqPair connected(Boolean connected) {
    this.connected = connected;
    return this;
  }

   /**
   * connection
   * @return connected
  **/
  @Schema(description = "connection")
  public Boolean isConnected() {
    return connected;
  }

  public void setConnected(Boolean connected) {
    this.connected = connected;
  }

  public DpBlockAsyncReplicationPairUpdateReqPair masterPolicyCron(String masterPolicyCron) {
    this.masterPolicyCron = masterPolicyCron;
    return this;
  }

   /**
   * master policy cron
   * @return masterPolicyCron
  **/
  @Schema(description = "master policy cron")
  public String getMasterPolicyCron() {
    return masterPolicyCron;
  }

  public void setMasterPolicyCron(String masterPolicyCron) {
    this.masterPolicyCron = masterPolicyCron;
  }

  public DpBlockAsyncReplicationPairUpdateReqPair masterPoolName(String masterPoolName) {
    this.masterPoolName = masterPoolName;
    return this;
  }

   /**
   * master pool name
   * @return masterPoolName
  **/
  @Schema(description = "master pool name")
  public String getMasterPoolName() {
    return masterPoolName;
  }

  public void setMasterPoolName(String masterPoolName) {
    this.masterPoolName = masterPoolName;
  }

  public DpBlockAsyncReplicationPairUpdateReqPair masterVolumeName(String masterVolumeName) {
    this.masterVolumeName = masterVolumeName;
    return this;
  }

   /**
   * master volume name
   * @return masterVolumeName
  **/
  @Schema(description = "master volume name")
  public String getMasterVolumeName() {
    return masterVolumeName;
  }

  public void setMasterVolumeName(String masterVolumeName) {
    this.masterVolumeName = masterVolumeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DpBlockAsyncReplicationPairUpdateReqPair dpBlockAsyncReplicationPairUpdateReqPair = (DpBlockAsyncReplicationPairUpdateReqPair) o;
    return Objects.equals(this.connected, dpBlockAsyncReplicationPairUpdateReqPair.connected) &&
        Objects.equals(this.masterPolicyCron, dpBlockAsyncReplicationPairUpdateReqPair.masterPolicyCron) &&
        Objects.equals(this.masterPoolName, dpBlockAsyncReplicationPairUpdateReqPair.masterPoolName) &&
        Objects.equals(this.masterVolumeName, dpBlockAsyncReplicationPairUpdateReqPair.masterVolumeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(connected, masterPolicyCron, masterPoolName, masterVolumeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DpBlockAsyncReplicationPairUpdateReqPair {\n");
    
    sb.append("    connected: ").append(toIndentedString(connected)).append("\n");
    sb.append("    masterPolicyCron: ").append(toIndentedString(masterPolicyCron)).append("\n");
    sb.append("    masterPoolName: ").append(toIndentedString(masterPoolName)).append("\n");
    sb.append("    masterVolumeName: ").append(toIndentedString(masterVolumeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
