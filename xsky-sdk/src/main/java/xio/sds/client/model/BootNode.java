/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.HostNestview;
/**
 * BootNode defines the status of boot node +X:model:generate +X:benchmark:
 */
@Schema(description = "BootNode defines the status of boot node +X:model:generate +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class BootNode {
  @SerializedName("admin_network")
  private String adminNetwork = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("gateway_network")
  private String gatewayNetwork = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("private_network")
  private String privateNetwork = null;

  @SerializedName("public_network")
  private String publicNetwork = null;

  @SerializedName("status")
  private String status = null;

  public BootNode adminNetwork(String adminNetwork) {
    this.adminNetwork = adminNetwork;
    return this;
  }

   /**
   * Get adminNetwork
   * @return adminNetwork
  **/
  @Schema(required = true, description = "")
  public String getAdminNetwork() {
    return adminNetwork;
  }

  public void setAdminNetwork(String adminNetwork) {
    this.adminNetwork = adminNetwork;
  }

  public BootNode cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public BootNode gatewayNetwork(String gatewayNetwork) {
    this.gatewayNetwork = gatewayNetwork;
    return this;
  }

   /**
   * Get gatewayNetwork
   * @return gatewayNetwork
  **/
  @Schema(required = true, description = "")
  public String getGatewayNetwork() {
    return gatewayNetwork;
  }

  public void setGatewayNetwork(String gatewayNetwork) {
    this.gatewayNetwork = gatewayNetwork;
  }

  public BootNode host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public BootNode id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public BootNode privateNetwork(String privateNetwork) {
    this.privateNetwork = privateNetwork;
    return this;
  }

   /**
   * Get privateNetwork
   * @return privateNetwork
  **/
  @Schema(required = true, description = "")
  public String getPrivateNetwork() {
    return privateNetwork;
  }

  public void setPrivateNetwork(String privateNetwork) {
    this.privateNetwork = privateNetwork;
  }

  public BootNode publicNetwork(String publicNetwork) {
    this.publicNetwork = publicNetwork;
    return this;
  }

   /**
   * Get publicNetwork
   * @return publicNetwork
  **/
  @Schema(required = true, description = "")
  public String getPublicNetwork() {
    return publicNetwork;
  }

  public void setPublicNetwork(String publicNetwork) {
    this.publicNetwork = publicNetwork;
  }

  public BootNode status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BootNode bootNode = (BootNode) o;
    return Objects.equals(this.adminNetwork, bootNode.adminNetwork) &&
        Objects.equals(this.cluster, bootNode.cluster) &&
        Objects.equals(this.gatewayNetwork, bootNode.gatewayNetwork) &&
        Objects.equals(this.host, bootNode.host) &&
        Objects.equals(this.id, bootNode.id) &&
        Objects.equals(this.privateNetwork, bootNode.privateNetwork) &&
        Objects.equals(this.publicNetwork, bootNode.publicNetwork) &&
        Objects.equals(this.status, bootNode.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminNetwork, cluster, gatewayNetwork, host, id, privateNetwork, publicNetwork, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BootNode {\n");
    
    sb.append("    adminNetwork: ").append(toIndentedString(adminNetwork)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    gatewayNetwork: ").append(toIndentedString(gatewayNetwork)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    privateNetwork: ").append(toIndentedString(privateNetwork)).append("\n");
    sb.append("    publicNetwork: ").append(toIndentedString(publicNetwork)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
