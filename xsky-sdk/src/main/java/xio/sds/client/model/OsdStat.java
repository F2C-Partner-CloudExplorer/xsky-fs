/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.DiskStat;
import xio.sds.client.model.PartitionStat;
/**
 * OsdStat defines the basic info of a OsdStat
 */
@Schema(description = "OsdStat defines the basic info of a OsdStat")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OsdStat extends DiskStat {
  @SerializedName("compressed_byte")
  private Long compressedByte = null;

  @SerializedName("compressed_origin_byte")
  private Long compressedOriginByte = null;

  @SerializedName("create")
  private OffsetDateTime osdStatCreate = null;

  @SerializedName("degraded_percent")
  private Double degradedPercent = null;

  @SerializedName("healthy_percent")
  private Double healthyPercent = null;

  @SerializedName("omap_total_kbyte")
  private Double omapTotalKbyte = null;

  @SerializedName("omap_used_kbyte")
  private Double omapUsedKbyte = null;

  @SerializedName("omap_used_percent")
  private Double omapUsedPercent = null;

  @SerializedName("partition")
  private PartitionStat partition = null;

  @SerializedName("pg_creating_num")
  private Long pgCreatingNum = null;

  @SerializedName("pg_degraded_num")
  private Long pgDegradedNum = null;

  @SerializedName("pg_healthy_num")
  private Long pgHealthyNum = null;

  @SerializedName("pg_recovery_num")
  private Long pgRecoveryNum = null;

  @SerializedName("pg_total_num")
  private Long pgTotalNum = null;

  @SerializedName("pg_unavailable_num")
  private Long pgUnavailableNum = null;

  @SerializedName("recovery_percent")
  private Double recoveryPercent = null;

  @SerializedName("unavailable_percent")
  private Double unavailablePercent = null;

  @SerializedName("water_level")
  private Double waterLevel = null;

  public OsdStat compressedByte(Long compressedByte) {
    this.compressedByte = compressedByte;
    return this;
  }

   /**
   * Get compressedByte
   * @return compressedByte
  **/
  @Schema(description = "")
  public Long getCompressedByte() {
    return compressedByte;
  }

  public void setCompressedByte(Long compressedByte) {
    this.compressedByte = compressedByte;
  }

  public OsdStat compressedOriginByte(Long compressedOriginByte) {
    this.compressedOriginByte = compressedOriginByte;
    return this;
  }

   /**
   * Get compressedOriginByte
   * @return compressedOriginByte
  **/
  @Schema(description = "")
  public Long getCompressedOriginByte() {
    return compressedOriginByte;
  }

  public void setCompressedOriginByte(Long compressedOriginByte) {
    this.compressedOriginByte = compressedOriginByte;
  }

  public OsdStat osdStatCreate(OffsetDateTime osdStatCreate) {
    this.osdStatCreate = osdStatCreate;
    return this;
  }

   /**
   * Get osdStatCreate
   * @return osdStatCreate
  **/
  @Schema(description = "")
  public OffsetDateTime getOsdStatCreate() {
    return osdStatCreate;
  }

  public void setOsdStatCreate(OffsetDateTime osdStatCreate) {
    this.osdStatCreate = osdStatCreate;
  }

  public OsdStat degradedPercent(Double degradedPercent) {
    this.degradedPercent = degradedPercent;
    return this;
  }

   /**
   * Get degradedPercent
   * @return degradedPercent
  **/
  @Schema(description = "")
  public Double getDegradedPercent() {
    return degradedPercent;
  }

  public void setDegradedPercent(Double degradedPercent) {
    this.degradedPercent = degradedPercent;
  }

  public OsdStat healthyPercent(Double healthyPercent) {
    this.healthyPercent = healthyPercent;
    return this;
  }

   /**
   * Get healthyPercent
   * @return healthyPercent
  **/
  @Schema(description = "")
  public Double getHealthyPercent() {
    return healthyPercent;
  }

  public void setHealthyPercent(Double healthyPercent) {
    this.healthyPercent = healthyPercent;
  }

  public OsdStat omapTotalKbyte(Double omapTotalKbyte) {
    this.omapTotalKbyte = omapTotalKbyte;
    return this;
  }

   /**
   * Get omapTotalKbyte
   * @return omapTotalKbyte
  **/
  @Schema(description = "")
  public Double getOmapTotalKbyte() {
    return omapTotalKbyte;
  }

  public void setOmapTotalKbyte(Double omapTotalKbyte) {
    this.omapTotalKbyte = omapTotalKbyte;
  }

  public OsdStat omapUsedKbyte(Double omapUsedKbyte) {
    this.omapUsedKbyte = omapUsedKbyte;
    return this;
  }

   /**
   * Get omapUsedKbyte
   * @return omapUsedKbyte
  **/
  @Schema(description = "")
  public Double getOmapUsedKbyte() {
    return omapUsedKbyte;
  }

  public void setOmapUsedKbyte(Double omapUsedKbyte) {
    this.omapUsedKbyte = omapUsedKbyte;
  }

  public OsdStat omapUsedPercent(Double omapUsedPercent) {
    this.omapUsedPercent = omapUsedPercent;
    return this;
  }

   /**
   * Get omapUsedPercent
   * @return omapUsedPercent
  **/
  @Schema(description = "")
  public Double getOmapUsedPercent() {
    return omapUsedPercent;
  }

  public void setOmapUsedPercent(Double omapUsedPercent) {
    this.omapUsedPercent = omapUsedPercent;
  }

  public OsdStat partition(PartitionStat partition) {
    this.partition = partition;
    return this;
  }

   /**
   * Get partition
   * @return partition
  **/
  @Schema(description = "")
  public PartitionStat getPartition() {
    return partition;
  }

  public void setPartition(PartitionStat partition) {
    this.partition = partition;
  }

  public OsdStat pgCreatingNum(Long pgCreatingNum) {
    this.pgCreatingNum = pgCreatingNum;
    return this;
  }

   /**
   * Get pgCreatingNum
   * @return pgCreatingNum
  **/
  @Schema(description = "")
  public Long getPgCreatingNum() {
    return pgCreatingNum;
  }

  public void setPgCreatingNum(Long pgCreatingNum) {
    this.pgCreatingNum = pgCreatingNum;
  }

  public OsdStat pgDegradedNum(Long pgDegradedNum) {
    this.pgDegradedNum = pgDegradedNum;
    return this;
  }

   /**
   * Get pgDegradedNum
   * @return pgDegradedNum
  **/
  @Schema(description = "")
  public Long getPgDegradedNum() {
    return pgDegradedNum;
  }

  public void setPgDegradedNum(Long pgDegradedNum) {
    this.pgDegradedNum = pgDegradedNum;
  }

  public OsdStat pgHealthyNum(Long pgHealthyNum) {
    this.pgHealthyNum = pgHealthyNum;
    return this;
  }

   /**
   * Get pgHealthyNum
   * @return pgHealthyNum
  **/
  @Schema(description = "")
  public Long getPgHealthyNum() {
    return pgHealthyNum;
  }

  public void setPgHealthyNum(Long pgHealthyNum) {
    this.pgHealthyNum = pgHealthyNum;
  }

  public OsdStat pgRecoveryNum(Long pgRecoveryNum) {
    this.pgRecoveryNum = pgRecoveryNum;
    return this;
  }

   /**
   * Get pgRecoveryNum
   * @return pgRecoveryNum
  **/
  @Schema(description = "")
  public Long getPgRecoveryNum() {
    return pgRecoveryNum;
  }

  public void setPgRecoveryNum(Long pgRecoveryNum) {
    this.pgRecoveryNum = pgRecoveryNum;
  }

  public OsdStat pgTotalNum(Long pgTotalNum) {
    this.pgTotalNum = pgTotalNum;
    return this;
  }

   /**
   * Get pgTotalNum
   * @return pgTotalNum
  **/
  @Schema(description = "")
  public Long getPgTotalNum() {
    return pgTotalNum;
  }

  public void setPgTotalNum(Long pgTotalNum) {
    this.pgTotalNum = pgTotalNum;
  }

  public OsdStat pgUnavailableNum(Long pgUnavailableNum) {
    this.pgUnavailableNum = pgUnavailableNum;
    return this;
  }

   /**
   * Get pgUnavailableNum
   * @return pgUnavailableNum
  **/
  @Schema(description = "")
  public Long getPgUnavailableNum() {
    return pgUnavailableNum;
  }

  public void setPgUnavailableNum(Long pgUnavailableNum) {
    this.pgUnavailableNum = pgUnavailableNum;
  }

  public OsdStat recoveryPercent(Double recoveryPercent) {
    this.recoveryPercent = recoveryPercent;
    return this;
  }

   /**
   * Get recoveryPercent
   * @return recoveryPercent
  **/
  @Schema(description = "")
  public Double getRecoveryPercent() {
    return recoveryPercent;
  }

  public void setRecoveryPercent(Double recoveryPercent) {
    this.recoveryPercent = recoveryPercent;
  }

  public OsdStat unavailablePercent(Double unavailablePercent) {
    this.unavailablePercent = unavailablePercent;
    return this;
  }

   /**
   * Get unavailablePercent
   * @return unavailablePercent
  **/
  @Schema(description = "")
  public Double getUnavailablePercent() {
    return unavailablePercent;
  }

  public void setUnavailablePercent(Double unavailablePercent) {
    this.unavailablePercent = unavailablePercent;
  }

  public OsdStat waterLevel(Double waterLevel) {
    this.waterLevel = waterLevel;
    return this;
  }

   /**
   * Get waterLevel
   * @return waterLevel
  **/
  @Schema(description = "")
  public Double getWaterLevel() {
    return waterLevel;
  }

  public void setWaterLevel(Double waterLevel) {
    this.waterLevel = waterLevel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OsdStat osdStat = (OsdStat) o;
    return Objects.equals(this.compressedByte, osdStat.compressedByte) &&
        Objects.equals(this.compressedOriginByte, osdStat.compressedOriginByte) &&
        Objects.equals(this.osdStatCreate, osdStat.osdStatCreate) &&
        Objects.equals(this.degradedPercent, osdStat.degradedPercent) &&
        Objects.equals(this.healthyPercent, osdStat.healthyPercent) &&
        Objects.equals(this.omapTotalKbyte, osdStat.omapTotalKbyte) &&
        Objects.equals(this.omapUsedKbyte, osdStat.omapUsedKbyte) &&
        Objects.equals(this.omapUsedPercent, osdStat.omapUsedPercent) &&
        Objects.equals(this.partition, osdStat.partition) &&
        Objects.equals(this.pgCreatingNum, osdStat.pgCreatingNum) &&
        Objects.equals(this.pgDegradedNum, osdStat.pgDegradedNum) &&
        Objects.equals(this.pgHealthyNum, osdStat.pgHealthyNum) &&
        Objects.equals(this.pgRecoveryNum, osdStat.pgRecoveryNum) &&
        Objects.equals(this.pgTotalNum, osdStat.pgTotalNum) &&
        Objects.equals(this.pgUnavailableNum, osdStat.pgUnavailableNum) &&
        Objects.equals(this.recoveryPercent, osdStat.recoveryPercent) &&
        Objects.equals(this.unavailablePercent, osdStat.unavailablePercent) &&
        Objects.equals(this.waterLevel, osdStat.waterLevel) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compressedByte, compressedOriginByte, osdStatCreate, degradedPercent, healthyPercent, omapTotalKbyte, omapUsedKbyte, omapUsedPercent, partition, pgCreatingNum, pgDegradedNum, pgHealthyNum, pgRecoveryNum, pgTotalNum, pgUnavailableNum, recoveryPercent, unavailablePercent, waterLevel, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OsdStat {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    compressedByte: ").append(toIndentedString(compressedByte)).append("\n");
    sb.append("    compressedOriginByte: ").append(toIndentedString(compressedOriginByte)).append("\n");
    sb.append("    osdStatCreate: ").append(toIndentedString(osdStatCreate)).append("\n");
    sb.append("    degradedPercent: ").append(toIndentedString(degradedPercent)).append("\n");
    sb.append("    healthyPercent: ").append(toIndentedString(healthyPercent)).append("\n");
    sb.append("    omapTotalKbyte: ").append(toIndentedString(omapTotalKbyte)).append("\n");
    sb.append("    omapUsedKbyte: ").append(toIndentedString(omapUsedKbyte)).append("\n");
    sb.append("    omapUsedPercent: ").append(toIndentedString(omapUsedPercent)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    pgCreatingNum: ").append(toIndentedString(pgCreatingNum)).append("\n");
    sb.append("    pgDegradedNum: ").append(toIndentedString(pgDegradedNum)).append("\n");
    sb.append("    pgHealthyNum: ").append(toIndentedString(pgHealthyNum)).append("\n");
    sb.append("    pgRecoveryNum: ").append(toIndentedString(pgRecoveryNum)).append("\n");
    sb.append("    pgTotalNum: ").append(toIndentedString(pgTotalNum)).append("\n");
    sb.append("    pgUnavailableNum: ").append(toIndentedString(pgUnavailableNum)).append("\n");
    sb.append("    recoveryPercent: ").append(toIndentedString(recoveryPercent)).append("\n");
    sb.append("    unavailablePercent: ").append(toIndentedString(unavailablePercent)).append("\n");
    sb.append("    waterLevel: ").append(toIndentedString(waterLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
