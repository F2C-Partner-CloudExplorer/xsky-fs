/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.S3LbGroupWebServiceConfig;
import xio.sds.client.model.S3LoadBalancerGroupCreateReqGroupLoadBalancersElt;
/**
 * S3LoadBalancerGroupCreateReqGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class S3LoadBalancerGroupCreateReqGroup {
  @SerializedName("description")
  private String description = null;

  @SerializedName("https_port")
  private Long httpsPort = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("osp_zone_id")
  private Long ospZoneId = null;

  @SerializedName("oss_api_enabled")
  private Boolean ossApiEnabled = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("roles")
  private List<String> roles = null;

  @SerializedName("s3_load_balancers")
  private List<S3LoadBalancerGroupCreateReqGroupLoadBalancersElt> s3LoadBalancers = new ArrayList<S3LoadBalancerGroupCreateReqGroupLoadBalancersElt>();

  @SerializedName("search_https_port")
  private Long searchHttpsPort = null;

  @SerializedName("search_port")
  private Long searchPort = null;

  @SerializedName("sync_port")
  private Long syncPort = null;

  @SerializedName("web_service_config")
  private S3LbGroupWebServiceConfig webServiceConfig = null;

  @SerializedName("web_service_port")
  private Long webServicePort = null;

  public S3LoadBalancerGroupCreateReqGroup description(String description) {
    this.description = description;
    return this;
  }

   /**
   * group description
   * @return description
  **/
  @Schema(description = "group description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public S3LoadBalancerGroupCreateReqGroup httpsPort(Long httpsPort) {
    this.httpsPort = httpsPort;
    return this;
  }

   /**
   * group access https port
   * @return httpsPort
  **/
  @Schema(description = "group access https port")
  public Long getHttpsPort() {
    return httpsPort;
  }

  public void setHttpsPort(Long httpsPort) {
    this.httpsPort = httpsPort;
  }

  public S3LoadBalancerGroupCreateReqGroup name(String name) {
    this.name = name;
    return this;
  }

   /**
   * group name
   * @return name
  **/
  @Schema(required = true, description = "group name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public S3LoadBalancerGroupCreateReqGroup ospZoneId(Long ospZoneId) {
    this.ospZoneId = ospZoneId;
    return this;
  }

   /**
   * osp zone id
   * @return ospZoneId
  **/
  @Schema(description = "osp zone id")
  public Long getOspZoneId() {
    return ospZoneId;
  }

  public void setOspZoneId(Long ospZoneId) {
    this.ospZoneId = ospZoneId;
  }

  public S3LoadBalancerGroupCreateReqGroup ossApiEnabled(Boolean ossApiEnabled) {
    this.ossApiEnabled = ossApiEnabled;
    return this;
  }

   /**
   * Get ossApiEnabled
   * @return ossApiEnabled
  **/
  @Schema(description = "")
  public Boolean isOssApiEnabled() {
    return ossApiEnabled;
  }

  public void setOssApiEnabled(Boolean ossApiEnabled) {
    this.ossApiEnabled = ossApiEnabled;
  }

  public S3LoadBalancerGroupCreateReqGroup port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * group access http port
   * @return port
  **/
  @Schema(description = "group access http port")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public S3LoadBalancerGroupCreateReqGroup roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public S3LoadBalancerGroupCreateReqGroup addRolesItem(String rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<String>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * group roles
   * @return roles
  **/
  @Schema(description = "group roles")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public S3LoadBalancerGroupCreateReqGroup s3LoadBalancers(List<S3LoadBalancerGroupCreateReqGroupLoadBalancersElt> s3LoadBalancers) {
    this.s3LoadBalancers = s3LoadBalancers;
    return this;
  }

  public S3LoadBalancerGroupCreateReqGroup addS3LoadBalancersItem(S3LoadBalancerGroupCreateReqGroupLoadBalancersElt s3LoadBalancersItem) {
    this.s3LoadBalancers.add(s3LoadBalancersItem);
    return this;
  }

   /**
   * s3 load balancers
   * @return s3LoadBalancers
  **/
  @Schema(required = true, description = "s3 load balancers")
  public List<S3LoadBalancerGroupCreateReqGroupLoadBalancersElt> getS3LoadBalancers() {
    return s3LoadBalancers;
  }

  public void setS3LoadBalancers(List<S3LoadBalancerGroupCreateReqGroupLoadBalancersElt> s3LoadBalancers) {
    this.s3LoadBalancers = s3LoadBalancers;
  }

  public S3LoadBalancerGroupCreateReqGroup searchHttpsPort(Long searchHttpsPort) {
    this.searchHttpsPort = searchHttpsPort;
    return this;
  }

   /**
   * group search https port
   * @return searchHttpsPort
  **/
  @Schema(description = "group search https port")
  public Long getSearchHttpsPort() {
    return searchHttpsPort;
  }

  public void setSearchHttpsPort(Long searchHttpsPort) {
    this.searchHttpsPort = searchHttpsPort;
  }

  public S3LoadBalancerGroupCreateReqGroup searchPort(Long searchPort) {
    this.searchPort = searchPort;
    return this;
  }

   /**
   * group search http port
   * @return searchPort
  **/
  @Schema(description = "group search http port")
  public Long getSearchPort() {
    return searchPort;
  }

  public void setSearchPort(Long searchPort) {
    this.searchPort = searchPort;
  }

  public S3LoadBalancerGroupCreateReqGroup syncPort(Long syncPort) {
    this.syncPort = syncPort;
    return this;
  }

   /**
   * group sync http port
   * @return syncPort
  **/
  @Schema(description = "group sync http port")
  public Long getSyncPort() {
    return syncPort;
  }

  public void setSyncPort(Long syncPort) {
    this.syncPort = syncPort;
  }

  public S3LoadBalancerGroupCreateReqGroup webServiceConfig(S3LbGroupWebServiceConfig webServiceConfig) {
    this.webServiceConfig = webServiceConfig;
    return this;
  }

   /**
   * Get webServiceConfig
   * @return webServiceConfig
  **/
  @Schema(description = "")
  public S3LbGroupWebServiceConfig getWebServiceConfig() {
    return webServiceConfig;
  }

  public void setWebServiceConfig(S3LbGroupWebServiceConfig webServiceConfig) {
    this.webServiceConfig = webServiceConfig;
  }

  public S3LoadBalancerGroupCreateReqGroup webServicePort(Long webServicePort) {
    this.webServicePort = webServicePort;
    return this;
  }

   /**
   * group web service http port
   * @return webServicePort
  **/
  @Schema(description = "group web service http port")
  public Long getWebServicePort() {
    return webServicePort;
  }

  public void setWebServicePort(Long webServicePort) {
    this.webServicePort = webServicePort;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S3LoadBalancerGroupCreateReqGroup s3LoadBalancerGroupCreateReqGroup = (S3LoadBalancerGroupCreateReqGroup) o;
    return Objects.equals(this.description, s3LoadBalancerGroupCreateReqGroup.description) &&
        Objects.equals(this.httpsPort, s3LoadBalancerGroupCreateReqGroup.httpsPort) &&
        Objects.equals(this.name, s3LoadBalancerGroupCreateReqGroup.name) &&
        Objects.equals(this.ospZoneId, s3LoadBalancerGroupCreateReqGroup.ospZoneId) &&
        Objects.equals(this.ossApiEnabled, s3LoadBalancerGroupCreateReqGroup.ossApiEnabled) &&
        Objects.equals(this.port, s3LoadBalancerGroupCreateReqGroup.port) &&
        Objects.equals(this.roles, s3LoadBalancerGroupCreateReqGroup.roles) &&
        Objects.equals(this.s3LoadBalancers, s3LoadBalancerGroupCreateReqGroup.s3LoadBalancers) &&
        Objects.equals(this.searchHttpsPort, s3LoadBalancerGroupCreateReqGroup.searchHttpsPort) &&
        Objects.equals(this.searchPort, s3LoadBalancerGroupCreateReqGroup.searchPort) &&
        Objects.equals(this.syncPort, s3LoadBalancerGroupCreateReqGroup.syncPort) &&
        Objects.equals(this.webServiceConfig, s3LoadBalancerGroupCreateReqGroup.webServiceConfig) &&
        Objects.equals(this.webServicePort, s3LoadBalancerGroupCreateReqGroup.webServicePort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, httpsPort, name, ospZoneId, ossApiEnabled, port, roles, s3LoadBalancers, searchHttpsPort, searchPort, syncPort, webServiceConfig, webServicePort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S3LoadBalancerGroupCreateReqGroup {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    httpsPort: ").append(toIndentedString(httpsPort)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ospZoneId: ").append(toIndentedString(ospZoneId)).append("\n");
    sb.append("    ossApiEnabled: ").append(toIndentedString(ossApiEnabled)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    s3LoadBalancers: ").append(toIndentedString(s3LoadBalancers)).append("\n");
    sb.append("    searchHttpsPort: ").append(toIndentedString(searchHttpsPort)).append("\n");
    sb.append("    searchPort: ").append(toIndentedString(searchPort)).append("\n");
    sb.append("    syncPort: ").append(toIndentedString(syncPort)).append("\n");
    sb.append("    webServiceConfig: ").append(toIndentedString(webServiceConfig)).append("\n");
    sb.append("    webServicePort: ").append(toIndentedString(webServicePort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
