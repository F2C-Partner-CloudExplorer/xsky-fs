/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.HostNestview;
import xio.sds.client.model.S3LoadBalancerKeepalivedRID;
import xio.sds.client.model.S3LoadBalancerNestview;
/**
 * S3LoadBalancerKeepalived is a load balancer keepalived +X:model:generate;
 */
@Schema(description = "S3LoadBalancerKeepalived is a load balancer keepalived +X:model:generate;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class S3LoadBalancerKeepalived {
  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("interface_name")
  private String interfaceName = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("rid")
  private S3LoadBalancerKeepalivedRID rid = null;

  @SerializedName("role")
  private String role = null;

  @SerializedName("s3_load_balancer")
  private S3LoadBalancerNestview s3LoadBalancer = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("vip")
  private String vip = null;

  @SerializedName("vip_mask")
  private Long vipMask = null;

  public S3LoadBalancerKeepalived cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public S3LoadBalancerKeepalived create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public S3LoadBalancerKeepalived host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public S3LoadBalancerKeepalived id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public S3LoadBalancerKeepalived interfaceName(String interfaceName) {
    this.interfaceName = interfaceName;
    return this;
  }

   /**
   * Get interfaceName
   * @return interfaceName
  **/
  @Schema(description = "")
  public String getInterfaceName() {
    return interfaceName;
  }

  public void setInterfaceName(String interfaceName) {
    this.interfaceName = interfaceName;
  }

  public S3LoadBalancerKeepalived ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public S3LoadBalancerKeepalived rid(S3LoadBalancerKeepalivedRID rid) {
    this.rid = rid;
    return this;
  }

   /**
   * Get rid
   * @return rid
  **/
  @Schema(description = "")
  public S3LoadBalancerKeepalivedRID getRid() {
    return rid;
  }

  public void setRid(S3LoadBalancerKeepalivedRID rid) {
    this.rid = rid;
  }

  public S3LoadBalancerKeepalived role(String role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public String getRole() {
    return role;
  }

  public void setRole(String role) {
    this.role = role;
  }

  public S3LoadBalancerKeepalived s3LoadBalancer(S3LoadBalancerNestview s3LoadBalancer) {
    this.s3LoadBalancer = s3LoadBalancer;
    return this;
  }

   /**
   * Get s3LoadBalancer
   * @return s3LoadBalancer
  **/
  @Schema(description = "")
  public S3LoadBalancerNestview getS3LoadBalancer() {
    return s3LoadBalancer;
  }

  public void setS3LoadBalancer(S3LoadBalancerNestview s3LoadBalancer) {
    this.s3LoadBalancer = s3LoadBalancer;
  }

  public S3LoadBalancerKeepalived status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public S3LoadBalancerKeepalived update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public S3LoadBalancerKeepalived vip(String vip) {
    this.vip = vip;
    return this;
  }

   /**
   * Get vip
   * @return vip
  **/
  @Schema(description = "")
  public String getVip() {
    return vip;
  }

  public void setVip(String vip) {
    this.vip = vip;
  }

  public S3LoadBalancerKeepalived vipMask(Long vipMask) {
    this.vipMask = vipMask;
    return this;
  }

   /**
   * Get vipMask
   * @return vipMask
  **/
  @Schema(description = "")
  public Long getVipMask() {
    return vipMask;
  }

  public void setVipMask(Long vipMask) {
    this.vipMask = vipMask;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S3LoadBalancerKeepalived s3LoadBalancerKeepalived = (S3LoadBalancerKeepalived) o;
    return Objects.equals(this.cluster, s3LoadBalancerKeepalived.cluster) &&
        Objects.equals(this.create, s3LoadBalancerKeepalived.create) &&
        Objects.equals(this.host, s3LoadBalancerKeepalived.host) &&
        Objects.equals(this.id, s3LoadBalancerKeepalived.id) &&
        Objects.equals(this.interfaceName, s3LoadBalancerKeepalived.interfaceName) &&
        Objects.equals(this.ip, s3LoadBalancerKeepalived.ip) &&
        Objects.equals(this.rid, s3LoadBalancerKeepalived.rid) &&
        Objects.equals(this.role, s3LoadBalancerKeepalived.role) &&
        Objects.equals(this.s3LoadBalancer, s3LoadBalancerKeepalived.s3LoadBalancer) &&
        Objects.equals(this.status, s3LoadBalancerKeepalived.status) &&
        Objects.equals(this.update, s3LoadBalancerKeepalived.update) &&
        Objects.equals(this.vip, s3LoadBalancerKeepalived.vip) &&
        Objects.equals(this.vipMask, s3LoadBalancerKeepalived.vipMask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, create, host, id, interfaceName, ip, rid, role, s3LoadBalancer, status, update, vip, vipMask);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S3LoadBalancerKeepalived {\n");
    
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interfaceName: ").append(toIndentedString(interfaceName)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    rid: ").append(toIndentedString(rid)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    s3LoadBalancer: ").append(toIndentedString(s3LoadBalancer)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    vip: ").append(toIndentedString(vip)).append("\n");
    sb.append("    vipMask: ").append(toIndentedString(vipMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
