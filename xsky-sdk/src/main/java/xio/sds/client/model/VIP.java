/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.VIPGroupNestview;
/**
 * VIP is a virtual IP provided access to resources. +X:model:generate;plur&#x3D;VIPs;with_detailed;order_by&#x3D;-ID;check_get +X:benchmark:
 */
@Schema(description = "VIP is a virtual IP provided access to resources. +X:model:generate;plur=VIPs;with_detailed;order_by=-ID;check_get +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class VIP {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("mac_address")
  private String macAddress = null;

  @SerializedName("mask")
  private Long mask = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("vip_group")
  private VIPGroupNestview vipGroup = null;

  @SerializedName("virtual_router_id")
  private Long virtualRouterId = null;

  public VIP actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public VIP create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public VIP id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public VIP ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public VIP macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @Schema(description = "")
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }

  public VIP mask(Long mask) {
    this.mask = mask;
    return this;
  }

   /**
   * Get mask
   * @return mask
  **/
  @Schema(description = "")
  public Long getMask() {
    return mask;
  }

  public void setMask(Long mask) {
    this.mask = mask;
  }

  public VIP status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public VIP update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public VIP vipGroup(VIPGroupNestview vipGroup) {
    this.vipGroup = vipGroup;
    return this;
  }

   /**
   * Get vipGroup
   * @return vipGroup
  **/
  @Schema(description = "")
  public VIPGroupNestview getVipGroup() {
    return vipGroup;
  }

  public void setVipGroup(VIPGroupNestview vipGroup) {
    this.vipGroup = vipGroup;
  }

  public VIP virtualRouterId(Long virtualRouterId) {
    this.virtualRouterId = virtualRouterId;
    return this;
  }

   /**
   * Get virtualRouterId
   * @return virtualRouterId
  **/
  @Schema(description = "")
  public Long getVirtualRouterId() {
    return virtualRouterId;
  }

  public void setVirtualRouterId(Long virtualRouterId) {
    this.virtualRouterId = virtualRouterId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VIP VIP = (VIP) o;
    return Objects.equals(this.actionStatus, VIP.actionStatus) &&
        Objects.equals(this.create, VIP.create) &&
        Objects.equals(this.id, VIP.id) &&
        Objects.equals(this.ip, VIP.ip) &&
        Objects.equals(this.macAddress, VIP.macAddress) &&
        Objects.equals(this.mask, VIP.mask) &&
        Objects.equals(this.status, VIP.status) &&
        Objects.equals(this.update, VIP.update) &&
        Objects.equals(this.vipGroup, VIP.vipGroup) &&
        Objects.equals(this.virtualRouterId, VIP.virtualRouterId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, create, id, ip, macAddress, mask, status, update, vipGroup, virtualRouterId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VIP {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    vipGroup: ").append(toIndentedString(vipGroup)).append("\n");
    sb.append("    virtualRouterId: ").append(toIndentedString(virtualRouterId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
