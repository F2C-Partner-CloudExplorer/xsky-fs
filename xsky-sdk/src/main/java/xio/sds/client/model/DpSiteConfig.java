/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.AsyncReplicationConfig;
import xio.sds.client.model.BlockReplicationConfig;
import xio.sds.client.model.SnapshotBackupConfig;
/**
 * DpSiteConfig contains config of different sites in dpg
 */
@Schema(description = "DpSiteConfig contains config of different sites in dpg")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DpSiteConfig {
  @SerializedName("block_async_replication")
  private AsyncReplicationConfig blockAsyncReplication = null;

  @SerializedName("block_snapshot_backup")
  private SnapshotBackupConfig blockSnapshotBackup = null;

  @SerializedName("block_volume_replication")
  private BlockReplicationConfig blockVolumeReplication = null;

  public DpSiteConfig blockAsyncReplication(AsyncReplicationConfig blockAsyncReplication) {
    this.blockAsyncReplication = blockAsyncReplication;
    return this;
  }

   /**
   * Get blockAsyncReplication
   * @return blockAsyncReplication
  **/
  @Schema(description = "")
  public AsyncReplicationConfig getBlockAsyncReplication() {
    return blockAsyncReplication;
  }

  public void setBlockAsyncReplication(AsyncReplicationConfig blockAsyncReplication) {
    this.blockAsyncReplication = blockAsyncReplication;
  }

  public DpSiteConfig blockSnapshotBackup(SnapshotBackupConfig blockSnapshotBackup) {
    this.blockSnapshotBackup = blockSnapshotBackup;
    return this;
  }

   /**
   * Get blockSnapshotBackup
   * @return blockSnapshotBackup
  **/
  @Schema(description = "")
  public SnapshotBackupConfig getBlockSnapshotBackup() {
    return blockSnapshotBackup;
  }

  public void setBlockSnapshotBackup(SnapshotBackupConfig blockSnapshotBackup) {
    this.blockSnapshotBackup = blockSnapshotBackup;
  }

  public DpSiteConfig blockVolumeReplication(BlockReplicationConfig blockVolumeReplication) {
    this.blockVolumeReplication = blockVolumeReplication;
    return this;
  }

   /**
   * Get blockVolumeReplication
   * @return blockVolumeReplication
  **/
  @Schema(description = "")
  public BlockReplicationConfig getBlockVolumeReplication() {
    return blockVolumeReplication;
  }

  public void setBlockVolumeReplication(BlockReplicationConfig blockVolumeReplication) {
    this.blockVolumeReplication = blockVolumeReplication;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DpSiteConfig dpSiteConfig = (DpSiteConfig) o;
    return Objects.equals(this.blockAsyncReplication, dpSiteConfig.blockAsyncReplication) &&
        Objects.equals(this.blockSnapshotBackup, dpSiteConfig.blockSnapshotBackup) &&
        Objects.equals(this.blockVolumeReplication, dpSiteConfig.blockVolumeReplication);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockAsyncReplication, blockSnapshotBackup, blockVolumeReplication);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DpSiteConfig {\n");
    
    sb.append("    blockAsyncReplication: ").append(toIndentedString(blockAsyncReplication)).append("\n");
    sb.append("    blockSnapshotBackup: ").append(toIndentedString(blockSnapshotBackup)).append("\n");
    sb.append("    blockVolumeReplication: ").append(toIndentedString(blockVolumeReplication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
