/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * S3LoadBalancerGroupCreateReqGroupLoadBalancersElt
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class S3LoadBalancerGroupCreateReqGroupLoadBalancersElt {
  @SerializedName("host_id")
  private Long hostId = null;

  @SerializedName("interface_name")
  private String interfaceName = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("vip")
  private String vip = null;

  public S3LoadBalancerGroupCreateReqGroupLoadBalancersElt hostId(Long hostId) {
    this.hostId = hostId;
    return this;
  }

   /**
   * host id of load balancer
   * @return hostId
  **/
  @Schema(required = true, description = "host id of load balancer")
  public Long getHostId() {
    return hostId;
  }

  public void setHostId(Long hostId) {
    this.hostId = hostId;
  }

  public S3LoadBalancerGroupCreateReqGroupLoadBalancersElt interfaceName(String interfaceName) {
    this.interfaceName = interfaceName;
    return this;
  }

   /**
   * vip will be bounded to interface, exclusive to ip
   * @return interfaceName
  **/
  @Schema(description = "vip will be bounded to interface, exclusive to ip")
  public String getInterfaceName() {
    return interfaceName;
  }

  public void setInterfaceName(String interfaceName) {
    this.interfaceName = interfaceName;
  }

  public S3LoadBalancerGroupCreateReqGroupLoadBalancersElt ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * vip will be bounded to interface of the gateway ip, exclusive to interface name
   * @return ip
  **/
  @Schema(description = "vip will be bounded to interface of the gateway ip, exclusive to interface name")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public S3LoadBalancerGroupCreateReqGroupLoadBalancersElt vip(String vip) {
    this.vip = vip;
    return this;
  }

   /**
   * vip of load balancer
   * @return vip
  **/
  @Schema(required = true, description = "vip of load balancer")
  public String getVip() {
    return vip;
  }

  public void setVip(String vip) {
    this.vip = vip;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    S3LoadBalancerGroupCreateReqGroupLoadBalancersElt s3LoadBalancerGroupCreateReqGroupLoadBalancersElt = (S3LoadBalancerGroupCreateReqGroupLoadBalancersElt) o;
    return Objects.equals(this.hostId, s3LoadBalancerGroupCreateReqGroupLoadBalancersElt.hostId) &&
        Objects.equals(this.interfaceName, s3LoadBalancerGroupCreateReqGroupLoadBalancersElt.interfaceName) &&
        Objects.equals(this.ip, s3LoadBalancerGroupCreateReqGroupLoadBalancersElt.ip) &&
        Objects.equals(this.vip, s3LoadBalancerGroupCreateReqGroupLoadBalancersElt.vip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hostId, interfaceName, ip, vip);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class S3LoadBalancerGroupCreateReqGroupLoadBalancersElt {\n");
    
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("    interfaceName: ").append(toIndentedString(interfaceName)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    vip: ").append(toIndentedString(vip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
