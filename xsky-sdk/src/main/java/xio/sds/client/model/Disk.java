/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.Host;
import xio.sds.client.model.Partition;
import xio.sds.client.model.SmartAttr;
/**
 * Disk contains information of a disk and it&#x27;s stats.
 */
@Schema(description = "Disk contains information of a disk and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class Disk {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("bytes")
  private Long bytes = null;

  @SerializedName("cache_create")
  private OffsetDateTime cacheCreate = null;

  @SerializedName("channel_id")
  private String channelId = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("controller_id")
  private String controllerId = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("device")
  private String device = null;

  @SerializedName("disk_type")
  private String diskType = null;

  @SerializedName("driver_type")
  private String driverType = null;

  @SerializedName("enclosure_id")
  private String enclosureId = null;

  @SerializedName("host")
  private Host host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("is_cache")
  private Boolean isCache = null;

  @SerializedName("is_root")
  private Boolean isRoot = null;

  @SerializedName("lighting_status")
  private String lightingStatus = null;

  @SerializedName("model")
  private String model = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("partition_num")
  private Long partitionNum = null;

  @SerializedName("partition_types")
  private List<String> partitionTypes = null;

  @SerializedName("partitions")
  private List<Partition> partitions = null;

  @SerializedName("power_safe")
  private Boolean powerSafe = null;

  @SerializedName("raid_status")
  private String raidStatus = null;

  @SerializedName("rotation_rate")
  private String rotationRate = null;

  @SerializedName("rotational")
  private Boolean rotational = null;

  @SerializedName("serial")
  private String serial = null;

  @SerializedName("slot_id")
  private String slotId = null;

  @SerializedName("smart_attrs")
  private List<SmartAttr> smartAttrs = null;

  @SerializedName("ssd_life_left")
  private Long ssdLifeLeft = null;

  @SerializedName("ssd_type")
  private String ssdType = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("usage")
  private String usage = null;

  @SerializedName("used")
  private Boolean used = null;

  @SerializedName("wwid")
  private String wwid = null;

  public Disk actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public Disk bytes(Long bytes) {
    this.bytes = bytes;
    return this;
  }

   /**
   * size of disk
   * @return bytes
  **/
  @Schema(description = "size of disk")
  public Long getBytes() {
    return bytes;
  }

  public void setBytes(Long bytes) {
    this.bytes = bytes;
  }

  public Disk cacheCreate(OffsetDateTime cacheCreate) {
    this.cacheCreate = cacheCreate;
    return this;
  }

   /**
   * Get cacheCreate
   * @return cacheCreate
  **/
  @Schema(description = "")
  public OffsetDateTime getCacheCreate() {
    return cacheCreate;
  }

  public void setCacheCreate(OffsetDateTime cacheCreate) {
    this.cacheCreate = cacheCreate;
  }

  public Disk channelId(String channelId) {
    this.channelId = channelId;
    return this;
  }

   /**
   * Get channelId
   * @return channelId
  **/
  @Schema(description = "")
  public String getChannelId() {
    return channelId;
  }

  public void setChannelId(String channelId) {
    this.channelId = channelId;
  }

  public Disk cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public Disk controllerId(String controllerId) {
    this.controllerId = controllerId;
    return this;
  }

   /**
   * Get controllerId
   * @return controllerId
  **/
  @Schema(description = "")
  public String getControllerId() {
    return controllerId;
  }

  public void setControllerId(String controllerId) {
    this.controllerId = controllerId;
  }

  public Disk create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public Disk device(String device) {
    this.device = device;
    return this;
  }

   /**
   * Get device
   * @return device
  **/
  @Schema(description = "")
  public String getDevice() {
    return device;
  }

  public void setDevice(String device) {
    this.device = device;
  }

  public Disk diskType(String diskType) {
    this.diskType = diskType;
    return this;
  }

   /**
   * Get diskType
   * @return diskType
  **/
  @Schema(description = "")
  public String getDiskType() {
    return diskType;
  }

  public void setDiskType(String diskType) {
    this.diskType = diskType;
  }

  public Disk driverType(String driverType) {
    this.driverType = driverType;
    return this;
  }

   /**
   * Get driverType
   * @return driverType
  **/
  @Schema(description = "")
  public String getDriverType() {
    return driverType;
  }

  public void setDriverType(String driverType) {
    this.driverType = driverType;
  }

  public Disk enclosureId(String enclosureId) {
    this.enclosureId = enclosureId;
    return this;
  }

   /**
   * Get enclosureId
   * @return enclosureId
  **/
  @Schema(description = "")
  public String getEnclosureId() {
    return enclosureId;
  }

  public void setEnclosureId(String enclosureId) {
    this.enclosureId = enclosureId;
  }

  public Disk host(Host host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public Host getHost() {
    return host;
  }

  public void setHost(Host host) {
    this.host = host;
  }

  public Disk id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Disk isCache(Boolean isCache) {
    this.isCache = isCache;
    return this;
  }

   /**
   * used as cache disk, deprecated
   * @return isCache
  **/
  @Schema(description = "used as cache disk, deprecated")
  public Boolean isIsCache() {
    return isCache;
  }

  public void setIsCache(Boolean isCache) {
    this.isCache = isCache;
  }

  public Disk isRoot(Boolean isRoot) {
    this.isRoot = isRoot;
    return this;
  }

   /**
   * used as root disk, deprecated
   * @return isRoot
  **/
  @Schema(description = "used as root disk, deprecated")
  public Boolean isIsRoot() {
    return isRoot;
  }

  public void setIsRoot(Boolean isRoot) {
    this.isRoot = isRoot;
  }

  public Disk lightingStatus(String lightingStatus) {
    this.lightingStatus = lightingStatus;
    return this;
  }

   /**
   * Get lightingStatus
   * @return lightingStatus
  **/
  @Schema(description = "")
  public String getLightingStatus() {
    return lightingStatus;
  }

  public void setLightingStatus(String lightingStatus) {
    this.lightingStatus = lightingStatus;
  }

  public Disk model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @Schema(description = "")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public Disk name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Disk partitionNum(Long partitionNum) {
    this.partitionNum = partitionNum;
    return this;
  }

   /**
   * Get partitionNum
   * @return partitionNum
  **/
  @Schema(description = "")
  public Long getPartitionNum() {
    return partitionNum;
  }

  public void setPartitionNum(Long partitionNum) {
    this.partitionNum = partitionNum;
  }

  public Disk partitionTypes(List<String> partitionTypes) {
    this.partitionTypes = partitionTypes;
    return this;
  }

  public Disk addPartitionTypesItem(String partitionTypesItem) {
    if (this.partitionTypes == null) {
      this.partitionTypes = new ArrayList<String>();
    }
    this.partitionTypes.add(partitionTypesItem);
    return this;
  }

   /**
   * Get partitionTypes
   * @return partitionTypes
  **/
  @Schema(description = "")
  public List<String> getPartitionTypes() {
    return partitionTypes;
  }

  public void setPartitionTypes(List<String> partitionTypes) {
    this.partitionTypes = partitionTypes;
  }

  public Disk partitions(List<Partition> partitions) {
    this.partitions = partitions;
    return this;
  }

  public Disk addPartitionsItem(Partition partitionsItem) {
    if (this.partitions == null) {
      this.partitions = new ArrayList<Partition>();
    }
    this.partitions.add(partitionsItem);
    return this;
  }

   /**
   * Get partitions
   * @return partitions
  **/
  @Schema(description = "")
  public List<Partition> getPartitions() {
    return partitions;
  }

  public void setPartitions(List<Partition> partitions) {
    this.partitions = partitions;
  }

  public Disk powerSafe(Boolean powerSafe) {
    this.powerSafe = powerSafe;
    return this;
  }

   /**
   * Get powerSafe
   * @return powerSafe
  **/
  @Schema(description = "")
  public Boolean isPowerSafe() {
    return powerSafe;
  }

  public void setPowerSafe(Boolean powerSafe) {
    this.powerSafe = powerSafe;
  }

  public Disk raidStatus(String raidStatus) {
    this.raidStatus = raidStatus;
    return this;
  }

   /**
   * Get raidStatus
   * @return raidStatus
  **/
  @Schema(description = "")
  public String getRaidStatus() {
    return raidStatus;
  }

  public void setRaidStatus(String raidStatus) {
    this.raidStatus = raidStatus;
  }

  public Disk rotationRate(String rotationRate) {
    this.rotationRate = rotationRate;
    return this;
  }

   /**
   * Get rotationRate
   * @return rotationRate
  **/
  @Schema(description = "")
  public String getRotationRate() {
    return rotationRate;
  }

  public void setRotationRate(String rotationRate) {
    this.rotationRate = rotationRate;
  }

  public Disk rotational(Boolean rotational) {
    this.rotational = rotational;
    return this;
  }

   /**
   * Get rotational
   * @return rotational
  **/
  @Schema(description = "")
  public Boolean isRotational() {
    return rotational;
  }

  public void setRotational(Boolean rotational) {
    this.rotational = rotational;
  }

  public Disk serial(String serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @Schema(description = "")
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }

  public Disk slotId(String slotId) {
    this.slotId = slotId;
    return this;
  }

   /**
   * Get slotId
   * @return slotId
  **/
  @Schema(description = "")
  public String getSlotId() {
    return slotId;
  }

  public void setSlotId(String slotId) {
    this.slotId = slotId;
  }

  public Disk smartAttrs(List<SmartAttr> smartAttrs) {
    this.smartAttrs = smartAttrs;
    return this;
  }

  public Disk addSmartAttrsItem(SmartAttr smartAttrsItem) {
    if (this.smartAttrs == null) {
      this.smartAttrs = new ArrayList<SmartAttr>();
    }
    this.smartAttrs.add(smartAttrsItem);
    return this;
  }

   /**
   * Get smartAttrs
   * @return smartAttrs
  **/
  @Schema(description = "")
  public List<SmartAttr> getSmartAttrs() {
    return smartAttrs;
  }

  public void setSmartAttrs(List<SmartAttr> smartAttrs) {
    this.smartAttrs = smartAttrs;
  }

  public Disk ssdLifeLeft(Long ssdLifeLeft) {
    this.ssdLifeLeft = ssdLifeLeft;
    return this;
  }

   /**
   * Get ssdLifeLeft
   * @return ssdLifeLeft
  **/
  @Schema(description = "")
  public Long getSsdLifeLeft() {
    return ssdLifeLeft;
  }

  public void setSsdLifeLeft(Long ssdLifeLeft) {
    this.ssdLifeLeft = ssdLifeLeft;
  }

  public Disk ssdType(String ssdType) {
    this.ssdType = ssdType;
    return this;
  }

   /**
   * Get ssdType
   * @return ssdType
  **/
  @Schema(description = "")
  public String getSsdType() {
    return ssdType;
  }

  public void setSsdType(String ssdType) {
    this.ssdType = ssdType;
  }

  public Disk status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Disk type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Disk update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public Disk usage(String usage) {
    this.usage = usage;
    return this;
  }

   /**
   * disk usage
   * @return usage
  **/
  @Schema(description = "disk usage")
  public String getUsage() {
    return usage;
  }

  public void setUsage(String usage) {
    this.usage = usage;
  }

  public Disk used(Boolean used) {
    this.used = used;
    return this;
  }

   /**
   * disk is used, deprecated
   * @return used
  **/
  @Schema(description = "disk is used, deprecated")
  public Boolean isUsed() {
    return used;
  }

  public void setUsed(Boolean used) {
    this.used = used;
  }

  public Disk wwid(String wwid) {
    this.wwid = wwid;
    return this;
  }

   /**
   * Get wwid
   * @return wwid
  **/
  @Schema(description = "")
  public String getWwid() {
    return wwid;
  }

  public void setWwid(String wwid) {
    this.wwid = wwid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Disk disk = (Disk) o;
    return Objects.equals(this.actionStatus, disk.actionStatus) &&
        Objects.equals(this.bytes, disk.bytes) &&
        Objects.equals(this.cacheCreate, disk.cacheCreate) &&
        Objects.equals(this.channelId, disk.channelId) &&
        Objects.equals(this.cluster, disk.cluster) &&
        Objects.equals(this.controllerId, disk.controllerId) &&
        Objects.equals(this.create, disk.create) &&
        Objects.equals(this.device, disk.device) &&
        Objects.equals(this.diskType, disk.diskType) &&
        Objects.equals(this.driverType, disk.driverType) &&
        Objects.equals(this.enclosureId, disk.enclosureId) &&
        Objects.equals(this.host, disk.host) &&
        Objects.equals(this.id, disk.id) &&
        Objects.equals(this.isCache, disk.isCache) &&
        Objects.equals(this.isRoot, disk.isRoot) &&
        Objects.equals(this.lightingStatus, disk.lightingStatus) &&
        Objects.equals(this.model, disk.model) &&
        Objects.equals(this.name, disk.name) &&
        Objects.equals(this.partitionNum, disk.partitionNum) &&
        Objects.equals(this.partitionTypes, disk.partitionTypes) &&
        Objects.equals(this.partitions, disk.partitions) &&
        Objects.equals(this.powerSafe, disk.powerSafe) &&
        Objects.equals(this.raidStatus, disk.raidStatus) &&
        Objects.equals(this.rotationRate, disk.rotationRate) &&
        Objects.equals(this.rotational, disk.rotational) &&
        Objects.equals(this.serial, disk.serial) &&
        Objects.equals(this.slotId, disk.slotId) &&
        Objects.equals(this.smartAttrs, disk.smartAttrs) &&
        Objects.equals(this.ssdLifeLeft, disk.ssdLifeLeft) &&
        Objects.equals(this.ssdType, disk.ssdType) &&
        Objects.equals(this.status, disk.status) &&
        Objects.equals(this.type, disk.type) &&
        Objects.equals(this.update, disk.update) &&
        Objects.equals(this.usage, disk.usage) &&
        Objects.equals(this.used, disk.used) &&
        Objects.equals(this.wwid, disk.wwid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, bytes, cacheCreate, channelId, cluster, controllerId, create, device, diskType, driverType, enclosureId, host, id, isCache, isRoot, lightingStatus, model, name, partitionNum, partitionTypes, partitions, powerSafe, raidStatus, rotationRate, rotational, serial, slotId, smartAttrs, ssdLifeLeft, ssdType, status, type, update, usage, used, wwid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Disk {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    bytes: ").append(toIndentedString(bytes)).append("\n");
    sb.append("    cacheCreate: ").append(toIndentedString(cacheCreate)).append("\n");
    sb.append("    channelId: ").append(toIndentedString(channelId)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    controllerId: ").append(toIndentedString(controllerId)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    device: ").append(toIndentedString(device)).append("\n");
    sb.append("    diskType: ").append(toIndentedString(diskType)).append("\n");
    sb.append("    driverType: ").append(toIndentedString(driverType)).append("\n");
    sb.append("    enclosureId: ").append(toIndentedString(enclosureId)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isCache: ").append(toIndentedString(isCache)).append("\n");
    sb.append("    isRoot: ").append(toIndentedString(isRoot)).append("\n");
    sb.append("    lightingStatus: ").append(toIndentedString(lightingStatus)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partitionNum: ").append(toIndentedString(partitionNum)).append("\n");
    sb.append("    partitionTypes: ").append(toIndentedString(partitionTypes)).append("\n");
    sb.append("    partitions: ").append(toIndentedString(partitions)).append("\n");
    sb.append("    powerSafe: ").append(toIndentedString(powerSafe)).append("\n");
    sb.append("    raidStatus: ").append(toIndentedString(raidStatus)).append("\n");
    sb.append("    rotationRate: ").append(toIndentedString(rotationRate)).append("\n");
    sb.append("    rotational: ").append(toIndentedString(rotational)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    slotId: ").append(toIndentedString(slotId)).append("\n");
    sb.append("    smartAttrs: ").append(toIndentedString(smartAttrs)).append("\n");
    sb.append("    ssdLifeLeft: ").append(toIndentedString(ssdLifeLeft)).append("\n");
    sb.append("    ssdType: ").append(toIndentedString(ssdType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    used: ").append(toIndentedString(used)).append("\n");
    sb.append("    wwid: ").append(toIndentedString(wwid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
