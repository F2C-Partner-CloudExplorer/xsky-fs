/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsPathNestview;
import xio.sds.client.model.DfsRootfsNestview;
import xio.sds.client.model.DomainUserGroupNestview;
import xio.sds.client.model.DomainUserNestview;
import xio.sds.client.model.FSUserGroupNestview;
import xio.sds.client.model.FSUserNestview;
/**
 * DfsQuota contains information of a dfs quota and it&#x27;s stats.
 */
@Schema(description = "DfsQuota contains information of a dfs quota and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsQuota {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("dfs_path")
  private DfsPathNestview dfsPath = null;

  @SerializedName("dfs_rootfs")
  private DfsRootfsNestview dfsRootfs = null;

  @SerializedName("domain_user")
  private DomainUserNestview domainUser = null;

  @SerializedName("domain_user_group")
  private DomainUserGroupNestview domainUserGroup = null;

  @SerializedName("files_exceed_time")
  private OffsetDateTime filesExceedTime = null;

  @SerializedName("files_grace_time")
  private Long filesGraceTime = null;

  @SerializedName("files_hard_quota")
  private Long filesHardQuota = null;

  @SerializedName("files_ratio")
  private Float filesRatio = null;

  @SerializedName("files_soft_quota")
  private Long filesSoftQuota = null;

  @SerializedName("files_suggest_quota")
  private Long filesSuggestQuota = null;

  @SerializedName("fs_user")
  private FSUserNestview fsUser = null;

  @SerializedName("fs_user_group")
  private FSUserGroupNestview fsUserGroup = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("inode")
  private Long inode = null;

  @SerializedName("shared")
  private Boolean shared = null;

  @SerializedName("size_exceed_time")
  private OffsetDateTime sizeExceedTime = null;

  @SerializedName("size_grace_time")
  private Long sizeGraceTime = null;

  @SerializedName("size_hard_quota")
  private Long sizeHardQuota = null;

  @SerializedName("size_ratio")
  private Float sizeRatio = null;

  @SerializedName("size_soft_quota")
  private Long sizeSoftQuota = null;

  @SerializedName("size_suggest_quota")
  private Long sizeSuggestQuota = null;

  @SerializedName("source_type")
  private String sourceType = null;

  @SerializedName("source_uuid")
  private String sourceUuid = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DfsQuota actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsQuota cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsQuota create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsQuota dfsPath(DfsPathNestview dfsPath) {
    this.dfsPath = dfsPath;
    return this;
  }

   /**
   * Get dfsPath
   * @return dfsPath
  **/
  @Schema(description = "")
  public DfsPathNestview getDfsPath() {
    return dfsPath;
  }

  public void setDfsPath(DfsPathNestview dfsPath) {
    this.dfsPath = dfsPath;
  }

  public DfsQuota dfsRootfs(DfsRootfsNestview dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
    return this;
  }

   /**
   * Get dfsRootfs
   * @return dfsRootfs
  **/
  @Schema(description = "")
  public DfsRootfsNestview getDfsRootfs() {
    return dfsRootfs;
  }

  public void setDfsRootfs(DfsRootfsNestview dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
  }

  public DfsQuota domainUser(DomainUserNestview domainUser) {
    this.domainUser = domainUser;
    return this;
  }

   /**
   * Get domainUser
   * @return domainUser
  **/
  @Schema(description = "")
  public DomainUserNestview getDomainUser() {
    return domainUser;
  }

  public void setDomainUser(DomainUserNestview domainUser) {
    this.domainUser = domainUser;
  }

  public DfsQuota domainUserGroup(DomainUserGroupNestview domainUserGroup) {
    this.domainUserGroup = domainUserGroup;
    return this;
  }

   /**
   * Get domainUserGroup
   * @return domainUserGroup
  **/
  @Schema(description = "")
  public DomainUserGroupNestview getDomainUserGroup() {
    return domainUserGroup;
  }

  public void setDomainUserGroup(DomainUserGroupNestview domainUserGroup) {
    this.domainUserGroup = domainUserGroup;
  }

  public DfsQuota filesExceedTime(OffsetDateTime filesExceedTime) {
    this.filesExceedTime = filesExceedTime;
    return this;
  }

   /**
   * Get filesExceedTime
   * @return filesExceedTime
  **/
  @Schema(description = "")
  public OffsetDateTime getFilesExceedTime() {
    return filesExceedTime;
  }

  public void setFilesExceedTime(OffsetDateTime filesExceedTime) {
    this.filesExceedTime = filesExceedTime;
  }

  public DfsQuota filesGraceTime(Long filesGraceTime) {
    this.filesGraceTime = filesGraceTime;
    return this;
  }

   /**
   * Get filesGraceTime
   * @return filesGraceTime
  **/
  @Schema(description = "")
  public Long getFilesGraceTime() {
    return filesGraceTime;
  }

  public void setFilesGraceTime(Long filesGraceTime) {
    this.filesGraceTime = filesGraceTime;
  }

  public DfsQuota filesHardQuota(Long filesHardQuota) {
    this.filesHardQuota = filesHardQuota;
    return this;
  }

   /**
   * Get filesHardQuota
   * @return filesHardQuota
  **/
  @Schema(description = "")
  public Long getFilesHardQuota() {
    return filesHardQuota;
  }

  public void setFilesHardQuota(Long filesHardQuota) {
    this.filesHardQuota = filesHardQuota;
  }

  public DfsQuota filesRatio(Float filesRatio) {
    this.filesRatio = filesRatio;
    return this;
  }

   /**
   * Get filesRatio
   * @return filesRatio
  **/
  @Schema(description = "")
  public Float getFilesRatio() {
    return filesRatio;
  }

  public void setFilesRatio(Float filesRatio) {
    this.filesRatio = filesRatio;
  }

  public DfsQuota filesSoftQuota(Long filesSoftQuota) {
    this.filesSoftQuota = filesSoftQuota;
    return this;
  }

   /**
   * Get filesSoftQuota
   * @return filesSoftQuota
  **/
  @Schema(description = "")
  public Long getFilesSoftQuota() {
    return filesSoftQuota;
  }

  public void setFilesSoftQuota(Long filesSoftQuota) {
    this.filesSoftQuota = filesSoftQuota;
  }

  public DfsQuota filesSuggestQuota(Long filesSuggestQuota) {
    this.filesSuggestQuota = filesSuggestQuota;
    return this;
  }

   /**
   * Get filesSuggestQuota
   * @return filesSuggestQuota
  **/
  @Schema(description = "")
  public Long getFilesSuggestQuota() {
    return filesSuggestQuota;
  }

  public void setFilesSuggestQuota(Long filesSuggestQuota) {
    this.filesSuggestQuota = filesSuggestQuota;
  }

  public DfsQuota fsUser(FSUserNestview fsUser) {
    this.fsUser = fsUser;
    return this;
  }

   /**
   * Get fsUser
   * @return fsUser
  **/
  @Schema(description = "")
  public FSUserNestview getFsUser() {
    return fsUser;
  }

  public void setFsUser(FSUserNestview fsUser) {
    this.fsUser = fsUser;
  }

  public DfsQuota fsUserGroup(FSUserGroupNestview fsUserGroup) {
    this.fsUserGroup = fsUserGroup;
    return this;
  }

   /**
   * Get fsUserGroup
   * @return fsUserGroup
  **/
  @Schema(description = "")
  public FSUserGroupNestview getFsUserGroup() {
    return fsUserGroup;
  }

  public void setFsUserGroup(FSUserGroupNestview fsUserGroup) {
    this.fsUserGroup = fsUserGroup;
  }

  public DfsQuota id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsQuota inode(Long inode) {
    this.inode = inode;
    return this;
  }

   /**
   * Get inode
   * @return inode
  **/
  @Schema(description = "")
  public Long getInode() {
    return inode;
  }

  public void setInode(Long inode) {
    this.inode = inode;
  }

  public DfsQuota shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Get shared
   * @return shared
  **/
  @Schema(description = "")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }

  public DfsQuota sizeExceedTime(OffsetDateTime sizeExceedTime) {
    this.sizeExceedTime = sizeExceedTime;
    return this;
  }

   /**
   * Get sizeExceedTime
   * @return sizeExceedTime
  **/
  @Schema(description = "")
  public OffsetDateTime getSizeExceedTime() {
    return sizeExceedTime;
  }

  public void setSizeExceedTime(OffsetDateTime sizeExceedTime) {
    this.sizeExceedTime = sizeExceedTime;
  }

  public DfsQuota sizeGraceTime(Long sizeGraceTime) {
    this.sizeGraceTime = sizeGraceTime;
    return this;
  }

   /**
   * Get sizeGraceTime
   * @return sizeGraceTime
  **/
  @Schema(description = "")
  public Long getSizeGraceTime() {
    return sizeGraceTime;
  }

  public void setSizeGraceTime(Long sizeGraceTime) {
    this.sizeGraceTime = sizeGraceTime;
  }

  public DfsQuota sizeHardQuota(Long sizeHardQuota) {
    this.sizeHardQuota = sizeHardQuota;
    return this;
  }

   /**
   * Get sizeHardQuota
   * @return sizeHardQuota
  **/
  @Schema(description = "")
  public Long getSizeHardQuota() {
    return sizeHardQuota;
  }

  public void setSizeHardQuota(Long sizeHardQuota) {
    this.sizeHardQuota = sizeHardQuota;
  }

  public DfsQuota sizeRatio(Float sizeRatio) {
    this.sizeRatio = sizeRatio;
    return this;
  }

   /**
   * Get sizeRatio
   * @return sizeRatio
  **/
  @Schema(description = "")
  public Float getSizeRatio() {
    return sizeRatio;
  }

  public void setSizeRatio(Float sizeRatio) {
    this.sizeRatio = sizeRatio;
  }

  public DfsQuota sizeSoftQuota(Long sizeSoftQuota) {
    this.sizeSoftQuota = sizeSoftQuota;
    return this;
  }

   /**
   * Get sizeSoftQuota
   * @return sizeSoftQuota
  **/
  @Schema(description = "")
  public Long getSizeSoftQuota() {
    return sizeSoftQuota;
  }

  public void setSizeSoftQuota(Long sizeSoftQuota) {
    this.sizeSoftQuota = sizeSoftQuota;
  }

  public DfsQuota sizeSuggestQuota(Long sizeSuggestQuota) {
    this.sizeSuggestQuota = sizeSuggestQuota;
    return this;
  }

   /**
   * Get sizeSuggestQuota
   * @return sizeSuggestQuota
  **/
  @Schema(description = "")
  public Long getSizeSuggestQuota() {
    return sizeSuggestQuota;
  }

  public void setSizeSuggestQuota(Long sizeSuggestQuota) {
    this.sizeSuggestQuota = sizeSuggestQuota;
  }

  public DfsQuota sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public DfsQuota sourceUuid(String sourceUuid) {
    this.sourceUuid = sourceUuid;
    return this;
  }

   /**
   * Get sourceUuid
   * @return sourceUuid
  **/
  @Schema(description = "")
  public String getSourceUuid() {
    return sourceUuid;
  }

  public void setSourceUuid(String sourceUuid) {
    this.sourceUuid = sourceUuid;
  }

  public DfsQuota status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsQuota type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DfsQuota update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsQuota dfsQuota = (DfsQuota) o;
    return Objects.equals(this.actionStatus, dfsQuota.actionStatus) &&
        Objects.equals(this.cluster, dfsQuota.cluster) &&
        Objects.equals(this.create, dfsQuota.create) &&
        Objects.equals(this.dfsPath, dfsQuota.dfsPath) &&
        Objects.equals(this.dfsRootfs, dfsQuota.dfsRootfs) &&
        Objects.equals(this.domainUser, dfsQuota.domainUser) &&
        Objects.equals(this.domainUserGroup, dfsQuota.domainUserGroup) &&
        Objects.equals(this.filesExceedTime, dfsQuota.filesExceedTime) &&
        Objects.equals(this.filesGraceTime, dfsQuota.filesGraceTime) &&
        Objects.equals(this.filesHardQuota, dfsQuota.filesHardQuota) &&
        Objects.equals(this.filesRatio, dfsQuota.filesRatio) &&
        Objects.equals(this.filesSoftQuota, dfsQuota.filesSoftQuota) &&
        Objects.equals(this.filesSuggestQuota, dfsQuota.filesSuggestQuota) &&
        Objects.equals(this.fsUser, dfsQuota.fsUser) &&
        Objects.equals(this.fsUserGroup, dfsQuota.fsUserGroup) &&
        Objects.equals(this.id, dfsQuota.id) &&
        Objects.equals(this.inode, dfsQuota.inode) &&
        Objects.equals(this.shared, dfsQuota.shared) &&
        Objects.equals(this.sizeExceedTime, dfsQuota.sizeExceedTime) &&
        Objects.equals(this.sizeGraceTime, dfsQuota.sizeGraceTime) &&
        Objects.equals(this.sizeHardQuota, dfsQuota.sizeHardQuota) &&
        Objects.equals(this.sizeRatio, dfsQuota.sizeRatio) &&
        Objects.equals(this.sizeSoftQuota, dfsQuota.sizeSoftQuota) &&
        Objects.equals(this.sizeSuggestQuota, dfsQuota.sizeSuggestQuota) &&
        Objects.equals(this.sourceType, dfsQuota.sourceType) &&
        Objects.equals(this.sourceUuid, dfsQuota.sourceUuid) &&
        Objects.equals(this.status, dfsQuota.status) &&
        Objects.equals(this.type, dfsQuota.type) &&
        Objects.equals(this.update, dfsQuota.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, dfsPath, dfsRootfs, domainUser, domainUserGroup, filesExceedTime, filesGraceTime, filesHardQuota, filesRatio, filesSoftQuota, filesSuggestQuota, fsUser, fsUserGroup, id, inode, shared, sizeExceedTime, sizeGraceTime, sizeHardQuota, sizeRatio, sizeSoftQuota, sizeSuggestQuota, sourceType, sourceUuid, status, type, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsQuota {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    dfsPath: ").append(toIndentedString(dfsPath)).append("\n");
    sb.append("    dfsRootfs: ").append(toIndentedString(dfsRootfs)).append("\n");
    sb.append("    domainUser: ").append(toIndentedString(domainUser)).append("\n");
    sb.append("    domainUserGroup: ").append(toIndentedString(domainUserGroup)).append("\n");
    sb.append("    filesExceedTime: ").append(toIndentedString(filesExceedTime)).append("\n");
    sb.append("    filesGraceTime: ").append(toIndentedString(filesGraceTime)).append("\n");
    sb.append("    filesHardQuota: ").append(toIndentedString(filesHardQuota)).append("\n");
    sb.append("    filesRatio: ").append(toIndentedString(filesRatio)).append("\n");
    sb.append("    filesSoftQuota: ").append(toIndentedString(filesSoftQuota)).append("\n");
    sb.append("    filesSuggestQuota: ").append(toIndentedString(filesSuggestQuota)).append("\n");
    sb.append("    fsUser: ").append(toIndentedString(fsUser)).append("\n");
    sb.append("    fsUserGroup: ").append(toIndentedString(fsUserGroup)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inode: ").append(toIndentedString(inode)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    sizeExceedTime: ").append(toIndentedString(sizeExceedTime)).append("\n");
    sb.append("    sizeGraceTime: ").append(toIndentedString(sizeGraceTime)).append("\n");
    sb.append("    sizeHardQuota: ").append(toIndentedString(sizeHardQuota)).append("\n");
    sb.append("    sizeRatio: ").append(toIndentedString(sizeRatio)).append("\n");
    sb.append("    sizeSoftQuota: ").append(toIndentedString(sizeSoftQuota)).append("\n");
    sb.append("    sizeSuggestQuota: ").append(toIndentedString(sizeSuggestQuota)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    sourceUuid: ").append(toIndentedString(sourceUuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
