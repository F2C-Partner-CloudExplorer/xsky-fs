/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.PoolNestview;
/**
 * ObjectStoragePolicy is the model of object_storage_policy +X:model:generate;plur&#x3D;ObjectStoragePolicies;with_detailed;etcd_lock; +X:benchmark:
 */
@Schema(description = "ObjectStoragePolicy is the model of object_storage_policy +X:model:generate;plur=ObjectStoragePolicies;with_detailed;etcd_lock; +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class ObjectStoragePolicy {
  @SerializedName("bucket_num")
  private Long bucketNum = null;

  @SerializedName("cache_pool")
  private PoolNestview cachePool = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("compress")
  private Boolean compress = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("crypto")
  private Boolean crypto = null;

  @SerializedName("deduplication")
  private Boolean deduplication = null;

  @SerializedName("default")
  private Boolean _default = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("index_pool")
  private PoolNestview indexPool = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("object_size_threshold")
  private Long objectSizeThreshold = null;

  @SerializedName("policy_name")
  private String policyName = null;

  @SerializedName("shared")
  private Boolean shared = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public ObjectStoragePolicy bucketNum(Long bucketNum) {
    this.bucketNum = bucketNum;
    return this;
  }

   /**
   * Get bucketNum
   * @return bucketNum
  **/
  @Schema(description = "")
  public Long getBucketNum() {
    return bucketNum;
  }

  public void setBucketNum(Long bucketNum) {
    this.bucketNum = bucketNum;
  }

  public ObjectStoragePolicy cachePool(PoolNestview cachePool) {
    this.cachePool = cachePool;
    return this;
  }

   /**
   * Get cachePool
   * @return cachePool
  **/
  @Schema(description = "")
  public PoolNestview getCachePool() {
    return cachePool;
  }

  public void setCachePool(PoolNestview cachePool) {
    this.cachePool = cachePool;
  }

  public ObjectStoragePolicy cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public ObjectStoragePolicy compress(Boolean compress) {
    this.compress = compress;
    return this;
  }

   /**
   * Get compress
   * @return compress
  **/
  @Schema(description = "")
  public Boolean isCompress() {
    return compress;
  }

  public void setCompress(Boolean compress) {
    this.compress = compress;
  }

  public ObjectStoragePolicy create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public ObjectStoragePolicy crypto(Boolean crypto) {
    this.crypto = crypto;
    return this;
  }

   /**
   * Get crypto
   * @return crypto
  **/
  @Schema(description = "")
  public Boolean isCrypto() {
    return crypto;
  }

  public void setCrypto(Boolean crypto) {
    this.crypto = crypto;
  }

  public ObjectStoragePolicy deduplication(Boolean deduplication) {
    this.deduplication = deduplication;
    return this;
  }

   /**
   * Get deduplication
   * @return deduplication
  **/
  @Schema(description = "")
  public Boolean isDeduplication() {
    return deduplication;
  }

  public void setDeduplication(Boolean deduplication) {
    this.deduplication = deduplication;
  }

  public ObjectStoragePolicy _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @Schema(description = "")
  public Boolean isDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }

  public ObjectStoragePolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ObjectStoragePolicy id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ObjectStoragePolicy indexPool(PoolNestview indexPool) {
    this.indexPool = indexPool;
    return this;
  }

   /**
   * Get indexPool
   * @return indexPool
  **/
  @Schema(description = "")
  public PoolNestview getIndexPool() {
    return indexPool;
  }

  public void setIndexPool(PoolNestview indexPool) {
    this.indexPool = indexPool;
  }

  public ObjectStoragePolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ObjectStoragePolicy objectSizeThreshold(Long objectSizeThreshold) {
    this.objectSizeThreshold = objectSizeThreshold;
    return this;
  }

   /**
   * Get objectSizeThreshold
   * @return objectSizeThreshold
  **/
  @Schema(description = "")
  public Long getObjectSizeThreshold() {
    return objectSizeThreshold;
  }

  public void setObjectSizeThreshold(Long objectSizeThreshold) {
    this.objectSizeThreshold = objectSizeThreshold;
  }

  public ObjectStoragePolicy policyName(String policyName) {
    this.policyName = policyName;
    return this;
  }

   /**
   * Get policyName
   * @return policyName
  **/
  @Schema(description = "")
  public String getPolicyName() {
    return policyName;
  }

  public void setPolicyName(String policyName) {
    this.policyName = policyName;
  }

  public ObjectStoragePolicy shared(Boolean shared) {
    this.shared = shared;
    return this;
  }

   /**
   * Get shared
   * @return shared
  **/
  @Schema(description = "")
  public Boolean isShared() {
    return shared;
  }

  public void setShared(Boolean shared) {
    this.shared = shared;
  }

  public ObjectStoragePolicy status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ObjectStoragePolicy update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectStoragePolicy objectStoragePolicy = (ObjectStoragePolicy) o;
    return Objects.equals(this.bucketNum, objectStoragePolicy.bucketNum) &&
        Objects.equals(this.cachePool, objectStoragePolicy.cachePool) &&
        Objects.equals(this.cluster, objectStoragePolicy.cluster) &&
        Objects.equals(this.compress, objectStoragePolicy.compress) &&
        Objects.equals(this.create, objectStoragePolicy.create) &&
        Objects.equals(this.crypto, objectStoragePolicy.crypto) &&
        Objects.equals(this.deduplication, objectStoragePolicy.deduplication) &&
        Objects.equals(this._default, objectStoragePolicy._default) &&
        Objects.equals(this.description, objectStoragePolicy.description) &&
        Objects.equals(this.id, objectStoragePolicy.id) &&
        Objects.equals(this.indexPool, objectStoragePolicy.indexPool) &&
        Objects.equals(this.name, objectStoragePolicy.name) &&
        Objects.equals(this.objectSizeThreshold, objectStoragePolicy.objectSizeThreshold) &&
        Objects.equals(this.policyName, objectStoragePolicy.policyName) &&
        Objects.equals(this.shared, objectStoragePolicy.shared) &&
        Objects.equals(this.status, objectStoragePolicy.status) &&
        Objects.equals(this.update, objectStoragePolicy.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketNum, cachePool, cluster, compress, create, crypto, deduplication, _default, description, id, indexPool, name, objectSizeThreshold, policyName, shared, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectStoragePolicy {\n");
    
    sb.append("    bucketNum: ").append(toIndentedString(bucketNum)).append("\n");
    sb.append("    cachePool: ").append(toIndentedString(cachePool)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    compress: ").append(toIndentedString(compress)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    crypto: ").append(toIndentedString(crypto)).append("\n");
    sb.append("    deduplication: ").append(toIndentedString(deduplication)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    indexPool: ").append(toIndentedString(indexPool)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    objectSizeThreshold: ").append(toIndentedString(objectSizeThreshold)).append("\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("    shared: ").append(toIndentedString(shared)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
