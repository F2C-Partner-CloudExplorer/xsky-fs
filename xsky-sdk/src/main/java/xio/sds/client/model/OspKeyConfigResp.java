/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.OspKeyConfig;
/**
 * OspKeyConfigResp
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspKeyConfigResp {
  @SerializedName("access_key_config")
  private OspKeyConfig accessKeyConfig = null;

  @SerializedName("secret_key_config")
  private OspKeyConfig secretKeyConfig = null;

  @SerializedName("create")
  private String create = null;

  @SerializedName("update")
  private String update = null;

  public OspKeyConfigResp accessKeyConfig(OspKeyConfig accessKeyConfig) {
    this.accessKeyConfig = accessKeyConfig;
    return this;
  }

   /**
   * Get accessKeyConfig
   * @return accessKeyConfig
  **/
  @Schema(description = "")
  public OspKeyConfig getAccessKeyConfig() {
    return accessKeyConfig;
  }

  public void setAccessKeyConfig(OspKeyConfig accessKeyConfig) {
    this.accessKeyConfig = accessKeyConfig;
  }

  public OspKeyConfigResp secretKeyConfig(OspKeyConfig secretKeyConfig) {
    this.secretKeyConfig = secretKeyConfig;
    return this;
  }

   /**
   * Get secretKeyConfig
   * @return secretKeyConfig
  **/
  @Schema(description = "")
  public OspKeyConfig getSecretKeyConfig() {
    return secretKeyConfig;
  }

  public void setSecretKeyConfig(OspKeyConfig secretKeyConfig) {
    this.secretKeyConfig = secretKeyConfig;
  }

  public OspKeyConfigResp create(String create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public String getCreate() {
    return create;
  }

  public void setCreate(String create) {
    this.create = create;
  }

  public OspKeyConfigResp update(String update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public String getUpdate() {
    return update;
  }

  public void setUpdate(String update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspKeyConfigResp ospKeyConfigResp = (OspKeyConfigResp) o;
    return Objects.equals(this.accessKeyConfig, ospKeyConfigResp.accessKeyConfig) &&
        Objects.equals(this.secretKeyConfig, ospKeyConfigResp.secretKeyConfig) &&
        Objects.equals(this.create, ospKeyConfigResp.create) &&
        Objects.equals(this.update, ospKeyConfigResp.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKeyConfig, secretKeyConfig, create, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspKeyConfigResp {\n");
    
    sb.append("    accessKeyConfig: ").append(toIndentedString(accessKeyConfig)).append("\n");
    sb.append("    secretKeyConfig: ").append(toIndentedString(secretKeyConfig)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
