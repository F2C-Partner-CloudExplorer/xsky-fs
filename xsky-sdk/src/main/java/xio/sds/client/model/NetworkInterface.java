/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.Cluster;
import xio.sds.client.model.HostNestview;
import xio.sds.client.model.NetworkInterfaceNestview;
/**
 * NetworkInterface contains information of a network interface and it&#x27;s stats.
 */
@Schema(description = "NetworkInterface contains information of a network interface and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class NetworkInterface {
  @SerializedName("bonding_mode")
  private String bondingMode = null;

  @SerializedName("cluster")
  private Cluster cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("link_detected")
  private Boolean linkDetected = null;

  @SerializedName("mac_address")
  private String macAddress = null;

  @SerializedName("master_network_interface")
  private NetworkInterfaceNestview masterNetworkInterface = null;

  @SerializedName("megabits")
  private Long megabits = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("operstate")
  private String operstate = null;

  @SerializedName("osp_cluster")
  private Cluster ospCluster = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("vf_num")
  private Long vfNum = null;

  public NetworkInterface bondingMode(String bondingMode) {
    this.bondingMode = bondingMode;
    return this;
  }

   /**
   * Get bondingMode
   * @return bondingMode
  **/
  @Schema(description = "")
  public String getBondingMode() {
    return bondingMode;
  }

  public void setBondingMode(String bondingMode) {
    this.bondingMode = bondingMode;
  }

  public NetworkInterface cluster(Cluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public Cluster getCluster() {
    return cluster;
  }

  public void setCluster(Cluster cluster) {
    this.cluster = cluster;
  }

  public NetworkInterface create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public NetworkInterface host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public NetworkInterface id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public NetworkInterface linkDetected(Boolean linkDetected) {
    this.linkDetected = linkDetected;
    return this;
  }

   /**
   * Get linkDetected
   * @return linkDetected
  **/
  @Schema(description = "")
  public Boolean isLinkDetected() {
    return linkDetected;
  }

  public void setLinkDetected(Boolean linkDetected) {
    this.linkDetected = linkDetected;
  }

  public NetworkInterface macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @Schema(description = "")
  public String getMacAddress() {
    return macAddress;
  }

  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }

  public NetworkInterface masterNetworkInterface(NetworkInterfaceNestview masterNetworkInterface) {
    this.masterNetworkInterface = masterNetworkInterface;
    return this;
  }

   /**
   * Get masterNetworkInterface
   * @return masterNetworkInterface
  **/
  @Schema(description = "")
  public NetworkInterfaceNestview getMasterNetworkInterface() {
    return masterNetworkInterface;
  }

  public void setMasterNetworkInterface(NetworkInterfaceNestview masterNetworkInterface) {
    this.masterNetworkInterface = masterNetworkInterface;
  }

  public NetworkInterface megabits(Long megabits) {
    this.megabits = megabits;
    return this;
  }

   /**
   * Get megabits
   * @return megabits
  **/
  @Schema(description = "")
  public Long getMegabits() {
    return megabits;
  }

  public void setMegabits(Long megabits) {
    this.megabits = megabits;
  }

  public NetworkInterface name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NetworkInterface operstate(String operstate) {
    this.operstate = operstate;
    return this;
  }

   /**
   * Get operstate
   * @return operstate
  **/
  @Schema(description = "")
  public String getOperstate() {
    return operstate;
  }

  public void setOperstate(String operstate) {
    this.operstate = operstate;
  }

  public NetworkInterface ospCluster(Cluster ospCluster) {
    this.ospCluster = ospCluster;
    return this;
  }

   /**
   * Get ospCluster
   * @return ospCluster
  **/
  @Schema(description = "")
  public Cluster getOspCluster() {
    return ospCluster;
  }

  public void setOspCluster(Cluster ospCluster) {
    this.ospCluster = ospCluster;
  }

  public NetworkInterface type(String type) {
    this.type = type;
    return this;
  }

   /**
   * ethernet or bond
   * @return type
  **/
  @Schema(description = "ethernet or bond")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public NetworkInterface update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public NetworkInterface vfNum(Long vfNum) {
    this.vfNum = vfNum;
    return this;
  }

   /**
   * Get vfNum
   * @return vfNum
  **/
  @Schema(description = "")
  public Long getVfNum() {
    return vfNum;
  }

  public void setVfNum(Long vfNum) {
    this.vfNum = vfNum;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkInterface networkInterface = (NetworkInterface) o;
    return Objects.equals(this.bondingMode, networkInterface.bondingMode) &&
        Objects.equals(this.cluster, networkInterface.cluster) &&
        Objects.equals(this.create, networkInterface.create) &&
        Objects.equals(this.host, networkInterface.host) &&
        Objects.equals(this.id, networkInterface.id) &&
        Objects.equals(this.linkDetected, networkInterface.linkDetected) &&
        Objects.equals(this.macAddress, networkInterface.macAddress) &&
        Objects.equals(this.masterNetworkInterface, networkInterface.masterNetworkInterface) &&
        Objects.equals(this.megabits, networkInterface.megabits) &&
        Objects.equals(this.name, networkInterface.name) &&
        Objects.equals(this.operstate, networkInterface.operstate) &&
        Objects.equals(this.ospCluster, networkInterface.ospCluster) &&
        Objects.equals(this.type, networkInterface.type) &&
        Objects.equals(this.update, networkInterface.update) &&
        Objects.equals(this.vfNum, networkInterface.vfNum);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bondingMode, cluster, create, host, id, linkDetected, macAddress, masterNetworkInterface, megabits, name, operstate, ospCluster, type, update, vfNum);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkInterface {\n");
    
    sb.append("    bondingMode: ").append(toIndentedString(bondingMode)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    linkDetected: ").append(toIndentedString(linkDetected)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    masterNetworkInterface: ").append(toIndentedString(masterNetworkInterface)).append("\n");
    sb.append("    megabits: ").append(toIndentedString(megabits)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    operstate: ").append(toIndentedString(operstate)).append("\n");
    sb.append("    ospCluster: ").append(toIndentedString(ospCluster)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    vfNum: ").append(toIndentedString(vfNum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
