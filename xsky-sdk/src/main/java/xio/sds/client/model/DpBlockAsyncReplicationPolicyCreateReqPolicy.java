/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * DpBlockAsyncReplicationPolicyCreateReqPolicy
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DpBlockAsyncReplicationPolicyCreateReqPolicy {
  @SerializedName("cron_expr")
  private String cronExpr = null;

  @SerializedName("dp_gateway_id")
  private Long dpGatewayId = null;

  @SerializedName("dp_site_id")
  private Long dpSiteId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("retained_max")
  private Long retainedMax = null;

  @SerializedName("timeout")
  private Long timeout = null;

  public DpBlockAsyncReplicationPolicyCreateReqPolicy cronExpr(String cronExpr) {
    this.cronExpr = cronExpr;
    return this;
  }

   /**
   * cron expression
   * @return cronExpr
  **/
  @Schema(required = true, description = "cron expression")
  public String getCronExpr() {
    return cronExpr;
  }

  public void setCronExpr(String cronExpr) {
    this.cronExpr = cronExpr;
  }

  public DpBlockAsyncReplicationPolicyCreateReqPolicy dpGatewayId(Long dpGatewayId) {
    this.dpGatewayId = dpGatewayId;
    return this;
  }

   /**
   * dp gateway
   * @return dpGatewayId
  **/
  @Schema(required = true, description = "dp gateway")
  public Long getDpGatewayId() {
    return dpGatewayId;
  }

  public void setDpGatewayId(Long dpGatewayId) {
    this.dpGatewayId = dpGatewayId;
  }

  public DpBlockAsyncReplicationPolicyCreateReqPolicy dpSiteId(Long dpSiteId) {
    this.dpSiteId = dpSiteId;
    return this;
  }

   /**
   * dp site
   * @return dpSiteId
  **/
  @Schema(required = true, description = "dp site")
  public Long getDpSiteId() {
    return dpSiteId;
  }

  public void setDpSiteId(Long dpSiteId) {
    this.dpSiteId = dpSiteId;
  }

  public DpBlockAsyncReplicationPolicyCreateReqPolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @Schema(required = true, description = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DpBlockAsyncReplicationPolicyCreateReqPolicy retainedMax(Long retainedMax) {
    this.retainedMax = retainedMax;
    return this;
  }

   /**
   * retained max number of snapshots
   * @return retainedMax
  **/
  @Schema(description = "retained max number of snapshots")
  public Long getRetainedMax() {
    return retainedMax;
  }

  public void setRetainedMax(Long retainedMax) {
    this.retainedMax = retainedMax;
  }

  public DpBlockAsyncReplicationPolicyCreateReqPolicy timeout(Long timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * timeout
   * @return timeout
  **/
  @Schema(description = "timeout")
  public Long getTimeout() {
    return timeout;
  }

  public void setTimeout(Long timeout) {
    this.timeout = timeout;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DpBlockAsyncReplicationPolicyCreateReqPolicy dpBlockAsyncReplicationPolicyCreateReqPolicy = (DpBlockAsyncReplicationPolicyCreateReqPolicy) o;
    return Objects.equals(this.cronExpr, dpBlockAsyncReplicationPolicyCreateReqPolicy.cronExpr) &&
        Objects.equals(this.dpGatewayId, dpBlockAsyncReplicationPolicyCreateReqPolicy.dpGatewayId) &&
        Objects.equals(this.dpSiteId, dpBlockAsyncReplicationPolicyCreateReqPolicy.dpSiteId) &&
        Objects.equals(this.name, dpBlockAsyncReplicationPolicyCreateReqPolicy.name) &&
        Objects.equals(this.retainedMax, dpBlockAsyncReplicationPolicyCreateReqPolicy.retainedMax) &&
        Objects.equals(this.timeout, dpBlockAsyncReplicationPolicyCreateReqPolicy.timeout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cronExpr, dpGatewayId, dpSiteId, name, retainedMax, timeout);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DpBlockAsyncReplicationPolicyCreateReqPolicy {\n");
    
    sb.append("    cronExpr: ").append(toIndentedString(cronExpr)).append("\n");
    sb.append("    dpGatewayId: ").append(toIndentedString(dpGatewayId)).append("\n");
    sb.append("    dpSiteId: ").append(toIndentedString(dpSiteId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    retainedMax: ").append(toIndentedString(retainedMax)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
