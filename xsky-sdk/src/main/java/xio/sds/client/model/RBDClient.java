/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.Cluster;
/**
 * RBDClient defines the rbd client +X:model:generate;
 */
@Schema(description = "RBDClient defines the rbd client +X:model:generate;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class RBDClient {
  @SerializedName("admin_ip")
  private String adminIp = null;

  @SerializedName("cluster")
  private Cluster cluster = null;

  @SerializedName("cpu_arch")
  private String cpuArch = null;

  @SerializedName("cpu_core_num")
  private Long cpuCoreNum = null;

  @SerializedName("cpu_model")
  private String cpuModel = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("memory_kbyte")
  private Long memoryKbyte = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("os")
  private String os = null;

  @SerializedName("port")
  private Integer port = null;

  @SerializedName("public_ip")
  private String publicIp = null;

  @SerializedName("public_network")
  private String publicNetwork = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("token")
  private String token = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("vendor")
  private String vendor = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("volume_num")
  private Long volumeNum = null;

  @SerializedName("xdc_status")
  private String xdcStatus = null;

  public RBDClient adminIp(String adminIp) {
    this.adminIp = adminIp;
    return this;
  }

   /**
   * Get adminIp
   * @return adminIp
  **/
  @Schema(description = "")
  public String getAdminIp() {
    return adminIp;
  }

  public void setAdminIp(String adminIp) {
    this.adminIp = adminIp;
  }

  public RBDClient cluster(Cluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public Cluster getCluster() {
    return cluster;
  }

  public void setCluster(Cluster cluster) {
    this.cluster = cluster;
  }

  public RBDClient cpuArch(String cpuArch) {
    this.cpuArch = cpuArch;
    return this;
  }

   /**
   * Get cpuArch
   * @return cpuArch
  **/
  @Schema(description = "")
  public String getCpuArch() {
    return cpuArch;
  }

  public void setCpuArch(String cpuArch) {
    this.cpuArch = cpuArch;
  }

  public RBDClient cpuCoreNum(Long cpuCoreNum) {
    this.cpuCoreNum = cpuCoreNum;
    return this;
  }

   /**
   * Get cpuCoreNum
   * @return cpuCoreNum
  **/
  @Schema(description = "")
  public Long getCpuCoreNum() {
    return cpuCoreNum;
  }

  public void setCpuCoreNum(Long cpuCoreNum) {
    this.cpuCoreNum = cpuCoreNum;
  }

  public RBDClient cpuModel(String cpuModel) {
    this.cpuModel = cpuModel;
    return this;
  }

   /**
   * Get cpuModel
   * @return cpuModel
  **/
  @Schema(description = "")
  public String getCpuModel() {
    return cpuModel;
  }

  public void setCpuModel(String cpuModel) {
    this.cpuModel = cpuModel;
  }

  public RBDClient create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public RBDClient id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public RBDClient memoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
    return this;
  }

   /**
   * Get memoryKbyte
   * @return memoryKbyte
  **/
  @Schema(description = "")
  public Long getMemoryKbyte() {
    return memoryKbyte;
  }

  public void setMemoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
  }

  public RBDClient name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RBDClient os(String os) {
    this.os = os;
    return this;
  }

   /**
   * Get os
   * @return os
  **/
  @Schema(description = "")
  public String getOs() {
    return os;
  }

  public void setOs(String os) {
    this.os = os;
  }

  public RBDClient port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public RBDClient publicIp(String publicIp) {
    this.publicIp = publicIp;
    return this;
  }

   /**
   * Get publicIp
   * @return publicIp
  **/
  @Schema(description = "")
  public String getPublicIp() {
    return publicIp;
  }

  public void setPublicIp(String publicIp) {
    this.publicIp = publicIp;
  }

  public RBDClient publicNetwork(String publicNetwork) {
    this.publicNetwork = publicNetwork;
    return this;
  }

   /**
   * Get publicNetwork
   * @return publicNetwork
  **/
  @Schema(description = "")
  public String getPublicNetwork() {
    return publicNetwork;
  }

  public void setPublicNetwork(String publicNetwork) {
    this.publicNetwork = publicNetwork;
  }

  public RBDClient status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public RBDClient token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @Schema(description = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public RBDClient type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public RBDClient update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public RBDClient vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * Get vendor
   * @return vendor
  **/
  @Schema(description = "")
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }

  public RBDClient version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public RBDClient volumeNum(Long volumeNum) {
    this.volumeNum = volumeNum;
    return this;
  }

   /**
   * Get volumeNum
   * @return volumeNum
  **/
  @Schema(description = "")
  public Long getVolumeNum() {
    return volumeNum;
  }

  public void setVolumeNum(Long volumeNum) {
    this.volumeNum = volumeNum;
  }

  public RBDClient xdcStatus(String xdcStatus) {
    this.xdcStatus = xdcStatus;
    return this;
  }

   /**
   * Get xdcStatus
   * @return xdcStatus
  **/
  @Schema(description = "")
  public String getXdcStatus() {
    return xdcStatus;
  }

  public void setXdcStatus(String xdcStatus) {
    this.xdcStatus = xdcStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RBDClient rbDClient = (RBDClient) o;
    return Objects.equals(this.adminIp, rbDClient.adminIp) &&
        Objects.equals(this.cluster, rbDClient.cluster) &&
        Objects.equals(this.cpuArch, rbDClient.cpuArch) &&
        Objects.equals(this.cpuCoreNum, rbDClient.cpuCoreNum) &&
        Objects.equals(this.cpuModel, rbDClient.cpuModel) &&
        Objects.equals(this.create, rbDClient.create) &&
        Objects.equals(this.id, rbDClient.id) &&
        Objects.equals(this.memoryKbyte, rbDClient.memoryKbyte) &&
        Objects.equals(this.name, rbDClient.name) &&
        Objects.equals(this.os, rbDClient.os) &&
        Objects.equals(this.port, rbDClient.port) &&
        Objects.equals(this.publicIp, rbDClient.publicIp) &&
        Objects.equals(this.publicNetwork, rbDClient.publicNetwork) &&
        Objects.equals(this.status, rbDClient.status) &&
        Objects.equals(this.token, rbDClient.token) &&
        Objects.equals(this.type, rbDClient.type) &&
        Objects.equals(this.update, rbDClient.update) &&
        Objects.equals(this.vendor, rbDClient.vendor) &&
        Objects.equals(this.version, rbDClient.version) &&
        Objects.equals(this.volumeNum, rbDClient.volumeNum) &&
        Objects.equals(this.xdcStatus, rbDClient.xdcStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminIp, cluster, cpuArch, cpuCoreNum, cpuModel, create, id, memoryKbyte, name, os, port, publicIp, publicNetwork, status, token, type, update, vendor, version, volumeNum, xdcStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RBDClient {\n");
    
    sb.append("    adminIp: ").append(toIndentedString(adminIp)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    cpuArch: ").append(toIndentedString(cpuArch)).append("\n");
    sb.append("    cpuCoreNum: ").append(toIndentedString(cpuCoreNum)).append("\n");
    sb.append("    cpuModel: ").append(toIndentedString(cpuModel)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    memoryKbyte: ").append(toIndentedString(memoryKbyte)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    publicIp: ").append(toIndentedString(publicIp)).append("\n");
    sb.append("    publicNetwork: ").append(toIndentedString(publicNetwork)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    volumeNum: ").append(toIndentedString(volumeNum)).append("\n");
    sb.append("    xdcStatus: ").append(toIndentedString(xdcStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
