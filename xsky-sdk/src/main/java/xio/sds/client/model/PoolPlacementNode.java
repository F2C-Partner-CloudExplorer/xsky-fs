/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.PlacementNode;
import xio.sds.client.model.PoolPlacementNode;
/**
 * PoolPlacementNode defines a shadow placement node in a pool
 */
@Schema(description = "PoolPlacementNode defines a shadow placement node in a pool")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class PoolPlacementNode {
  @SerializedName("children")
  private List<PoolPlacementNode> children = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("placement_node")
  private PlacementNode placementNode = null;

  @SerializedName("replicate_num")
  private Long replicateNum = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public PoolPlacementNode children(List<PoolPlacementNode> children) {
    this.children = children;
    return this;
  }

  public PoolPlacementNode addChildrenItem(PoolPlacementNode childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<PoolPlacementNode>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Get children
   * @return children
  **/
  @Schema(description = "")
  public List<PoolPlacementNode> getChildren() {
    return children;
  }

  public void setChildren(List<PoolPlacementNode> children) {
    this.children = children;
  }

  public PoolPlacementNode create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public PoolPlacementNode id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public PoolPlacementNode placementNode(PlacementNode placementNode) {
    this.placementNode = placementNode;
    return this;
  }

   /**
   * Get placementNode
   * @return placementNode
  **/
  @Schema(description = "")
  public PlacementNode getPlacementNode() {
    return placementNode;
  }

  public void setPlacementNode(PlacementNode placementNode) {
    this.placementNode = placementNode;
  }

  public PoolPlacementNode replicateNum(Long replicateNum) {
    this.replicateNum = replicateNum;
    return this;
  }

   /**
   * Get replicateNum
   * @return replicateNum
  **/
  @Schema(description = "")
  public Long getReplicateNum() {
    return replicateNum;
  }

  public void setReplicateNum(Long replicateNum) {
    this.replicateNum = replicateNum;
  }

  public PoolPlacementNode status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public PoolPlacementNode update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoolPlacementNode poolPlacementNode = (PoolPlacementNode) o;
    return Objects.equals(this.children, poolPlacementNode.children) &&
        Objects.equals(this.create, poolPlacementNode.create) &&
        Objects.equals(this.id, poolPlacementNode.id) &&
        Objects.equals(this.placementNode, poolPlacementNode.placementNode) &&
        Objects.equals(this.replicateNum, poolPlacementNode.replicateNum) &&
        Objects.equals(this.status, poolPlacementNode.status) &&
        Objects.equals(this.update, poolPlacementNode.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(children, create, id, placementNode, replicateNum, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoolPlacementNode {\n");
    
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    placementNode: ").append(toIndentedString(placementNode)).append("\n");
    sb.append("    replicateNum: ").append(toIndentedString(replicateNum)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
