/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * IdentityPlatform defines different platforms for auth
 */
@Schema(description = "IdentityPlatform defines different platforms for auth")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class IdentityPlatform {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("extra")
  private Object extra = null;

  @SerializedName("failure_num")
  private Long failureNum = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("key")
  private String key = null;

  @SerializedName("login_page_enabled")
  private Boolean loginPageEnabled = null;

  @SerializedName("logout_url")
  private String logoutUrl = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("success_num")
  private Long successNum = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("vendor")
  private String vendor = null;

  public IdentityPlatform create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * time of creating identity platform
   * @return create
  **/
  @Schema(description = "time of creating identity platform")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public IdentityPlatform enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * enable the identity platform or not
   * @return enabled
  **/
  @Schema(description = "enable the identity platform or not")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public IdentityPlatform extra(Object extra) {
    this.extra = extra;
    return this;
  }

   /**
   * Get extra
   * @return extra
  **/
  @Schema(description = "")
  public Object getExtra() {
    return extra;
  }

  public void setExtra(Object extra) {
    this.extra = extra;
  }

  public IdentityPlatform failureNum(Long failureNum) {
    this.failureNum = failureNum;
    return this;
  }

   /**
   * num of failed authorization
   * @return failureNum
  **/
  @Schema(description = "num of failed authorization")
  public Long getFailureNum() {
    return failureNum;
  }

  public void setFailureNum(Long failureNum) {
    this.failureNum = failureNum;
  }

  public IdentityPlatform id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * id of identity platform
   * @return id
  **/
  @Schema(description = "id of identity platform")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public IdentityPlatform key(String key) {
    this.key = key;
    return this;
  }

   /**
   * secret key of identity platform
   * @return key
  **/
  @Schema(description = "secret key of identity platform")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public IdentityPlatform loginPageEnabled(Boolean loginPageEnabled) {
    this.loginPageEnabled = loginPageEnabled;
    return this;
  }

   /**
   * Get loginPageEnabled
   * @return loginPageEnabled
  **/
  @Schema(description = "")
  public Boolean isLoginPageEnabled() {
    return loginPageEnabled;
  }

  public void setLoginPageEnabled(Boolean loginPageEnabled) {
    this.loginPageEnabled = loginPageEnabled;
  }

  public IdentityPlatform logoutUrl(String logoutUrl) {
    this.logoutUrl = logoutUrl;
    return this;
  }

   /**
   * Get logoutUrl
   * @return logoutUrl
  **/
  @Schema(description = "")
  public String getLogoutUrl() {
    return logoutUrl;
  }

  public void setLogoutUrl(String logoutUrl) {
    this.logoutUrl = logoutUrl;
  }

  public IdentityPlatform name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of identity platform
   * @return name
  **/
  @Schema(description = "name of identity platform")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IdentityPlatform successNum(Long successNum) {
    this.successNum = successNum;
    return this;
  }

   /**
   * num of successful authorization
   * @return successNum
  **/
  @Schema(description = "num of successful authorization")
  public Long getSuccessNum() {
    return successNum;
  }

  public void setSuccessNum(Long successNum) {
    this.successNum = successNum;
  }

  public IdentityPlatform type(String type) {
    this.type = type;
    return this;
  }

   /**
   * type of identity platform
   * @return type
  **/
  @Schema(description = "type of identity platform")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public IdentityPlatform update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * time of updating identity platform
   * @return update
  **/
  @Schema(description = "time of updating identity platform")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public IdentityPlatform url(String url) {
    this.url = url;
    return this;
  }

   /**
   * url of identity platform
   * @return url
  **/
  @Schema(description = "url of identity platform")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public IdentityPlatform uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public IdentityPlatform vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * vendor for type
   * @return vendor
  **/
  @Schema(description = "vendor for type")
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityPlatform identityPlatform = (IdentityPlatform) o;
    return Objects.equals(this.create, identityPlatform.create) &&
        Objects.equals(this.enabled, identityPlatform.enabled) &&
        Objects.equals(this.extra, identityPlatform.extra) &&
        Objects.equals(this.failureNum, identityPlatform.failureNum) &&
        Objects.equals(this.id, identityPlatform.id) &&
        Objects.equals(this.key, identityPlatform.key) &&
        Objects.equals(this.loginPageEnabled, identityPlatform.loginPageEnabled) &&
        Objects.equals(this.logoutUrl, identityPlatform.logoutUrl) &&
        Objects.equals(this.name, identityPlatform.name) &&
        Objects.equals(this.successNum, identityPlatform.successNum) &&
        Objects.equals(this.type, identityPlatform.type) &&
        Objects.equals(this.update, identityPlatform.update) &&
        Objects.equals(this.url, identityPlatform.url) &&
        Objects.equals(this.uuid, identityPlatform.uuid) &&
        Objects.equals(this.vendor, identityPlatform.vendor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, enabled, extra, failureNum, id, key, loginPageEnabled, logoutUrl, name, successNum, type, update, url, uuid, vendor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityPlatform {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    failureNum: ").append(toIndentedString(failureNum)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    loginPageEnabled: ").append(toIndentedString(loginPageEnabled)).append("\n");
    sb.append("    logoutUrl: ").append(toIndentedString(logoutUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    successNum: ").append(toIndentedString(successNum)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
