/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.HostNestview;
/**
 * Task defines a task will be run on a host +X:model:generate
 */
@Schema(description = "Task defines a task will be run on a host +X:model:generate")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class Task {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("data")
  private String data = null;

  @SerializedName("error_msg")
  private String errorMsg = null;

  @SerializedName("execute")
  private OffsetDateTime execute = null;

  @SerializedName("finish")
  private OffsetDateTime finish = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("host_role")
  private String hostRole = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("priority")
  private Long priority = null;

  @SerializedName("retried")
  private Boolean retried = null;

  @SerializedName("retry")
  private Long retry = null;

  @SerializedName("retry_type")
  private String retryType = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public Task create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public Task data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(description = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public Task errorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
    return this;
  }

   /**
   * Get errorMsg
   * @return errorMsg
  **/
  @Schema(description = "")
  public String getErrorMsg() {
    return errorMsg;
  }

  public void setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
  }

  public Task execute(OffsetDateTime execute) {
    this.execute = execute;
    return this;
  }

   /**
   * Get execute
   * @return execute
  **/
  @Schema(description = "")
  public OffsetDateTime getExecute() {
    return execute;
  }

  public void setExecute(OffsetDateTime execute) {
    this.execute = execute;
  }

  public Task finish(OffsetDateTime finish) {
    this.finish = finish;
    return this;
  }

   /**
   * Get finish
   * @return finish
  **/
  @Schema(description = "")
  public OffsetDateTime getFinish() {
    return finish;
  }

  public void setFinish(OffsetDateTime finish) {
    this.finish = finish;
  }

  public Task host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public Task hostRole(String hostRole) {
    this.hostRole = hostRole;
    return this;
  }

   /**
   * Get hostRole
   * @return hostRole
  **/
  @Schema(description = "")
  public String getHostRole() {
    return hostRole;
  }

  public void setHostRole(String hostRole) {
    this.hostRole = hostRole;
  }

  public Task id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Task priority(Long priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Long getPriority() {
    return priority;
  }

  public void setPriority(Long priority) {
    this.priority = priority;
  }

  public Task retried(Boolean retried) {
    this.retried = retried;
    return this;
  }

   /**
   * Get retried
   * @return retried
  **/
  @Schema(description = "")
  public Boolean isRetried() {
    return retried;
  }

  public void setRetried(Boolean retried) {
    this.retried = retried;
  }

  public Task retry(Long retry) {
    this.retry = retry;
    return this;
  }

   /**
   * Get retry
   * @return retry
  **/
  @Schema(description = "")
  public Long getRetry() {
    return retry;
  }

  public void setRetry(Long retry) {
    this.retry = retry;
  }

  public Task retryType(String retryType) {
    this.retryType = retryType;
    return this;
  }

   /**
   * Get retryType
   * @return retryType
  **/
  @Schema(description = "")
  public String getRetryType() {
    return retryType;
  }

  public void setRetryType(String retryType) {
    this.retryType = retryType;
  }

  public Task status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Task type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Task update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Task task = (Task) o;
    return Objects.equals(this.create, task.create) &&
        Objects.equals(this.data, task.data) &&
        Objects.equals(this.errorMsg, task.errorMsg) &&
        Objects.equals(this.execute, task.execute) &&
        Objects.equals(this.finish, task.finish) &&
        Objects.equals(this.host, task.host) &&
        Objects.equals(this.hostRole, task.hostRole) &&
        Objects.equals(this.id, task.id) &&
        Objects.equals(this.priority, task.priority) &&
        Objects.equals(this.retried, task.retried) &&
        Objects.equals(this.retry, task.retry) &&
        Objects.equals(this.retryType, task.retryType) &&
        Objects.equals(this.status, task.status) &&
        Objects.equals(this.type, task.type) &&
        Objects.equals(this.update, task.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, data, errorMsg, execute, finish, host, hostRole, id, priority, retried, retry, retryType, status, type, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Task {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    errorMsg: ").append(toIndentedString(errorMsg)).append("\n");
    sb.append("    execute: ").append(toIndentedString(execute)).append("\n");
    sb.append("    finish: ").append(toIndentedString(finish)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    hostRole: ").append(toIndentedString(hostRole)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    retried: ").append(toIndentedString(retried)).append("\n");
    sb.append("    retry: ").append(toIndentedString(retry)).append("\n");
    sb.append("    retryType: ").append(toIndentedString(retryType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
