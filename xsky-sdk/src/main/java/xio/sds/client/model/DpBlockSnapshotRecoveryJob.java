/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.Cluster;
import xio.sds.client.model.DpBackupBlockSnapshot;
import xio.sds.client.model.DpBackupBlockVolume;
import xio.sds.client.model.DpBackupCluster;
import xio.sds.client.model.DpGatewayNestview;
import xio.sds.client.model.DpSiteNestview;
import xio.sds.client.model.VolumeNestview;
/**
 * DpBlockSnapshotRecoveryJob recovery a block resource
 */
@Schema(description = "DpBlockSnapshotRecoveryJob recovery a block resource")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DpBlockSnapshotRecoveryJob {
  @SerializedName("backup_block_snapshot")
  private DpBackupBlockSnapshot backupBlockSnapshot = null;

  @SerializedName("backup_block_volume")
  private DpBackupBlockVolume backupBlockVolume = null;

  @SerializedName("backup_cluster")
  private DpBackupCluster backupCluster = null;

  @SerializedName("block_volume")
  private VolumeNestview blockVolume = null;

  @SerializedName("cluster")
  private Cluster cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("dp_gateway")
  private DpGatewayNestview dpGateway = null;

  @SerializedName("dp_site")
  private DpSiteNestview dpSite = null;

  @SerializedName("finished_at")
  private OffsetDateTime finishedAt = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("max_retry_times")
  private Long maxRetryTimes = null;

  @SerializedName("progress")
  private Double progress = null;

  @SerializedName("resource_type")
  private String resourceType = null;

  @SerializedName("started_at")
  private OffsetDateTime startedAt = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  public DpBlockSnapshotRecoveryJob backupBlockSnapshot(DpBackupBlockSnapshot backupBlockSnapshot) {
    this.backupBlockSnapshot = backupBlockSnapshot;
    return this;
  }

   /**
   * Get backupBlockSnapshot
   * @return backupBlockSnapshot
  **/
  @Schema(description = "")
  public DpBackupBlockSnapshot getBackupBlockSnapshot() {
    return backupBlockSnapshot;
  }

  public void setBackupBlockSnapshot(DpBackupBlockSnapshot backupBlockSnapshot) {
    this.backupBlockSnapshot = backupBlockSnapshot;
  }

  public DpBlockSnapshotRecoveryJob backupBlockVolume(DpBackupBlockVolume backupBlockVolume) {
    this.backupBlockVolume = backupBlockVolume;
    return this;
  }

   /**
   * Get backupBlockVolume
   * @return backupBlockVolume
  **/
  @Schema(description = "")
  public DpBackupBlockVolume getBackupBlockVolume() {
    return backupBlockVolume;
  }

  public void setBackupBlockVolume(DpBackupBlockVolume backupBlockVolume) {
    this.backupBlockVolume = backupBlockVolume;
  }

  public DpBlockSnapshotRecoveryJob backupCluster(DpBackupCluster backupCluster) {
    this.backupCluster = backupCluster;
    return this;
  }

   /**
   * Get backupCluster
   * @return backupCluster
  **/
  @Schema(description = "")
  public DpBackupCluster getBackupCluster() {
    return backupCluster;
  }

  public void setBackupCluster(DpBackupCluster backupCluster) {
    this.backupCluster = backupCluster;
  }

  public DpBlockSnapshotRecoveryJob blockVolume(VolumeNestview blockVolume) {
    this.blockVolume = blockVolume;
    return this;
  }

   /**
   * Get blockVolume
   * @return blockVolume
  **/
  @Schema(description = "")
  public VolumeNestview getBlockVolume() {
    return blockVolume;
  }

  public void setBlockVolume(VolumeNestview blockVolume) {
    this.blockVolume = blockVolume;
  }

  public DpBlockSnapshotRecoveryJob cluster(Cluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public Cluster getCluster() {
    return cluster;
  }

  public void setCluster(Cluster cluster) {
    this.cluster = cluster;
  }

  public DpBlockSnapshotRecoveryJob create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DpBlockSnapshotRecoveryJob dpGateway(DpGatewayNestview dpGateway) {
    this.dpGateway = dpGateway;
    return this;
  }

   /**
   * Get dpGateway
   * @return dpGateway
  **/
  @Schema(description = "")
  public DpGatewayNestview getDpGateway() {
    return dpGateway;
  }

  public void setDpGateway(DpGatewayNestview dpGateway) {
    this.dpGateway = dpGateway;
  }

  public DpBlockSnapshotRecoveryJob dpSite(DpSiteNestview dpSite) {
    this.dpSite = dpSite;
    return this;
  }

   /**
   * Get dpSite
   * @return dpSite
  **/
  @Schema(description = "")
  public DpSiteNestview getDpSite() {
    return dpSite;
  }

  public void setDpSite(DpSiteNestview dpSite) {
    this.dpSite = dpSite;
  }

  public DpBlockSnapshotRecoveryJob finishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

   /**
   * Get finishedAt
   * @return finishedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getFinishedAt() {
    return finishedAt;
  }

  public void setFinishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = finishedAt;
  }

  public DpBlockSnapshotRecoveryJob id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DpBlockSnapshotRecoveryJob maxRetryTimes(Long maxRetryTimes) {
    this.maxRetryTimes = maxRetryTimes;
    return this;
  }

   /**
   * Get maxRetryTimes
   * @return maxRetryTimes
  **/
  @Schema(description = "")
  public Long getMaxRetryTimes() {
    return maxRetryTimes;
  }

  public void setMaxRetryTimes(Long maxRetryTimes) {
    this.maxRetryTimes = maxRetryTimes;
  }

  public DpBlockSnapshotRecoveryJob progress(Double progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @Schema(description = "")
  public Double getProgress() {
    return progress;
  }

  public void setProgress(Double progress) {
    this.progress = progress;
  }

  public DpBlockSnapshotRecoveryJob resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @Schema(description = "")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }

  public DpBlockSnapshotRecoveryJob startedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(OffsetDateTime startedAt) {
    this.startedAt = startedAt;
  }

  public DpBlockSnapshotRecoveryJob status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DpBlockSnapshotRecoveryJob update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public DpBlockSnapshotRecoveryJob updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DpBlockSnapshotRecoveryJob dpBlockSnapshotRecoveryJob = (DpBlockSnapshotRecoveryJob) o;
    return Objects.equals(this.backupBlockSnapshot, dpBlockSnapshotRecoveryJob.backupBlockSnapshot) &&
        Objects.equals(this.backupBlockVolume, dpBlockSnapshotRecoveryJob.backupBlockVolume) &&
        Objects.equals(this.backupCluster, dpBlockSnapshotRecoveryJob.backupCluster) &&
        Objects.equals(this.blockVolume, dpBlockSnapshotRecoveryJob.blockVolume) &&
        Objects.equals(this.cluster, dpBlockSnapshotRecoveryJob.cluster) &&
        Objects.equals(this.create, dpBlockSnapshotRecoveryJob.create) &&
        Objects.equals(this.dpGateway, dpBlockSnapshotRecoveryJob.dpGateway) &&
        Objects.equals(this.dpSite, dpBlockSnapshotRecoveryJob.dpSite) &&
        Objects.equals(this.finishedAt, dpBlockSnapshotRecoveryJob.finishedAt) &&
        Objects.equals(this.id, dpBlockSnapshotRecoveryJob.id) &&
        Objects.equals(this.maxRetryTimes, dpBlockSnapshotRecoveryJob.maxRetryTimes) &&
        Objects.equals(this.progress, dpBlockSnapshotRecoveryJob.progress) &&
        Objects.equals(this.resourceType, dpBlockSnapshotRecoveryJob.resourceType) &&
        Objects.equals(this.startedAt, dpBlockSnapshotRecoveryJob.startedAt) &&
        Objects.equals(this.status, dpBlockSnapshotRecoveryJob.status) &&
        Objects.equals(this.update, dpBlockSnapshotRecoveryJob.update) &&
        Objects.equals(this.updatedAt, dpBlockSnapshotRecoveryJob.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupBlockSnapshot, backupBlockVolume, backupCluster, blockVolume, cluster, create, dpGateway, dpSite, finishedAt, id, maxRetryTimes, progress, resourceType, startedAt, status, update, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DpBlockSnapshotRecoveryJob {\n");
    
    sb.append("    backupBlockSnapshot: ").append(toIndentedString(backupBlockSnapshot)).append("\n");
    sb.append("    backupBlockVolume: ").append(toIndentedString(backupBlockVolume)).append("\n");
    sb.append("    backupCluster: ").append(toIndentedString(backupCluster)).append("\n");
    sb.append("    blockVolume: ").append(toIndentedString(blockVolume)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    dpGateway: ").append(toIndentedString(dpGateway)).append("\n");
    sb.append("    dpSite: ").append(toIndentedString(dpSite)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxRetryTimes: ").append(toIndentedString(maxRetryTimes)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
