/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsPathNestview;
import xio.sds.client.model.DfsRootfsNestview;
import xio.sds.client.model.DpDfsSnapshotPolicyNestview;
/**
 * DfsSnapshot is the corresponding dfs snapshot record. +X:model:generate;plur&#x3D;DfsSnapshots;with_detailed;etcd_lock&#x3D;with_get; +X:benchmark:
 */
@Schema(description = "DfsSnapshot is the corresponding dfs snapshot record. +X:model:generate;plur=DfsSnapshots;with_detailed;etcd_lock=with_get; +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsSnapshot {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("creator")
  private String creator = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dp_dfs_snapshot_policy")
  private DpDfsSnapshotPolicyNestview dpDfsSnapshotPolicy = null;

  @SerializedName("expire_time")
  private OffsetDateTime expireTime = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("lock")
  private Boolean lock = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("path")
  private DfsPathNestview path = null;

  @SerializedName("progress")
  private Double progress = null;

  @SerializedName("rootfs")
  private DfsRootfsNestview rootfs = null;

  @SerializedName("snapshot_name")
  private String snapshotName = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DfsSnapshot actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsSnapshot cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsSnapshot create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsSnapshot creator(String creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @Schema(description = "")
  public String getCreator() {
    return creator;
  }

  public void setCreator(String creator) {
    this.creator = creator;
  }

  public DfsSnapshot description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsSnapshot dpDfsSnapshotPolicy(DpDfsSnapshotPolicyNestview dpDfsSnapshotPolicy) {
    this.dpDfsSnapshotPolicy = dpDfsSnapshotPolicy;
    return this;
  }

   /**
   * Get dpDfsSnapshotPolicy
   * @return dpDfsSnapshotPolicy
  **/
  @Schema(description = "")
  public DpDfsSnapshotPolicyNestview getDpDfsSnapshotPolicy() {
    return dpDfsSnapshotPolicy;
  }

  public void setDpDfsSnapshotPolicy(DpDfsSnapshotPolicyNestview dpDfsSnapshotPolicy) {
    this.dpDfsSnapshotPolicy = dpDfsSnapshotPolicy;
  }

  public DfsSnapshot expireTime(OffsetDateTime expireTime) {
    this.expireTime = expireTime;
    return this;
  }

   /**
   * Get expireTime
   * @return expireTime
  **/
  @Schema(description = "")
  public OffsetDateTime getExpireTime() {
    return expireTime;
  }

  public void setExpireTime(OffsetDateTime expireTime) {
    this.expireTime = expireTime;
  }

  public DfsSnapshot id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsSnapshot lock(Boolean lock) {
    this.lock = lock;
    return this;
  }

   /**
   * Get lock
   * @return lock
  **/
  @Schema(description = "")
  public Boolean isLock() {
    return lock;
  }

  public void setLock(Boolean lock) {
    this.lock = lock;
  }

  public DfsSnapshot name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsSnapshot path(DfsPathNestview path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public DfsPathNestview getPath() {
    return path;
  }

  public void setPath(DfsPathNestview path) {
    this.path = path;
  }

  public DfsSnapshot progress(Double progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @Schema(description = "")
  public Double getProgress() {
    return progress;
  }

  public void setProgress(Double progress) {
    this.progress = progress;
  }

  public DfsSnapshot rootfs(DfsRootfsNestview rootfs) {
    this.rootfs = rootfs;
    return this;
  }

   /**
   * Get rootfs
   * @return rootfs
  **/
  @Schema(description = "")
  public DfsRootfsNestview getRootfs() {
    return rootfs;
  }

  public void setRootfs(DfsRootfsNestview rootfs) {
    this.rootfs = rootfs;
  }

  public DfsSnapshot snapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
    return this;
  }

   /**
   * Get snapshotName
   * @return snapshotName
  **/
  @Schema(description = "")
  public String getSnapshotName() {
    return snapshotName;
  }

  public void setSnapshotName(String snapshotName) {
    this.snapshotName = snapshotName;
  }

  public DfsSnapshot status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsSnapshot update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsSnapshot dfsSnapshot = (DfsSnapshot) o;
    return Objects.equals(this.actionStatus, dfsSnapshot.actionStatus) &&
        Objects.equals(this.cluster, dfsSnapshot.cluster) &&
        Objects.equals(this.create, dfsSnapshot.create) &&
        Objects.equals(this.creator, dfsSnapshot.creator) &&
        Objects.equals(this.description, dfsSnapshot.description) &&
        Objects.equals(this.dpDfsSnapshotPolicy, dfsSnapshot.dpDfsSnapshotPolicy) &&
        Objects.equals(this.expireTime, dfsSnapshot.expireTime) &&
        Objects.equals(this.id, dfsSnapshot.id) &&
        Objects.equals(this.lock, dfsSnapshot.lock) &&
        Objects.equals(this.name, dfsSnapshot.name) &&
        Objects.equals(this.path, dfsSnapshot.path) &&
        Objects.equals(this.progress, dfsSnapshot.progress) &&
        Objects.equals(this.rootfs, dfsSnapshot.rootfs) &&
        Objects.equals(this.snapshotName, dfsSnapshot.snapshotName) &&
        Objects.equals(this.status, dfsSnapshot.status) &&
        Objects.equals(this.update, dfsSnapshot.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, creator, description, dpDfsSnapshotPolicy, expireTime, id, lock, name, path, progress, rootfs, snapshotName, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsSnapshot {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dpDfsSnapshotPolicy: ").append(toIndentedString(dpDfsSnapshotPolicy)).append("\n");
    sb.append("    expireTime: ").append(toIndentedString(expireTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lock: ").append(toIndentedString(lock)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    rootfs: ").append(toIndentedString(rootfs)).append("\n");
    sb.append("    snapshotName: ").append(toIndentedString(snapshotName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
