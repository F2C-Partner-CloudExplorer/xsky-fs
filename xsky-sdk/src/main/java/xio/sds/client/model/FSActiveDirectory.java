/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
/**
 * FSActiveDirectory defines file storage active directory +X:model:etcd_lock;
 */
@Schema(description = "FSActiveDirectory defines file storage active directory +X:model:etcd_lock;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class FSActiveDirectory {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("dfs_gateway_group_num")
  private Long dfsGatewayGroupNum = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("ip")
  private String ip = null;

  @SerializedName("max_uid")
  private Long maxUid = null;

  @SerializedName("min_uid")
  private Long minUid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("realm")
  private String realm = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("verify_time")
  private OffsetDateTime verifyTime = null;

  @SerializedName("workgroup")
  private String workgroup = null;

  public FSActiveDirectory actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public FSActiveDirectory cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public FSActiveDirectory create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public FSActiveDirectory dfsGatewayGroupNum(Long dfsGatewayGroupNum) {
    this.dfsGatewayGroupNum = dfsGatewayGroupNum;
    return this;
  }

   /**
   * Get dfsGatewayGroupNum
   * @return dfsGatewayGroupNum
  **/
  @Schema(description = "")
  public Long getDfsGatewayGroupNum() {
    return dfsGatewayGroupNum;
  }

  public void setDfsGatewayGroupNum(Long dfsGatewayGroupNum) {
    this.dfsGatewayGroupNum = dfsGatewayGroupNum;
  }

  public FSActiveDirectory id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public FSActiveDirectory ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public FSActiveDirectory maxUid(Long maxUid) {
    this.maxUid = maxUid;
    return this;
  }

   /**
   * Get maxUid
   * @return maxUid
  **/
  @Schema(description = "")
  public Long getMaxUid() {
    return maxUid;
  }

  public void setMaxUid(Long maxUid) {
    this.maxUid = maxUid;
  }

  public FSActiveDirectory minUid(Long minUid) {
    this.minUid = minUid;
    return this;
  }

   /**
   * Get minUid
   * @return minUid
  **/
  @Schema(description = "")
  public Long getMinUid() {
    return minUid;
  }

  public void setMinUid(Long minUid) {
    this.minUid = minUid;
  }

  public FSActiveDirectory name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FSActiveDirectory realm(String realm) {
    this.realm = realm;
    return this;
  }

   /**
   * Get realm
   * @return realm
  **/
  @Schema(description = "")
  public String getRealm() {
    return realm;
  }

  public void setRealm(String realm) {
    this.realm = realm;
  }

  public FSActiveDirectory status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public FSActiveDirectory update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public FSActiveDirectory username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public FSActiveDirectory verifyTime(OffsetDateTime verifyTime) {
    this.verifyTime = verifyTime;
    return this;
  }

   /**
   * Get verifyTime
   * @return verifyTime
  **/
  @Schema(description = "")
  public OffsetDateTime getVerifyTime() {
    return verifyTime;
  }

  public void setVerifyTime(OffsetDateTime verifyTime) {
    this.verifyTime = verifyTime;
  }

  public FSActiveDirectory workgroup(String workgroup) {
    this.workgroup = workgroup;
    return this;
  }

   /**
   * Get workgroup
   * @return workgroup
  **/
  @Schema(description = "")
  public String getWorkgroup() {
    return workgroup;
  }

  public void setWorkgroup(String workgroup) {
    this.workgroup = workgroup;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FSActiveDirectory fsActiveDirectory = (FSActiveDirectory) o;
    return Objects.equals(this.actionStatus, fsActiveDirectory.actionStatus) &&
        Objects.equals(this.cluster, fsActiveDirectory.cluster) &&
        Objects.equals(this.create, fsActiveDirectory.create) &&
        Objects.equals(this.dfsGatewayGroupNum, fsActiveDirectory.dfsGatewayGroupNum) &&
        Objects.equals(this.id, fsActiveDirectory.id) &&
        Objects.equals(this.ip, fsActiveDirectory.ip) &&
        Objects.equals(this.maxUid, fsActiveDirectory.maxUid) &&
        Objects.equals(this.minUid, fsActiveDirectory.minUid) &&
        Objects.equals(this.name, fsActiveDirectory.name) &&
        Objects.equals(this.realm, fsActiveDirectory.realm) &&
        Objects.equals(this.status, fsActiveDirectory.status) &&
        Objects.equals(this.update, fsActiveDirectory.update) &&
        Objects.equals(this.username, fsActiveDirectory.username) &&
        Objects.equals(this.verifyTime, fsActiveDirectory.verifyTime) &&
        Objects.equals(this.workgroup, fsActiveDirectory.workgroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, dfsGatewayGroupNum, id, ip, maxUid, minUid, name, realm, status, update, username, verifyTime, workgroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FSActiveDirectory {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    dfsGatewayGroupNum: ").append(toIndentedString(dfsGatewayGroupNum)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    maxUid: ").append(toIndentedString(maxUid)).append("\n");
    sb.append("    minUid: ").append(toIndentedString(minUid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    verifyTime: ").append(toIndentedString(verifyTime)).append("\n");
    sb.append("    workgroup: ").append(toIndentedString(workgroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
