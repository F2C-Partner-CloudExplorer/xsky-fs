/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VolumeReplicationSetReqVolume
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class VolumeReplicationSetReqVolume {
  @SerializedName("dest_pool_id")
  private Long destPoolId = null;

  @SerializedName("dest_volume_name")
  private String destVolumeName = null;

  @SerializedName("dp_block_replication_policy_id")
  private Long dpBlockReplicationPolicyId = null;

  @SerializedName("remote_cluster_fs_id")
  private String remoteClusterFsId = null;

  @SerializedName("replication_pool")
  private String replicationPool = null;

  @SerializedName("replication_pool_id")
  private Long replicationPoolId = null;

  @SerializedName("replication_pool_name")
  private String replicationPoolName = null;

  @SerializedName("replication_version")
  private Long replicationVersion = null;

  @SerializedName("replication_volume")
  private String replicationVolume = null;

  @SerializedName("replication_volume_id")
  private Long replicationVolumeId = null;

  @SerializedName("replication_volume_name")
  private String replicationVolumeName = null;

  public VolumeReplicationSetReqVolume destPoolId(Long destPoolId) {
    this.destPoolId = destPoolId;
    return this;
  }

   /**
   * destination pool id
   * @return destPoolId
  **/
  @Schema(description = "destination pool id")
  public Long getDestPoolId() {
    return destPoolId;
  }

  public void setDestPoolId(Long destPoolId) {
    this.destPoolId = destPoolId;
  }

  public VolumeReplicationSetReqVolume destVolumeName(String destVolumeName) {
    this.destVolumeName = destVolumeName;
    return this;
  }

   /**
   * destination volume name
   * @return destVolumeName
  **/
  @Schema(description = "destination volume name")
  public String getDestVolumeName() {
    return destVolumeName;
  }

  public void setDestVolumeName(String destVolumeName) {
    this.destVolumeName = destVolumeName;
  }

  public VolumeReplicationSetReqVolume dpBlockReplicationPolicyId(Long dpBlockReplicationPolicyId) {
    this.dpBlockReplicationPolicyId = dpBlockReplicationPolicyId;
    return this;
  }

   /**
   * block replication policy id
   * @return dpBlockReplicationPolicyId
  **/
  @Schema(description = "block replication policy id")
  public Long getDpBlockReplicationPolicyId() {
    return dpBlockReplicationPolicyId;
  }

  public void setDpBlockReplicationPolicyId(Long dpBlockReplicationPolicyId) {
    this.dpBlockReplicationPolicyId = dpBlockReplicationPolicyId;
  }

  public VolumeReplicationSetReqVolume remoteClusterFsId(String remoteClusterFsId) {
    this.remoteClusterFsId = remoteClusterFsId;
    return this;
  }

   /**
   * remote cluster
   * @return remoteClusterFsId
  **/
  @Schema(description = "remote cluster")
  public String getRemoteClusterFsId() {
    return remoteClusterFsId;
  }

  public void setRemoteClusterFsId(String remoteClusterFsId) {
    this.remoteClusterFsId = remoteClusterFsId;
  }

  public VolumeReplicationSetReqVolume replicationPool(String replicationPool) {
    this.replicationPool = replicationPool;
    return this;
  }

   /**
   * replication peer pool
   * @return replicationPool
  **/
  @Schema(description = "replication peer pool")
  public String getReplicationPool() {
    return replicationPool;
  }

  public void setReplicationPool(String replicationPool) {
    this.replicationPool = replicationPool;
  }

  public VolumeReplicationSetReqVolume replicationPoolId(Long replicationPoolId) {
    this.replicationPoolId = replicationPoolId;
    return this;
  }

   /**
   * replication peer pool id
   * @return replicationPoolId
  **/
  @Schema(description = "replication peer pool id")
  public Long getReplicationPoolId() {
    return replicationPoolId;
  }

  public void setReplicationPoolId(Long replicationPoolId) {
    this.replicationPoolId = replicationPoolId;
  }

  public VolumeReplicationSetReqVolume replicationPoolName(String replicationPoolName) {
    this.replicationPoolName = replicationPoolName;
    return this;
  }

   /**
   * replication peer pool name
   * @return replicationPoolName
  **/
  @Schema(description = "replication peer pool name")
  public String getReplicationPoolName() {
    return replicationPoolName;
  }

  public void setReplicationPoolName(String replicationPoolName) {
    this.replicationPoolName = replicationPoolName;
  }

  public VolumeReplicationSetReqVolume replicationVersion(Long replicationVersion) {
    this.replicationVersion = replicationVersion;
    return this;
  }

   /**
   * replication version
   * @return replicationVersion
  **/
  @Schema(description = "replication version")
  public Long getReplicationVersion() {
    return replicationVersion;
  }

  public void setReplicationVersion(Long replicationVersion) {
    this.replicationVersion = replicationVersion;
  }

  public VolumeReplicationSetReqVolume replicationVolume(String replicationVolume) {
    this.replicationVolume = replicationVolume;
    return this;
  }

   /**
   * replication peer volume
   * @return replicationVolume
  **/
  @Schema(description = "replication peer volume")
  public String getReplicationVolume() {
    return replicationVolume;
  }

  public void setReplicationVolume(String replicationVolume) {
    this.replicationVolume = replicationVolume;
  }

  public VolumeReplicationSetReqVolume replicationVolumeId(Long replicationVolumeId) {
    this.replicationVolumeId = replicationVolumeId;
    return this;
  }

   /**
   * replication peer volume id
   * @return replicationVolumeId
  **/
  @Schema(description = "replication peer volume id")
  public Long getReplicationVolumeId() {
    return replicationVolumeId;
  }

  public void setReplicationVolumeId(Long replicationVolumeId) {
    this.replicationVolumeId = replicationVolumeId;
  }

  public VolumeReplicationSetReqVolume replicationVolumeName(String replicationVolumeName) {
    this.replicationVolumeName = replicationVolumeName;
    return this;
  }

   /**
   * replication peer volume name
   * @return replicationVolumeName
  **/
  @Schema(description = "replication peer volume name")
  public String getReplicationVolumeName() {
    return replicationVolumeName;
  }

  public void setReplicationVolumeName(String replicationVolumeName) {
    this.replicationVolumeName = replicationVolumeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeReplicationSetReqVolume volumeReplicationSetReqVolume = (VolumeReplicationSetReqVolume) o;
    return Objects.equals(this.destPoolId, volumeReplicationSetReqVolume.destPoolId) &&
        Objects.equals(this.destVolumeName, volumeReplicationSetReqVolume.destVolumeName) &&
        Objects.equals(this.dpBlockReplicationPolicyId, volumeReplicationSetReqVolume.dpBlockReplicationPolicyId) &&
        Objects.equals(this.remoteClusterFsId, volumeReplicationSetReqVolume.remoteClusterFsId) &&
        Objects.equals(this.replicationPool, volumeReplicationSetReqVolume.replicationPool) &&
        Objects.equals(this.replicationPoolId, volumeReplicationSetReqVolume.replicationPoolId) &&
        Objects.equals(this.replicationPoolName, volumeReplicationSetReqVolume.replicationPoolName) &&
        Objects.equals(this.replicationVersion, volumeReplicationSetReqVolume.replicationVersion) &&
        Objects.equals(this.replicationVolume, volumeReplicationSetReqVolume.replicationVolume) &&
        Objects.equals(this.replicationVolumeId, volumeReplicationSetReqVolume.replicationVolumeId) &&
        Objects.equals(this.replicationVolumeName, volumeReplicationSetReqVolume.replicationVolumeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destPoolId, destVolumeName, dpBlockReplicationPolicyId, remoteClusterFsId, replicationPool, replicationPoolId, replicationPoolName, replicationVersion, replicationVolume, replicationVolumeId, replicationVolumeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeReplicationSetReqVolume {\n");
    
    sb.append("    destPoolId: ").append(toIndentedString(destPoolId)).append("\n");
    sb.append("    destVolumeName: ").append(toIndentedString(destVolumeName)).append("\n");
    sb.append("    dpBlockReplicationPolicyId: ").append(toIndentedString(dpBlockReplicationPolicyId)).append("\n");
    sb.append("    remoteClusterFsId: ").append(toIndentedString(remoteClusterFsId)).append("\n");
    sb.append("    replicationPool: ").append(toIndentedString(replicationPool)).append("\n");
    sb.append("    replicationPoolId: ").append(toIndentedString(replicationPoolId)).append("\n");
    sb.append("    replicationPoolName: ").append(toIndentedString(replicationPoolName)).append("\n");
    sb.append("    replicationVersion: ").append(toIndentedString(replicationVersion)).append("\n");
    sb.append("    replicationVolume: ").append(toIndentedString(replicationVolume)).append("\n");
    sb.append("    replicationVolumeId: ").append(toIndentedString(replicationVolumeId)).append("\n");
    sb.append("    replicationVolumeName: ").append(toIndentedString(replicationVolumeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
