/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.DfsDirectoryResultResp;
import xio.sds.client.model.DfsRootfs;
/**
 * DfsDirectoryRespDirectory
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsDirectoryRespDirectory {
  @SerializedName("dfs_rootfs")
  private DfsRootfs dfsRootfs = null;

  @SerializedName("directory_result")
  private DfsDirectoryResultResp directoryResult = null;

  @SerializedName("storage_policy_ids")
  private List<Long> storagePolicyIds = null;

  public DfsDirectoryRespDirectory dfsRootfs(DfsRootfs dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
    return this;
  }

   /**
   * Get dfsRootfs
   * @return dfsRootfs
  **/
  @Schema(required = true, description = "")
  public DfsRootfs getDfsRootfs() {
    return dfsRootfs;
  }

  public void setDfsRootfs(DfsRootfs dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
  }

  public DfsDirectoryRespDirectory directoryResult(DfsDirectoryResultResp directoryResult) {
    this.directoryResult = directoryResult;
    return this;
  }

   /**
   * Get directoryResult
   * @return directoryResult
  **/
  @Schema(required = true, description = "")
  public DfsDirectoryResultResp getDirectoryResult() {
    return directoryResult;
  }

  public void setDirectoryResult(DfsDirectoryResultResp directoryResult) {
    this.directoryResult = directoryResult;
  }

  public DfsDirectoryRespDirectory storagePolicyIds(List<Long> storagePolicyIds) {
    this.storagePolicyIds = storagePolicyIds;
    return this;
  }

  public DfsDirectoryRespDirectory addStoragePolicyIdsItem(Long storagePolicyIdsItem) {
    if (this.storagePolicyIds == null) {
      this.storagePolicyIds = new ArrayList<Long>();
    }
    this.storagePolicyIds.add(storagePolicyIdsItem);
    return this;
  }

   /**
   * Get storagePolicyIds
   * @return storagePolicyIds
  **/
  @Schema(description = "")
  public List<Long> getStoragePolicyIds() {
    return storagePolicyIds;
  }

  public void setStoragePolicyIds(List<Long> storagePolicyIds) {
    this.storagePolicyIds = storagePolicyIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsDirectoryRespDirectory dfsDirectoryRespDirectory = (DfsDirectoryRespDirectory) o;
    return Objects.equals(this.dfsRootfs, dfsDirectoryRespDirectory.dfsRootfs) &&
        Objects.equals(this.directoryResult, dfsDirectoryRespDirectory.directoryResult) &&
        Objects.equals(this.storagePolicyIds, dfsDirectoryRespDirectory.storagePolicyIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dfsRootfs, directoryResult, storagePolicyIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsDirectoryRespDirectory {\n");
    
    sb.append("    dfsRootfs: ").append(toIndentedString(dfsRootfs)).append("\n");
    sb.append("    directoryResult: ").append(toIndentedString(directoryResult)).append("\n");
    sb.append("    storagePolicyIds: ").append(toIndentedString(storagePolicyIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
