/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * ProgressInfo defines the progress info
 */
@Schema(description = "ProgressInfo defines the progress info")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class ProgressInfo {
  @SerializedName("action")
  private String action = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("current_progress")
  private Double currentProgress = null;

  @SerializedName("data")
  private String data = null;

  @SerializedName("fail_num")
  private Long failNum = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("success_num")
  private Long successNum = null;

  @SerializedName("total_num")
  private Long totalNum = null;

  @SerializedName("total_progress")
  private Double totalProgress = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public ProgressInfo action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public ProgressInfo create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public ProgressInfo currentProgress(Double currentProgress) {
    this.currentProgress = currentProgress;
    return this;
  }

   /**
   * Get currentProgress
   * @return currentProgress
  **/
  @Schema(description = "")
  public Double getCurrentProgress() {
    return currentProgress;
  }

  public void setCurrentProgress(Double currentProgress) {
    this.currentProgress = currentProgress;
  }

  public ProgressInfo data(String data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(description = "")
  public String getData() {
    return data;
  }

  public void setData(String data) {
    this.data = data;
  }

  public ProgressInfo failNum(Long failNum) {
    this.failNum = failNum;
    return this;
  }

   /**
   * Get failNum
   * @return failNum
  **/
  @Schema(description = "")
  public Long getFailNum() {
    return failNum;
  }

  public void setFailNum(Long failNum) {
    this.failNum = failNum;
  }

  public ProgressInfo id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ProgressInfo successNum(Long successNum) {
    this.successNum = successNum;
    return this;
  }

   /**
   * Get successNum
   * @return successNum
  **/
  @Schema(description = "")
  public Long getSuccessNum() {
    return successNum;
  }

  public void setSuccessNum(Long successNum) {
    this.successNum = successNum;
  }

  public ProgressInfo totalNum(Long totalNum) {
    this.totalNum = totalNum;
    return this;
  }

   /**
   * Get totalNum
   * @return totalNum
  **/
  @Schema(description = "")
  public Long getTotalNum() {
    return totalNum;
  }

  public void setTotalNum(Long totalNum) {
    this.totalNum = totalNum;
  }

  public ProgressInfo totalProgress(Double totalProgress) {
    this.totalProgress = totalProgress;
    return this;
  }

   /**
   * Get totalProgress
   * @return totalProgress
  **/
  @Schema(description = "")
  public Double getTotalProgress() {
    return totalProgress;
  }

  public void setTotalProgress(Double totalProgress) {
    this.totalProgress = totalProgress;
  }

  public ProgressInfo update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProgressInfo progressInfo = (ProgressInfo) o;
    return Objects.equals(this.action, progressInfo.action) &&
        Objects.equals(this.create, progressInfo.create) &&
        Objects.equals(this.currentProgress, progressInfo.currentProgress) &&
        Objects.equals(this.data, progressInfo.data) &&
        Objects.equals(this.failNum, progressInfo.failNum) &&
        Objects.equals(this.id, progressInfo.id) &&
        Objects.equals(this.successNum, progressInfo.successNum) &&
        Objects.equals(this.totalNum, progressInfo.totalNum) &&
        Objects.equals(this.totalProgress, progressInfo.totalProgress) &&
        Objects.equals(this.update, progressInfo.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, create, currentProgress, data, failNum, id, successNum, totalNum, totalProgress, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProgressInfo {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    currentProgress: ").append(toIndentedString(currentProgress)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    failNum: ").append(toIndentedString(failNum)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    successNum: ").append(toIndentedString(successNum)).append("\n");
    sb.append("    totalNum: ").append(toIndentedString(totalNum)).append("\n");
    sb.append("    totalProgress: ").append(toIndentedString(totalProgress)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
