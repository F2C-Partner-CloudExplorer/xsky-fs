/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.OspBucketFilter;
import xio.sds.client.model.OspLifecycleRuleExpiration;
import xio.sds.client.model.OspLifecycleRuleMpExpiration;
import xio.sds.client.model.OspLifecycleRuleTransition;
/**
 * OspLifecycleRule
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspLifecycleRule {
  @SerializedName("status")
  private String status = null;

  @SerializedName("dm_expiration")
  private Boolean dmExpiration = null;

  @SerializedName("filter")
  private OspBucketFilter filter = null;

  @SerializedName("create_time")
  private String createTime = null;

  @SerializedName("expiration")
  private OspLifecycleRuleExpiration expiration = null;

  @SerializedName("noncur_expiration")
  private OspLifecycleRuleExpiration noncurExpiration = null;

  @SerializedName("mp_expiration")
  private OspLifecycleRuleMpExpiration mpExpiration = null;

  @SerializedName("noncur_transitions")
  private List<OspLifecycleRuleTransition> noncurTransitions = null;

  @SerializedName("transitions")
  private List<OspLifecycleRuleTransition> transitions = null;

  @SerializedName("id")
  private String id = null;

  public OspLifecycleRule status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OspLifecycleRule dmExpiration(Boolean dmExpiration) {
    this.dmExpiration = dmExpiration;
    return this;
  }

   /**
   * Get dmExpiration
   * @return dmExpiration
  **/
  @Schema(description = "")
  public Boolean isDmExpiration() {
    return dmExpiration;
  }

  public void setDmExpiration(Boolean dmExpiration) {
    this.dmExpiration = dmExpiration;
  }

  public OspLifecycleRule filter(OspBucketFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @Schema(description = "")
  public OspBucketFilter getFilter() {
    return filter;
  }

  public void setFilter(OspBucketFilter filter) {
    this.filter = filter;
  }

  public OspLifecycleRule createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public OspLifecycleRule expiration(OspLifecycleRuleExpiration expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Get expiration
   * @return expiration
  **/
  @Schema(description = "")
  public OspLifecycleRuleExpiration getExpiration() {
    return expiration;
  }

  public void setExpiration(OspLifecycleRuleExpiration expiration) {
    this.expiration = expiration;
  }

  public OspLifecycleRule noncurExpiration(OspLifecycleRuleExpiration noncurExpiration) {
    this.noncurExpiration = noncurExpiration;
    return this;
  }

   /**
   * Get noncurExpiration
   * @return noncurExpiration
  **/
  @Schema(description = "")
  public OspLifecycleRuleExpiration getNoncurExpiration() {
    return noncurExpiration;
  }

  public void setNoncurExpiration(OspLifecycleRuleExpiration noncurExpiration) {
    this.noncurExpiration = noncurExpiration;
  }

  public OspLifecycleRule mpExpiration(OspLifecycleRuleMpExpiration mpExpiration) {
    this.mpExpiration = mpExpiration;
    return this;
  }

   /**
   * Get mpExpiration
   * @return mpExpiration
  **/
  @Schema(description = "")
  public OspLifecycleRuleMpExpiration getMpExpiration() {
    return mpExpiration;
  }

  public void setMpExpiration(OspLifecycleRuleMpExpiration mpExpiration) {
    this.mpExpiration = mpExpiration;
  }

  public OspLifecycleRule noncurTransitions(List<OspLifecycleRuleTransition> noncurTransitions) {
    this.noncurTransitions = noncurTransitions;
    return this;
  }

  public OspLifecycleRule addNoncurTransitionsItem(OspLifecycleRuleTransition noncurTransitionsItem) {
    if (this.noncurTransitions == null) {
      this.noncurTransitions = new ArrayList<OspLifecycleRuleTransition>();
    }
    this.noncurTransitions.add(noncurTransitionsItem);
    return this;
  }

   /**
   * Get noncurTransitions
   * @return noncurTransitions
  **/
  @Schema(description = "")
  public List<OspLifecycleRuleTransition> getNoncurTransitions() {
    return noncurTransitions;
  }

  public void setNoncurTransitions(List<OspLifecycleRuleTransition> noncurTransitions) {
    this.noncurTransitions = noncurTransitions;
  }

  public OspLifecycleRule transitions(List<OspLifecycleRuleTransition> transitions) {
    this.transitions = transitions;
    return this;
  }

  public OspLifecycleRule addTransitionsItem(OspLifecycleRuleTransition transitionsItem) {
    if (this.transitions == null) {
      this.transitions = new ArrayList<OspLifecycleRuleTransition>();
    }
    this.transitions.add(transitionsItem);
    return this;
  }

   /**
   * Get transitions
   * @return transitions
  **/
  @Schema(description = "")
  public List<OspLifecycleRuleTransition> getTransitions() {
    return transitions;
  }

  public void setTransitions(List<OspLifecycleRuleTransition> transitions) {
    this.transitions = transitions;
  }

  public OspLifecycleRule id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspLifecycleRule ospLifecycleRule = (OspLifecycleRule) o;
    return Objects.equals(this.status, ospLifecycleRule.status) &&
        Objects.equals(this.dmExpiration, ospLifecycleRule.dmExpiration) &&
        Objects.equals(this.filter, ospLifecycleRule.filter) &&
        Objects.equals(this.createTime, ospLifecycleRule.createTime) &&
        Objects.equals(this.expiration, ospLifecycleRule.expiration) &&
        Objects.equals(this.noncurExpiration, ospLifecycleRule.noncurExpiration) &&
        Objects.equals(this.mpExpiration, ospLifecycleRule.mpExpiration) &&
        Objects.equals(this.noncurTransitions, ospLifecycleRule.noncurTransitions) &&
        Objects.equals(this.transitions, ospLifecycleRule.transitions) &&
        Objects.equals(this.id, ospLifecycleRule.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, dmExpiration, filter, createTime, expiration, noncurExpiration, mpExpiration, noncurTransitions, transitions, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspLifecycleRule {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    dmExpiration: ").append(toIndentedString(dmExpiration)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    noncurExpiration: ").append(toIndentedString(noncurExpiration)).append("\n");
    sb.append("    mpExpiration: ").append(toIndentedString(mpExpiration)).append("\n");
    sb.append("    noncurTransitions: ").append(toIndentedString(noncurTransitions)).append("\n");
    sb.append("    transitions: ").append(toIndentedString(transitions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
