/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OspStoragePolicyCompact
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspStoragePolicyCompact {
  @SerializedName("compact_small_obj_max_size")
  private Long compactSmallObjMaxSize = null;

  @SerializedName("compact_small_obj_cache_size")
  private Long compactSmallObjCacheSize = null;

  @SerializedName("compact_big_obj_max_size")
  private Long compactBigObjMaxSize = null;

  @SerializedName("second_compact_ratio")
  private Integer secondCompactRatio = null;

  @SerializedName("compact_status")
  private String compactStatus = null;

  public OspStoragePolicyCompact compactSmallObjMaxSize(Long compactSmallObjMaxSize) {
    this.compactSmallObjMaxSize = compactSmallObjMaxSize;
    return this;
  }

   /**
   * Get compactSmallObjMaxSize
   * @return compactSmallObjMaxSize
  **/
  @Schema(description = "")
  public Long getCompactSmallObjMaxSize() {
    return compactSmallObjMaxSize;
  }

  public void setCompactSmallObjMaxSize(Long compactSmallObjMaxSize) {
    this.compactSmallObjMaxSize = compactSmallObjMaxSize;
  }

  public OspStoragePolicyCompact compactSmallObjCacheSize(Long compactSmallObjCacheSize) {
    this.compactSmallObjCacheSize = compactSmallObjCacheSize;
    return this;
  }

   /**
   * Get compactSmallObjCacheSize
   * @return compactSmallObjCacheSize
  **/
  @Schema(description = "")
  public Long getCompactSmallObjCacheSize() {
    return compactSmallObjCacheSize;
  }

  public void setCompactSmallObjCacheSize(Long compactSmallObjCacheSize) {
    this.compactSmallObjCacheSize = compactSmallObjCacheSize;
  }

  public OspStoragePolicyCompact compactBigObjMaxSize(Long compactBigObjMaxSize) {
    this.compactBigObjMaxSize = compactBigObjMaxSize;
    return this;
  }

   /**
   * Get compactBigObjMaxSize
   * @return compactBigObjMaxSize
  **/
  @Schema(description = "")
  public Long getCompactBigObjMaxSize() {
    return compactBigObjMaxSize;
  }

  public void setCompactBigObjMaxSize(Long compactBigObjMaxSize) {
    this.compactBigObjMaxSize = compactBigObjMaxSize;
  }

  public OspStoragePolicyCompact secondCompactRatio(Integer secondCompactRatio) {
    this.secondCompactRatio = secondCompactRatio;
    return this;
  }

   /**
   * Get secondCompactRatio
   * @return secondCompactRatio
  **/
  @Schema(description = "")
  public Integer getSecondCompactRatio() {
    return secondCompactRatio;
  }

  public void setSecondCompactRatio(Integer secondCompactRatio) {
    this.secondCompactRatio = secondCompactRatio;
  }

  public OspStoragePolicyCompact compactStatus(String compactStatus) {
    this.compactStatus = compactStatus;
    return this;
  }

   /**
   * Get compactStatus
   * @return compactStatus
  **/
  @Schema(description = "")
  public String getCompactStatus() {
    return compactStatus;
  }

  public void setCompactStatus(String compactStatus) {
    this.compactStatus = compactStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspStoragePolicyCompact ospStoragePolicyCompact = (OspStoragePolicyCompact) o;
    return Objects.equals(this.compactSmallObjMaxSize, ospStoragePolicyCompact.compactSmallObjMaxSize) &&
        Objects.equals(this.compactSmallObjCacheSize, ospStoragePolicyCompact.compactSmallObjCacheSize) &&
        Objects.equals(this.compactBigObjMaxSize, ospStoragePolicyCompact.compactBigObjMaxSize) &&
        Objects.equals(this.secondCompactRatio, ospStoragePolicyCompact.secondCompactRatio) &&
        Objects.equals(this.compactStatus, ospStoragePolicyCompact.compactStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compactSmallObjMaxSize, compactSmallObjCacheSize, compactBigObjMaxSize, secondCompactRatio, compactStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspStoragePolicyCompact {\n");
    
    sb.append("    compactSmallObjMaxSize: ").append(toIndentedString(compactSmallObjMaxSize)).append("\n");
    sb.append("    compactSmallObjCacheSize: ").append(toIndentedString(compactSmallObjCacheSize)).append("\n");
    sb.append("    compactBigObjMaxSize: ").append(toIndentedString(compactBigObjMaxSize)).append("\n");
    sb.append("    secondCompactRatio: ").append(toIndentedString(secondCompactRatio)).append("\n");
    sb.append("    compactStatus: ").append(toIndentedString(compactStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
