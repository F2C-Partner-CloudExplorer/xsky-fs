/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsGatewayGroupNestview;
import xio.sds.client.model.HostNestview;
import xio.sds.client.model.SSLCertificateNestview;
/**
 * DfsGateway contains information of a dfs gateway and it&#x27;s stats.
 */
@Schema(description = "DfsGateway contains information of a dfs gateway and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsGateway {
  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("conn_num")
  private Long connNum = null;

  @SerializedName("cpus")
  private Long cpus = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("ctdb_service_status")
  private String ctdbServiceStatus = null;

  @SerializedName("dfs_gateway_group")
  private DfsGatewayGroupNestview dfsGatewayGroup = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("memory_kbyte")
  private Long memoryKbyte = null;

  @SerializedName("s3_port")
  private Long s3Port = null;

  @SerializedName("s3_scheme")
  private String s3Scheme = null;

  @SerializedName("ssl_certificate")
  private SSLCertificateNestview sslCertificate = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DfsGateway cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsGateway connNum(Long connNum) {
    this.connNum = connNum;
    return this;
  }

   /**
   * Get connNum
   * @return connNum
  **/
  @Schema(description = "")
  public Long getConnNum() {
    return connNum;
  }

  public void setConnNum(Long connNum) {
    this.connNum = connNum;
  }

  public DfsGateway cpus(Long cpus) {
    this.cpus = cpus;
    return this;
  }

   /**
   * container resource limit
   * @return cpus
  **/
  @Schema(description = "container resource limit")
  public Long getCpus() {
    return cpus;
  }

  public void setCpus(Long cpus) {
    this.cpus = cpus;
  }

  public DfsGateway create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsGateway ctdbServiceStatus(String ctdbServiceStatus) {
    this.ctdbServiceStatus = ctdbServiceStatus;
    return this;
  }

   /**
   * Get ctdbServiceStatus
   * @return ctdbServiceStatus
  **/
  @Schema(description = "")
  public String getCtdbServiceStatus() {
    return ctdbServiceStatus;
  }

  public void setCtdbServiceStatus(String ctdbServiceStatus) {
    this.ctdbServiceStatus = ctdbServiceStatus;
  }

  public DfsGateway dfsGatewayGroup(DfsGatewayGroupNestview dfsGatewayGroup) {
    this.dfsGatewayGroup = dfsGatewayGroup;
    return this;
  }

   /**
   * Get dfsGatewayGroup
   * @return dfsGatewayGroup
  **/
  @Schema(description = "")
  public DfsGatewayGroupNestview getDfsGatewayGroup() {
    return dfsGatewayGroup;
  }

  public void setDfsGatewayGroup(DfsGatewayGroupNestview dfsGatewayGroup) {
    this.dfsGatewayGroup = dfsGatewayGroup;
  }

  public DfsGateway host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public DfsGateway id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsGateway memoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
    return this;
  }

   /**
   * Get memoryKbyte
   * @return memoryKbyte
  **/
  @Schema(description = "")
  public Long getMemoryKbyte() {
    return memoryKbyte;
  }

  public void setMemoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
  }

  public DfsGateway s3Port(Long s3Port) {
    this.s3Port = s3Port;
    return this;
  }

   /**
   * Get s3Port
   * @return s3Port
  **/
  @Schema(description = "")
  public Long getS3Port() {
    return s3Port;
  }

  public void setS3Port(Long s3Port) {
    this.s3Port = s3Port;
  }

  public DfsGateway s3Scheme(String s3Scheme) {
    this.s3Scheme = s3Scheme;
    return this;
  }

   /**
   * Get s3Scheme
   * @return s3Scheme
  **/
  @Schema(description = "")
  public String getS3Scheme() {
    return s3Scheme;
  }

  public void setS3Scheme(String s3Scheme) {
    this.s3Scheme = s3Scheme;
  }

  public DfsGateway sslCertificate(SSLCertificateNestview sslCertificate) {
    this.sslCertificate = sslCertificate;
    return this;
  }

   /**
   * Get sslCertificate
   * @return sslCertificate
  **/
  @Schema(description = "")
  public SSLCertificateNestview getSslCertificate() {
    return sslCertificate;
  }

  public void setSslCertificate(SSLCertificateNestview sslCertificate) {
    this.sslCertificate = sslCertificate;
  }

  public DfsGateway status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsGateway update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsGateway dfsGateway = (DfsGateway) o;
    return Objects.equals(this.cluster, dfsGateway.cluster) &&
        Objects.equals(this.connNum, dfsGateway.connNum) &&
        Objects.equals(this.cpus, dfsGateway.cpus) &&
        Objects.equals(this.create, dfsGateway.create) &&
        Objects.equals(this.ctdbServiceStatus, dfsGateway.ctdbServiceStatus) &&
        Objects.equals(this.dfsGatewayGroup, dfsGateway.dfsGatewayGroup) &&
        Objects.equals(this.host, dfsGateway.host) &&
        Objects.equals(this.id, dfsGateway.id) &&
        Objects.equals(this.memoryKbyte, dfsGateway.memoryKbyte) &&
        Objects.equals(this.s3Port, dfsGateway.s3Port) &&
        Objects.equals(this.s3Scheme, dfsGateway.s3Scheme) &&
        Objects.equals(this.sslCertificate, dfsGateway.sslCertificate) &&
        Objects.equals(this.status, dfsGateway.status) &&
        Objects.equals(this.update, dfsGateway.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, connNum, cpus, create, ctdbServiceStatus, dfsGatewayGroup, host, id, memoryKbyte, s3Port, s3Scheme, sslCertificate, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsGateway {\n");
    
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    connNum: ").append(toIndentedString(connNum)).append("\n");
    sb.append("    cpus: ").append(toIndentedString(cpus)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    ctdbServiceStatus: ").append(toIndentedString(ctdbServiceStatus)).append("\n");
    sb.append("    dfsGatewayGroup: ").append(toIndentedString(dfsGatewayGroup)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    memoryKbyte: ").append(toIndentedString(memoryKbyte)).append("\n");
    sb.append("    s3Port: ").append(toIndentedString(s3Port)).append("\n");
    sb.append("    s3Scheme: ").append(toIndentedString(s3Scheme)).append("\n");
    sb.append("    sslCertificate: ").append(toIndentedString(sslCertificate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
