/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.AccessPathNestview;
import xio.sds.client.model.CloudPlatformNestview;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DpBlockReplicationPolicyNestview;
import xio.sds.client.model.DpBlockSnapshotPolicyNestview;
import xio.sds.client.model.PoolNestview;
import xio.sds.client.model.RBDClient;
import xio.sds.client.model.RemoteClusterNestview;
import xio.sds.client.model.SnapshotNestview;
import xio.sds.client.model.TrashResourceNestview;
import xio.sds.client.model.VolumeGroupNestview;
import xio.sds.client.model.VolumeQosSpec;
/**
 * Volume contains information of a volume and it&#x27;s stats.
 */
@Schema(description = "Volume contains information of a volume and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class Volume {
  @SerializedName("access_path")
  private AccessPathNestview accessPath = null;

  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("allocated_size")
  private Long allocatedSize = null;

  @SerializedName("alua_enabled")
  private Boolean aluaEnabled = null;

  @SerializedName("block_snapshot_num")
  private Long blockSnapshotNum = null;

  @SerializedName("block_volume_group")
  private VolumeGroupNestview blockVolumeGroup = null;

  @SerializedName("client_group_num")
  private Long clientGroupNum = null;

  @SerializedName("cloud_platform")
  private CloudPlatformNestview cloudPlatform = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("crc_check")
  private Boolean crcCheck = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dp_block_backup_policy_num")
  private Long dpBlockBackupPolicyNum = null;

  @SerializedName("dp_block_replication_policy")
  private DpBlockReplicationPolicyNestview dpBlockReplicationPolicy = null;

  @SerializedName("dp_block_snapshot_policy")
  private DpBlockSnapshotPolicyNestview dpBlockSnapshotPolicy = null;

  @SerializedName("flattened")
  private Boolean flattened = null;

  @SerializedName("format")
  private Long format = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("image_id")
  private String imageId = null;

  @SerializedName("latest_snapshot_time")
  private OffsetDateTime latestSnapshotTime = null;

  @SerializedName("migration_stripes")
  private Long migrationStripes = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("original_name")
  private String originalName = null;

  @SerializedName("original_volume_name")
  private String originalVolumeName = null;

  @SerializedName("passive")
  private Boolean passive = null;

  @SerializedName("performance_priority")
  private Long performancePriority = null;

  @SerializedName("pool")
  private PoolNestview pool = null;

  @SerializedName("progress")
  private Double progress = null;

  @SerializedName("qos")
  private VolumeQosSpec qos = null;

  @SerializedName("qos_enabled")
  private Boolean qosEnabled = null;

  @SerializedName("rbd_client")
  private RBDClient rbdClient = null;

  @SerializedName("recycled")
  private Boolean recycled = null;

  @SerializedName("remote_cluster")
  private RemoteClusterNestview remoteCluster = null;

  @SerializedName("replication_dest")
  private String replicationDest = null;

  @SerializedName("replication_pool")
  private String replicationPool = null;

  @SerializedName("replication_pool_id")
  private Long replicationPoolId = null;

  @SerializedName("replication_pool_name")
  private String replicationPoolName = null;

  @SerializedName("replication_role")
  private String replicationRole = null;

  @SerializedName("replication_status")
  private String replicationStatus = null;

  @SerializedName("replication_version")
  private Long replicationVersion = null;

  @SerializedName("replication_volume")
  private String replicationVolume = null;

  @SerializedName("replication_volume_id")
  private Long replicationVolumeId = null;

  @SerializedName("replication_volume_name")
  private String replicationVolumeName = null;

  @SerializedName("size")
  private Long size = null;

  @SerializedName("sn")
  private String sn = null;

  @SerializedName("snapshot")
  private SnapshotNestview snapshot = null;

  @SerializedName("snapshot_replication_role")
  private String snapshotReplicationRole = null;

  @SerializedName("snapshot_replication_status")
  private String snapshotReplicationStatus = null;

  @SerializedName("source_type")
  private String sourceType = null;

  @SerializedName("source_uuid")
  private String sourceUuid = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("trash_resource")
  private TrashResourceNestview trashResource = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  @SerializedName("volume_name")
  private String volumeName = null;

  public Volume accessPath(AccessPathNestview accessPath) {
    this.accessPath = accessPath;
    return this;
  }

   /**
   * Get accessPath
   * @return accessPath
  **/
  @Schema(description = "")
  public AccessPathNestview getAccessPath() {
    return accessPath;
  }

  public void setAccessPath(AccessPathNestview accessPath) {
    this.accessPath = accessPath;
  }

  public Volume actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public Volume allocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
    return this;
  }

   /**
   * Get allocatedSize
   * @return allocatedSize
  **/
  @Schema(description = "")
  public Long getAllocatedSize() {
    return allocatedSize;
  }

  public void setAllocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
  }

  public Volume aluaEnabled(Boolean aluaEnabled) {
    this.aluaEnabled = aluaEnabled;
    return this;
  }

   /**
   * Get aluaEnabled
   * @return aluaEnabled
  **/
  @Schema(description = "")
  public Boolean isAluaEnabled() {
    return aluaEnabled;
  }

  public void setAluaEnabled(Boolean aluaEnabled) {
    this.aluaEnabled = aluaEnabled;
  }

  public Volume blockSnapshotNum(Long blockSnapshotNum) {
    this.blockSnapshotNum = blockSnapshotNum;
    return this;
  }

   /**
   * Get blockSnapshotNum
   * @return blockSnapshotNum
  **/
  @Schema(description = "")
  public Long getBlockSnapshotNum() {
    return blockSnapshotNum;
  }

  public void setBlockSnapshotNum(Long blockSnapshotNum) {
    this.blockSnapshotNum = blockSnapshotNum;
  }

  public Volume blockVolumeGroup(VolumeGroupNestview blockVolumeGroup) {
    this.blockVolumeGroup = blockVolumeGroup;
    return this;
  }

   /**
   * Get blockVolumeGroup
   * @return blockVolumeGroup
  **/
  @Schema(description = "")
  public VolumeGroupNestview getBlockVolumeGroup() {
    return blockVolumeGroup;
  }

  public void setBlockVolumeGroup(VolumeGroupNestview blockVolumeGroup) {
    this.blockVolumeGroup = blockVolumeGroup;
  }

  public Volume clientGroupNum(Long clientGroupNum) {
    this.clientGroupNum = clientGroupNum;
    return this;
  }

   /**
   * Get clientGroupNum
   * @return clientGroupNum
  **/
  @Schema(description = "")
  public Long getClientGroupNum() {
    return clientGroupNum;
  }

  public void setClientGroupNum(Long clientGroupNum) {
    this.clientGroupNum = clientGroupNum;
  }

  public Volume cloudPlatform(CloudPlatformNestview cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
    return this;
  }

   /**
   * Get cloudPlatform
   * @return cloudPlatform
  **/
  @Schema(description = "")
  public CloudPlatformNestview getCloudPlatform() {
    return cloudPlatform;
  }

  public void setCloudPlatform(CloudPlatformNestview cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
  }

  public Volume cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public Volume crcCheck(Boolean crcCheck) {
    this.crcCheck = crcCheck;
    return this;
  }

   /**
   * Get crcCheck
   * @return crcCheck
  **/
  @Schema(description = "")
  public Boolean isCrcCheck() {
    return crcCheck;
  }

  public void setCrcCheck(Boolean crcCheck) {
    this.crcCheck = crcCheck;
  }

  public Volume create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public Volume description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Volume dpBlockBackupPolicyNum(Long dpBlockBackupPolicyNum) {
    this.dpBlockBackupPolicyNum = dpBlockBackupPolicyNum;
    return this;
  }

   /**
   * Get dpBlockBackupPolicyNum
   * @return dpBlockBackupPolicyNum
  **/
  @Schema(description = "")
  public Long getDpBlockBackupPolicyNum() {
    return dpBlockBackupPolicyNum;
  }

  public void setDpBlockBackupPolicyNum(Long dpBlockBackupPolicyNum) {
    this.dpBlockBackupPolicyNum = dpBlockBackupPolicyNum;
  }

  public Volume dpBlockReplicationPolicy(DpBlockReplicationPolicyNestview dpBlockReplicationPolicy) {
    this.dpBlockReplicationPolicy = dpBlockReplicationPolicy;
    return this;
  }

   /**
   * Get dpBlockReplicationPolicy
   * @return dpBlockReplicationPolicy
  **/
  @Schema(description = "")
  public DpBlockReplicationPolicyNestview getDpBlockReplicationPolicy() {
    return dpBlockReplicationPolicy;
  }

  public void setDpBlockReplicationPolicy(DpBlockReplicationPolicyNestview dpBlockReplicationPolicy) {
    this.dpBlockReplicationPolicy = dpBlockReplicationPolicy;
  }

  public Volume dpBlockSnapshotPolicy(DpBlockSnapshotPolicyNestview dpBlockSnapshotPolicy) {
    this.dpBlockSnapshotPolicy = dpBlockSnapshotPolicy;
    return this;
  }

   /**
   * Get dpBlockSnapshotPolicy
   * @return dpBlockSnapshotPolicy
  **/
  @Schema(description = "")
  public DpBlockSnapshotPolicyNestview getDpBlockSnapshotPolicy() {
    return dpBlockSnapshotPolicy;
  }

  public void setDpBlockSnapshotPolicy(DpBlockSnapshotPolicyNestview dpBlockSnapshotPolicy) {
    this.dpBlockSnapshotPolicy = dpBlockSnapshotPolicy;
  }

  public Volume flattened(Boolean flattened) {
    this.flattened = flattened;
    return this;
  }

   /**
   * Get flattened
   * @return flattened
  **/
  @Schema(description = "")
  public Boolean isFlattened() {
    return flattened;
  }

  public void setFlattened(Boolean flattened) {
    this.flattened = flattened;
  }

  public Volume format(Long format) {
    this.format = format;
    return this;
  }

   /**
   * 128 or 129 (advanced)
   * @return format
  **/
  @Schema(description = "128 or 129 (advanced)")
  public Long getFormat() {
    return format;
  }

  public void setFormat(Long format) {
    this.format = format;
  }

  public Volume hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Get hidden
   * @return hidden
  **/
  @Schema(description = "")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Volume id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Volume imageId(String imageId) {
    this.imageId = imageId;
    return this;
  }

   /**
   * Get imageId
   * @return imageId
  **/
  @Schema(description = "")
  public String getImageId() {
    return imageId;
  }

  public void setImageId(String imageId) {
    this.imageId = imageId;
  }

  public Volume latestSnapshotTime(OffsetDateTime latestSnapshotTime) {
    this.latestSnapshotTime = latestSnapshotTime;
    return this;
  }

   /**
   * Get latestSnapshotTime
   * @return latestSnapshotTime
  **/
  @Schema(description = "")
  public OffsetDateTime getLatestSnapshotTime() {
    return latestSnapshotTime;
  }

  public void setLatestSnapshotTime(OffsetDateTime latestSnapshotTime) {
    this.latestSnapshotTime = latestSnapshotTime;
  }

  public Volume migrationStripes(Long migrationStripes) {
    this.migrationStripes = migrationStripes;
    return this;
  }

   /**
   * Get migrationStripes
   * @return migrationStripes
  **/
  @Schema(description = "")
  public Long getMigrationStripes() {
    return migrationStripes;
  }

  public void setMigrationStripes(Long migrationStripes) {
    this.migrationStripes = migrationStripes;
  }

  public Volume name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Volume originalName(String originalName) {
    this.originalName = originalName;
    return this;
  }

   /**
   * Get originalName
   * @return originalName
  **/
  @Schema(description = "")
  public String getOriginalName() {
    return originalName;
  }

  public void setOriginalName(String originalName) {
    this.originalName = originalName;
  }

  public Volume originalVolumeName(String originalVolumeName) {
    this.originalVolumeName = originalVolumeName;
    return this;
  }

   /**
   * Get originalVolumeName
   * @return originalVolumeName
  **/
  @Schema(description = "")
  public String getOriginalVolumeName() {
    return originalVolumeName;
  }

  public void setOriginalVolumeName(String originalVolumeName) {
    this.originalVolumeName = originalVolumeName;
  }

  public Volume passive(Boolean passive) {
    this.passive = passive;
    return this;
  }

   /**
   * Get passive
   * @return passive
  **/
  @Schema(description = "")
  public Boolean isPassive() {
    return passive;
  }

  public void setPassive(Boolean passive) {
    this.passive = passive;
  }

  public Volume performancePriority(Long performancePriority) {
    this.performancePriority = performancePriority;
    return this;
  }

   /**
   * 0 or 1
   * @return performancePriority
  **/
  @Schema(description = "0 or 1")
  public Long getPerformancePriority() {
    return performancePriority;
  }

  public void setPerformancePriority(Long performancePriority) {
    this.performancePriority = performancePriority;
  }

  public Volume pool(PoolNestview pool) {
    this.pool = pool;
    return this;
  }

   /**
   * Get pool
   * @return pool
  **/
  @Schema(description = "")
  public PoolNestview getPool() {
    return pool;
  }

  public void setPool(PoolNestview pool) {
    this.pool = pool;
  }

  public Volume progress(Double progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @Schema(description = "")
  public Double getProgress() {
    return progress;
  }

  public void setProgress(Double progress) {
    this.progress = progress;
  }

  public Volume qos(VolumeQosSpec qos) {
    this.qos = qos;
    return this;
  }

   /**
   * Get qos
   * @return qos
  **/
  @Schema(description = "")
  public VolumeQosSpec getQos() {
    return qos;
  }

  public void setQos(VolumeQosSpec qos) {
    this.qos = qos;
  }

  public Volume qosEnabled(Boolean qosEnabled) {
    this.qosEnabled = qosEnabled;
    return this;
  }

   /**
   * Get qosEnabled
   * @return qosEnabled
  **/
  @Schema(description = "")
  public Boolean isQosEnabled() {
    return qosEnabled;
  }

  public void setQosEnabled(Boolean qosEnabled) {
    this.qosEnabled = qosEnabled;
  }

  public Volume rbdClient(RBDClient rbdClient) {
    this.rbdClient = rbdClient;
    return this;
  }

   /**
   * Get rbdClient
   * @return rbdClient
  **/
  @Schema(description = "")
  public RBDClient getRbdClient() {
    return rbdClient;
  }

  public void setRbdClient(RBDClient rbdClient) {
    this.rbdClient = rbdClient;
  }

  public Volume recycled(Boolean recycled) {
    this.recycled = recycled;
    return this;
  }

   /**
   * trash
   * @return recycled
  **/
  @Schema(description = "trash")
  public Boolean isRecycled() {
    return recycled;
  }

  public void setRecycled(Boolean recycled) {
    this.recycled = recycled;
  }

  public Volume remoteCluster(RemoteClusterNestview remoteCluster) {
    this.remoteCluster = remoteCluster;
    return this;
  }

   /**
   * Get remoteCluster
   * @return remoteCluster
  **/
  @Schema(description = "")
  public RemoteClusterNestview getRemoteCluster() {
    return remoteCluster;
  }

  public void setRemoteCluster(RemoteClusterNestview remoteCluster) {
    this.remoteCluster = remoteCluster;
  }

  public Volume replicationDest(String replicationDest) {
    this.replicationDest = replicationDest;
    return this;
  }

   /**
   * Get replicationDest
   * @return replicationDest
  **/
  @Schema(description = "")
  public String getReplicationDest() {
    return replicationDest;
  }

  public void setReplicationDest(String replicationDest) {
    this.replicationDest = replicationDest;
  }

  public Volume replicationPool(String replicationPool) {
    this.replicationPool = replicationPool;
    return this;
  }

   /**
   * Get replicationPool
   * @return replicationPool
  **/
  @Schema(description = "")
  public String getReplicationPool() {
    return replicationPool;
  }

  public void setReplicationPool(String replicationPool) {
    this.replicationPool = replicationPool;
  }

  public Volume replicationPoolId(Long replicationPoolId) {
    this.replicationPoolId = replicationPoolId;
    return this;
  }

   /**
   * Get replicationPoolId
   * @return replicationPoolId
  **/
  @Schema(description = "")
  public Long getReplicationPoolId() {
    return replicationPoolId;
  }

  public void setReplicationPoolId(Long replicationPoolId) {
    this.replicationPoolId = replicationPoolId;
  }

  public Volume replicationPoolName(String replicationPoolName) {
    this.replicationPoolName = replicationPoolName;
    return this;
  }

   /**
   * Get replicationPoolName
   * @return replicationPoolName
  **/
  @Schema(description = "")
  public String getReplicationPoolName() {
    return replicationPoolName;
  }

  public void setReplicationPoolName(String replicationPoolName) {
    this.replicationPoolName = replicationPoolName;
  }

  public Volume replicationRole(String replicationRole) {
    this.replicationRole = replicationRole;
    return this;
  }

   /**
   * Get replicationRole
   * @return replicationRole
  **/
  @Schema(description = "")
  public String getReplicationRole() {
    return replicationRole;
  }

  public void setReplicationRole(String replicationRole) {
    this.replicationRole = replicationRole;
  }

  public Volume replicationStatus(String replicationStatus) {
    this.replicationStatus = replicationStatus;
    return this;
  }

   /**
   * Get replicationStatus
   * @return replicationStatus
  **/
  @Schema(description = "")
  public String getReplicationStatus() {
    return replicationStatus;
  }

  public void setReplicationStatus(String replicationStatus) {
    this.replicationStatus = replicationStatus;
  }

  public Volume replicationVersion(Long replicationVersion) {
    this.replicationVersion = replicationVersion;
    return this;
  }

   /**
   * Get replicationVersion
   * @return replicationVersion
  **/
  @Schema(description = "")
  public Long getReplicationVersion() {
    return replicationVersion;
  }

  public void setReplicationVersion(Long replicationVersion) {
    this.replicationVersion = replicationVersion;
  }

  public Volume replicationVolume(String replicationVolume) {
    this.replicationVolume = replicationVolume;
    return this;
  }

   /**
   * Get replicationVolume
   * @return replicationVolume
  **/
  @Schema(description = "")
  public String getReplicationVolume() {
    return replicationVolume;
  }

  public void setReplicationVolume(String replicationVolume) {
    this.replicationVolume = replicationVolume;
  }

  public Volume replicationVolumeId(Long replicationVolumeId) {
    this.replicationVolumeId = replicationVolumeId;
    return this;
  }

   /**
   * Get replicationVolumeId
   * @return replicationVolumeId
  **/
  @Schema(description = "")
  public Long getReplicationVolumeId() {
    return replicationVolumeId;
  }

  public void setReplicationVolumeId(Long replicationVolumeId) {
    this.replicationVolumeId = replicationVolumeId;
  }

  public Volume replicationVolumeName(String replicationVolumeName) {
    this.replicationVolumeName = replicationVolumeName;
    return this;
  }

   /**
   * Get replicationVolumeName
   * @return replicationVolumeName
  **/
  @Schema(description = "")
  public String getReplicationVolumeName() {
    return replicationVolumeName;
  }

  public void setReplicationVolumeName(String replicationVolumeName) {
    this.replicationVolumeName = replicationVolumeName;
  }

  public Volume size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public Volume sn(String sn) {
    this.sn = sn;
    return this;
  }

   /**
   * Get sn
   * @return sn
  **/
  @Schema(description = "")
  public String getSn() {
    return sn;
  }

  public void setSn(String sn) {
    this.sn = sn;
  }

  public Volume snapshot(SnapshotNestview snapshot) {
    this.snapshot = snapshot;
    return this;
  }

   /**
   * Get snapshot
   * @return snapshot
  **/
  @Schema(description = "")
  public SnapshotNestview getSnapshot() {
    return snapshot;
  }

  public void setSnapshot(SnapshotNestview snapshot) {
    this.snapshot = snapshot;
  }

  public Volume snapshotReplicationRole(String snapshotReplicationRole) {
    this.snapshotReplicationRole = snapshotReplicationRole;
    return this;
  }

   /**
   * Get snapshotReplicationRole
   * @return snapshotReplicationRole
  **/
  @Schema(description = "")
  public String getSnapshotReplicationRole() {
    return snapshotReplicationRole;
  }

  public void setSnapshotReplicationRole(String snapshotReplicationRole) {
    this.snapshotReplicationRole = snapshotReplicationRole;
  }

  public Volume snapshotReplicationStatus(String snapshotReplicationStatus) {
    this.snapshotReplicationStatus = snapshotReplicationStatus;
    return this;
  }

   /**
   * Get snapshotReplicationStatus
   * @return snapshotReplicationStatus
  **/
  @Schema(description = "")
  public String getSnapshotReplicationStatus() {
    return snapshotReplicationStatus;
  }

  public void setSnapshotReplicationStatus(String snapshotReplicationStatus) {
    this.snapshotReplicationStatus = snapshotReplicationStatus;
  }

  public Volume sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public Volume sourceUuid(String sourceUuid) {
    this.sourceUuid = sourceUuid;
    return this;
  }

   /**
   * Get sourceUuid
   * @return sourceUuid
  **/
  @Schema(description = "")
  public String getSourceUuid() {
    return sourceUuid;
  }

  public void setSourceUuid(String sourceUuid) {
    this.sourceUuid = sourceUuid;
  }

  public Volume status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Volume trashResource(TrashResourceNestview trashResource) {
    this.trashResource = trashResource;
    return this;
  }

   /**
   * Get trashResource
   * @return trashResource
  **/
  @Schema(description = "")
  public TrashResourceNestview getTrashResource() {
    return trashResource;
  }

  public void setTrashResource(TrashResourceNestview trashResource) {
    this.trashResource = trashResource;
  }

  public Volume uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public Volume update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }

  public Volume volumeName(String volumeName) {
    this.volumeName = volumeName;
    return this;
  }

   /**
   * Get volumeName
   * @return volumeName
  **/
  @Schema(description = "")
  public String getVolumeName() {
    return volumeName;
  }

  public void setVolumeName(String volumeName) {
    this.volumeName = volumeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Volume volume = (Volume) o;
    return Objects.equals(this.accessPath, volume.accessPath) &&
        Objects.equals(this.actionStatus, volume.actionStatus) &&
        Objects.equals(this.allocatedSize, volume.allocatedSize) &&
        Objects.equals(this.aluaEnabled, volume.aluaEnabled) &&
        Objects.equals(this.blockSnapshotNum, volume.blockSnapshotNum) &&
        Objects.equals(this.blockVolumeGroup, volume.blockVolumeGroup) &&
        Objects.equals(this.clientGroupNum, volume.clientGroupNum) &&
        Objects.equals(this.cloudPlatform, volume.cloudPlatform) &&
        Objects.equals(this.cluster, volume.cluster) &&
        Objects.equals(this.crcCheck, volume.crcCheck) &&
        Objects.equals(this.create, volume.create) &&
        Objects.equals(this.description, volume.description) &&
        Objects.equals(this.dpBlockBackupPolicyNum, volume.dpBlockBackupPolicyNum) &&
        Objects.equals(this.dpBlockReplicationPolicy, volume.dpBlockReplicationPolicy) &&
        Objects.equals(this.dpBlockSnapshotPolicy, volume.dpBlockSnapshotPolicy) &&
        Objects.equals(this.flattened, volume.flattened) &&
        Objects.equals(this.format, volume.format) &&
        Objects.equals(this.hidden, volume.hidden) &&
        Objects.equals(this.id, volume.id) &&
        Objects.equals(this.imageId, volume.imageId) &&
        Objects.equals(this.latestSnapshotTime, volume.latestSnapshotTime) &&
        Objects.equals(this.migrationStripes, volume.migrationStripes) &&
        Objects.equals(this.name, volume.name) &&
        Objects.equals(this.originalName, volume.originalName) &&
        Objects.equals(this.originalVolumeName, volume.originalVolumeName) &&
        Objects.equals(this.passive, volume.passive) &&
        Objects.equals(this.performancePriority, volume.performancePriority) &&
        Objects.equals(this.pool, volume.pool) &&
        Objects.equals(this.progress, volume.progress) &&
        Objects.equals(this.qos, volume.qos) &&
        Objects.equals(this.qosEnabled, volume.qosEnabled) &&
        Objects.equals(this.rbdClient, volume.rbdClient) &&
        Objects.equals(this.recycled, volume.recycled) &&
        Objects.equals(this.remoteCluster, volume.remoteCluster) &&
        Objects.equals(this.replicationDest, volume.replicationDest) &&
        Objects.equals(this.replicationPool, volume.replicationPool) &&
        Objects.equals(this.replicationPoolId, volume.replicationPoolId) &&
        Objects.equals(this.replicationPoolName, volume.replicationPoolName) &&
        Objects.equals(this.replicationRole, volume.replicationRole) &&
        Objects.equals(this.replicationStatus, volume.replicationStatus) &&
        Objects.equals(this.replicationVersion, volume.replicationVersion) &&
        Objects.equals(this.replicationVolume, volume.replicationVolume) &&
        Objects.equals(this.replicationVolumeId, volume.replicationVolumeId) &&
        Objects.equals(this.replicationVolumeName, volume.replicationVolumeName) &&
        Objects.equals(this.size, volume.size) &&
        Objects.equals(this.sn, volume.sn) &&
        Objects.equals(this.snapshot, volume.snapshot) &&
        Objects.equals(this.snapshotReplicationRole, volume.snapshotReplicationRole) &&
        Objects.equals(this.snapshotReplicationStatus, volume.snapshotReplicationStatus) &&
        Objects.equals(this.sourceType, volume.sourceType) &&
        Objects.equals(this.sourceUuid, volume.sourceUuid) &&
        Objects.equals(this.status, volume.status) &&
        Objects.equals(this.trashResource, volume.trashResource) &&
        Objects.equals(this.uid, volume.uid) &&
        Objects.equals(this.update, volume.update) &&
        Objects.equals(this.volumeName, volume.volumeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessPath, actionStatus, allocatedSize, aluaEnabled, blockSnapshotNum, blockVolumeGroup, clientGroupNum, cloudPlatform, cluster, crcCheck, create, description, dpBlockBackupPolicyNum, dpBlockReplicationPolicy, dpBlockSnapshotPolicy, flattened, format, hidden, id, imageId, latestSnapshotTime, migrationStripes, name, originalName, originalVolumeName, passive, performancePriority, pool, progress, qos, qosEnabled, rbdClient, recycled, remoteCluster, replicationDest, replicationPool, replicationPoolId, replicationPoolName, replicationRole, replicationStatus, replicationVersion, replicationVolume, replicationVolumeId, replicationVolumeName, size, sn, snapshot, snapshotReplicationRole, snapshotReplicationStatus, sourceType, sourceUuid, status, trashResource, uid, update, volumeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Volume {\n");
    
    sb.append("    accessPath: ").append(toIndentedString(accessPath)).append("\n");
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    allocatedSize: ").append(toIndentedString(allocatedSize)).append("\n");
    sb.append("    aluaEnabled: ").append(toIndentedString(aluaEnabled)).append("\n");
    sb.append("    blockSnapshotNum: ").append(toIndentedString(blockSnapshotNum)).append("\n");
    sb.append("    blockVolumeGroup: ").append(toIndentedString(blockVolumeGroup)).append("\n");
    sb.append("    clientGroupNum: ").append(toIndentedString(clientGroupNum)).append("\n");
    sb.append("    cloudPlatform: ").append(toIndentedString(cloudPlatform)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    crcCheck: ").append(toIndentedString(crcCheck)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dpBlockBackupPolicyNum: ").append(toIndentedString(dpBlockBackupPolicyNum)).append("\n");
    sb.append("    dpBlockReplicationPolicy: ").append(toIndentedString(dpBlockReplicationPolicy)).append("\n");
    sb.append("    dpBlockSnapshotPolicy: ").append(toIndentedString(dpBlockSnapshotPolicy)).append("\n");
    sb.append("    flattened: ").append(toIndentedString(flattened)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageId: ").append(toIndentedString(imageId)).append("\n");
    sb.append("    latestSnapshotTime: ").append(toIndentedString(latestSnapshotTime)).append("\n");
    sb.append("    migrationStripes: ").append(toIndentedString(migrationStripes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originalName: ").append(toIndentedString(originalName)).append("\n");
    sb.append("    originalVolumeName: ").append(toIndentedString(originalVolumeName)).append("\n");
    sb.append("    passive: ").append(toIndentedString(passive)).append("\n");
    sb.append("    performancePriority: ").append(toIndentedString(performancePriority)).append("\n");
    sb.append("    pool: ").append(toIndentedString(pool)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    qos: ").append(toIndentedString(qos)).append("\n");
    sb.append("    qosEnabled: ").append(toIndentedString(qosEnabled)).append("\n");
    sb.append("    rbdClient: ").append(toIndentedString(rbdClient)).append("\n");
    sb.append("    recycled: ").append(toIndentedString(recycled)).append("\n");
    sb.append("    remoteCluster: ").append(toIndentedString(remoteCluster)).append("\n");
    sb.append("    replicationDest: ").append(toIndentedString(replicationDest)).append("\n");
    sb.append("    replicationPool: ").append(toIndentedString(replicationPool)).append("\n");
    sb.append("    replicationPoolId: ").append(toIndentedString(replicationPoolId)).append("\n");
    sb.append("    replicationPoolName: ").append(toIndentedString(replicationPoolName)).append("\n");
    sb.append("    replicationRole: ").append(toIndentedString(replicationRole)).append("\n");
    sb.append("    replicationStatus: ").append(toIndentedString(replicationStatus)).append("\n");
    sb.append("    replicationVersion: ").append(toIndentedString(replicationVersion)).append("\n");
    sb.append("    replicationVolume: ").append(toIndentedString(replicationVolume)).append("\n");
    sb.append("    replicationVolumeId: ").append(toIndentedString(replicationVolumeId)).append("\n");
    sb.append("    replicationVolumeName: ").append(toIndentedString(replicationVolumeName)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sn: ").append(toIndentedString(sn)).append("\n");
    sb.append("    snapshot: ").append(toIndentedString(snapshot)).append("\n");
    sb.append("    snapshotReplicationRole: ").append(toIndentedString(snapshotReplicationRole)).append("\n");
    sb.append("    snapshotReplicationStatus: ").append(toIndentedString(snapshotReplicationStatus)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    sourceUuid: ").append(toIndentedString(sourceUuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    trashResource: ").append(toIndentedString(trashResource)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    volumeName: ").append(toIndentedString(volumeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
