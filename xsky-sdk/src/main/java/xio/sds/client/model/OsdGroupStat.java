/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * OsdGroupStat defines stat of a osd group
 */
@Schema(description = "OsdGroupStat defines stat of a osd group")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OsdGroupStat {
  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("max_available_kbyte")
  private Long maxAvailableKbyte = null;

  @SerializedName("min_available_kbyte")
  private Long minAvailableKbyte = null;

  @SerializedName("total_kbyte")
  private Long totalKbyte = null;

  @SerializedName("used_kbyte")
  private Long usedKbyte = null;

  public OsdGroupStat create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OsdGroupStat maxAvailableKbyte(Long maxAvailableKbyte) {
    this.maxAvailableKbyte = maxAvailableKbyte;
    return this;
  }

   /**
   * Get maxAvailableKbyte
   * @return maxAvailableKbyte
  **/
  @Schema(description = "")
  public Long getMaxAvailableKbyte() {
    return maxAvailableKbyte;
  }

  public void setMaxAvailableKbyte(Long maxAvailableKbyte) {
    this.maxAvailableKbyte = maxAvailableKbyte;
  }

  public OsdGroupStat minAvailableKbyte(Long minAvailableKbyte) {
    this.minAvailableKbyte = minAvailableKbyte;
    return this;
  }

   /**
   * Get minAvailableKbyte
   * @return minAvailableKbyte
  **/
  @Schema(description = "")
  public Long getMinAvailableKbyte() {
    return minAvailableKbyte;
  }

  public void setMinAvailableKbyte(Long minAvailableKbyte) {
    this.minAvailableKbyte = minAvailableKbyte;
  }

  public OsdGroupStat totalKbyte(Long totalKbyte) {
    this.totalKbyte = totalKbyte;
    return this;
  }

   /**
   * Get totalKbyte
   * @return totalKbyte
  **/
  @Schema(description = "")
  public Long getTotalKbyte() {
    return totalKbyte;
  }

  public void setTotalKbyte(Long totalKbyte) {
    this.totalKbyte = totalKbyte;
  }

  public OsdGroupStat usedKbyte(Long usedKbyte) {
    this.usedKbyte = usedKbyte;
    return this;
  }

   /**
   * Get usedKbyte
   * @return usedKbyte
  **/
  @Schema(description = "")
  public Long getUsedKbyte() {
    return usedKbyte;
  }

  public void setUsedKbyte(Long usedKbyte) {
    this.usedKbyte = usedKbyte;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OsdGroupStat osdGroupStat = (OsdGroupStat) o;
    return Objects.equals(this.create, osdGroupStat.create) &&
        Objects.equals(this.maxAvailableKbyte, osdGroupStat.maxAvailableKbyte) &&
        Objects.equals(this.minAvailableKbyte, osdGroupStat.minAvailableKbyte) &&
        Objects.equals(this.totalKbyte, osdGroupStat.totalKbyte) &&
        Objects.equals(this.usedKbyte, osdGroupStat.usedKbyte);
  }

  @Override
  public int hashCode() {
    return Objects.hash(create, maxAvailableKbyte, minAvailableKbyte, totalKbyte, usedKbyte);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OsdGroupStat {\n");
    
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    maxAvailableKbyte: ").append(toIndentedString(maxAvailableKbyte)).append("\n");
    sb.append("    minAvailableKbyte: ").append(toIndentedString(minAvailableKbyte)).append("\n");
    sb.append("    totalKbyte: ").append(toIndentedString(totalKbyte)).append("\n");
    sb.append("    usedKbyte: ").append(toIndentedString(usedKbyte)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
