/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.OutsideResourceInfo;
/**
 * RelatedResourceInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class RelatedResourceInfo {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("outsides")
  private List<OutsideResourceInfo> outsides = null;

  @SerializedName("related_resources")
  private List<String> relatedResources = null;

  @SerializedName("resource")
  private String resource = null;

  public RelatedResourceInfo id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public RelatedResourceInfo outsides(List<OutsideResourceInfo> outsides) {
    this.outsides = outsides;
    return this;
  }

  public RelatedResourceInfo addOutsidesItem(OutsideResourceInfo outsidesItem) {
    if (this.outsides == null) {
      this.outsides = new ArrayList<OutsideResourceInfo>();
    }
    this.outsides.add(outsidesItem);
    return this;
  }

   /**
   * Get outsides
   * @return outsides
  **/
  @Schema(description = "")
  public List<OutsideResourceInfo> getOutsides() {
    return outsides;
  }

  public void setOutsides(List<OutsideResourceInfo> outsides) {
    this.outsides = outsides;
  }

  public RelatedResourceInfo relatedResources(List<String> relatedResources) {
    this.relatedResources = relatedResources;
    return this;
  }

  public RelatedResourceInfo addRelatedResourcesItem(String relatedResourcesItem) {
    if (this.relatedResources == null) {
      this.relatedResources = new ArrayList<String>();
    }
    this.relatedResources.add(relatedResourcesItem);
    return this;
  }

   /**
   * Get relatedResources
   * @return relatedResources
  **/
  @Schema(description = "")
  public List<String> getRelatedResources() {
    return relatedResources;
  }

  public void setRelatedResources(List<String> relatedResources) {
    this.relatedResources = relatedResources;
  }

  public RelatedResourceInfo resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Get resource
   * @return resource
  **/
  @Schema(description = "")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RelatedResourceInfo relatedResourceInfo = (RelatedResourceInfo) o;
    return Objects.equals(this.id, relatedResourceInfo.id) &&
        Objects.equals(this.outsides, relatedResourceInfo.outsides) &&
        Objects.equals(this.relatedResources, relatedResourceInfo.relatedResources) &&
        Objects.equals(this.resource, relatedResourceInfo.resource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, outsides, relatedResources, resource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RelatedResourceInfo {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    outsides: ").append(toIndentedString(outsides)).append("\n");
    sb.append("    relatedResources: ").append(toIndentedString(relatedResources)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
