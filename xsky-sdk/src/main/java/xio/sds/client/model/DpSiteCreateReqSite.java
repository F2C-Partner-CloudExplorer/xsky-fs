/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import xio.sds.client.model.DpSiteConfig;
/**
 * DpSiteCreateReqSite
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DpSiteCreateReqSite {
  @SerializedName("address")
  private String address = null;

  @SerializedName("config")
  private DpSiteConfig config = null;

  @SerializedName("crypto_key_id")
  private Long cryptoKeyId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("platform")
  private String platform = null;

  @SerializedName("protection_type")
  private String protectionType = null;

  @SerializedName("remote_cluster_id")
  private Long remoteClusterId = null;

  @SerializedName("service")
  private String service = null;

  public DpSiteCreateReqSite address(String address) {
    this.address = address;
    return this;
  }

   /**
   * site address
   * @return address
  **/
  @Schema(description = "site address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public DpSiteCreateReqSite config(DpSiteConfig config) {
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @Schema(required = true, description = "")
  public DpSiteConfig getConfig() {
    return config;
  }

  public void setConfig(DpSiteConfig config) {
    this.config = config;
  }

  public DpSiteCreateReqSite cryptoKeyId(Long cryptoKeyId) {
    this.cryptoKeyId = cryptoKeyId;
    return this;
  }

   /**
   * crypto key
   * @return cryptoKeyId
  **/
  @Schema(description = "crypto key")
  public Long getCryptoKeyId() {
    return cryptoKeyId;
  }

  public void setCryptoKeyId(Long cryptoKeyId) {
    this.cryptoKeyId = cryptoKeyId;
  }

  public DpSiteCreateReqSite name(String name) {
    this.name = name;
    return this;
  }

   /**
   * site name
   * @return name
  **/
  @Schema(required = true, description = "site name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DpSiteCreateReqSite platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * platform of site
   * @return platform
  **/
  @Schema(required = true, description = "platform of site")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public DpSiteCreateReqSite protectionType(String protectionType) {
    this.protectionType = protectionType;
    return this;
  }

   /**
   * protection type
   * @return protectionType
  **/
  @Schema(required = true, description = "protection type")
  public String getProtectionType() {
    return protectionType;
  }

  public void setProtectionType(String protectionType) {
    this.protectionType = protectionType;
  }

  public DpSiteCreateReqSite remoteClusterId(Long remoteClusterId) {
    this.remoteClusterId = remoteClusterId;
    return this;
  }

   /**
   * remote cluster
   * @return remoteClusterId
  **/
  @Schema(description = "remote cluster")
  public Long getRemoteClusterId() {
    return remoteClusterId;
  }

  public void setRemoteClusterId(Long remoteClusterId) {
    this.remoteClusterId = remoteClusterId;
  }

  public DpSiteCreateReqSite service(String service) {
    this.service = service;
    return this;
  }

   /**
   * service of site
   * @return service
  **/
  @Schema(required = true, description = "service of site")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DpSiteCreateReqSite dpSiteCreateReqSite = (DpSiteCreateReqSite) o;
    return Objects.equals(this.address, dpSiteCreateReqSite.address) &&
        Objects.equals(this.config, dpSiteCreateReqSite.config) &&
        Objects.equals(this.cryptoKeyId, dpSiteCreateReqSite.cryptoKeyId) &&
        Objects.equals(this.name, dpSiteCreateReqSite.name) &&
        Objects.equals(this.platform, dpSiteCreateReqSite.platform) &&
        Objects.equals(this.protectionType, dpSiteCreateReqSite.protectionType) &&
        Objects.equals(this.remoteClusterId, dpSiteCreateReqSite.remoteClusterId) &&
        Objects.equals(this.service, dpSiteCreateReqSite.service);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, config, cryptoKeyId, name, platform, protectionType, remoteClusterId, service);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DpSiteCreateReqSite {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    cryptoKeyId: ").append(toIndentedString(cryptoKeyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    protectionType: ").append(toIndentedString(protectionType)).append("\n");
    sb.append("    remoteClusterId: ").append(toIndentedString(remoteClusterId)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
