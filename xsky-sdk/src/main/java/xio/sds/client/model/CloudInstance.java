/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.CloudDatacenterNestview;
import xio.sds.client.model.CloudPlatformNestview;
import xio.sds.client.model.ClusterNestview;
/**
 * CloudInstance contains information of a cloud instance and it&#x27;s stats.
 */
@Schema(description = "CloudInstance contains information of a cloud instance and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class CloudInstance {
  @SerializedName("cloud_datacenter")
  private CloudDatacenterNestview cloudDatacenter = null;

  @SerializedName("cloud_instance_id")
  private String cloudInstanceId = null;

  @SerializedName("cloud_platform")
  private CloudPlatformNestview cloudPlatform = null;

  @SerializedName("cloud_volume_num")
  private Long cloudVolumeNum = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("cores")
  private Long cores = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("hostname")
  private String hostname = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("memory_kbyte")
  private Long memoryKbyte = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("root_device_type")
  private String rootDeviceType = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public CloudInstance cloudDatacenter(CloudDatacenterNestview cloudDatacenter) {
    this.cloudDatacenter = cloudDatacenter;
    return this;
  }

   /**
   * Get cloudDatacenter
   * @return cloudDatacenter
  **/
  @Schema(description = "")
  public CloudDatacenterNestview getCloudDatacenter() {
    return cloudDatacenter;
  }

  public void setCloudDatacenter(CloudDatacenterNestview cloudDatacenter) {
    this.cloudDatacenter = cloudDatacenter;
  }

  public CloudInstance cloudInstanceId(String cloudInstanceId) {
    this.cloudInstanceId = cloudInstanceId;
    return this;
  }

   /**
   * Get cloudInstanceId
   * @return cloudInstanceId
  **/
  @Schema(description = "")
  public String getCloudInstanceId() {
    return cloudInstanceId;
  }

  public void setCloudInstanceId(String cloudInstanceId) {
    this.cloudInstanceId = cloudInstanceId;
  }

  public CloudInstance cloudPlatform(CloudPlatformNestview cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
    return this;
  }

   /**
   * Get cloudPlatform
   * @return cloudPlatform
  **/
  @Schema(description = "")
  public CloudPlatformNestview getCloudPlatform() {
    return cloudPlatform;
  }

  public void setCloudPlatform(CloudPlatformNestview cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
  }

  public CloudInstance cloudVolumeNum(Long cloudVolumeNum) {
    this.cloudVolumeNum = cloudVolumeNum;
    return this;
  }

   /**
   * Get cloudVolumeNum
   * @return cloudVolumeNum
  **/
  @Schema(description = "")
  public Long getCloudVolumeNum() {
    return cloudVolumeNum;
  }

  public void setCloudVolumeNum(Long cloudVolumeNum) {
    this.cloudVolumeNum = cloudVolumeNum;
  }

  public CloudInstance cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public CloudInstance cores(Long cores) {
    this.cores = cores;
    return this;
  }

   /**
   * Get cores
   * @return cores
  **/
  @Schema(description = "")
  public Long getCores() {
    return cores;
  }

  public void setCores(Long cores) {
    this.cores = cores;
  }

  public CloudInstance create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public CloudInstance hostname(String hostname) {
    this.hostname = hostname;
    return this;
  }

   /**
   * Get hostname
   * @return hostname
  **/
  @Schema(description = "")
  public String getHostname() {
    return hostname;
  }

  public void setHostname(String hostname) {
    this.hostname = hostname;
  }

  public CloudInstance id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CloudInstance memoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
    return this;
  }

   /**
   * Get memoryKbyte
   * @return memoryKbyte
  **/
  @Schema(description = "")
  public Long getMemoryKbyte() {
    return memoryKbyte;
  }

  public void setMemoryKbyte(Long memoryKbyte) {
    this.memoryKbyte = memoryKbyte;
  }

  public CloudInstance name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CloudInstance rootDeviceType(String rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
    return this;
  }

   /**
   * Get rootDeviceType
   * @return rootDeviceType
  **/
  @Schema(description = "")
  public String getRootDeviceType() {
    return rootDeviceType;
  }

  public void setRootDeviceType(String rootDeviceType) {
    this.rootDeviceType = rootDeviceType;
  }

  public CloudInstance update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudInstance cloudInstance = (CloudInstance) o;
    return Objects.equals(this.cloudDatacenter, cloudInstance.cloudDatacenter) &&
        Objects.equals(this.cloudInstanceId, cloudInstance.cloudInstanceId) &&
        Objects.equals(this.cloudPlatform, cloudInstance.cloudPlatform) &&
        Objects.equals(this.cloudVolumeNum, cloudInstance.cloudVolumeNum) &&
        Objects.equals(this.cluster, cloudInstance.cluster) &&
        Objects.equals(this.cores, cloudInstance.cores) &&
        Objects.equals(this.create, cloudInstance.create) &&
        Objects.equals(this.hostname, cloudInstance.hostname) &&
        Objects.equals(this.id, cloudInstance.id) &&
        Objects.equals(this.memoryKbyte, cloudInstance.memoryKbyte) &&
        Objects.equals(this.name, cloudInstance.name) &&
        Objects.equals(this.rootDeviceType, cloudInstance.rootDeviceType) &&
        Objects.equals(this.update, cloudInstance.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudDatacenter, cloudInstanceId, cloudPlatform, cloudVolumeNum, cluster, cores, create, hostname, id, memoryKbyte, name, rootDeviceType, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudInstance {\n");
    
    sb.append("    cloudDatacenter: ").append(toIndentedString(cloudDatacenter)).append("\n");
    sb.append("    cloudInstanceId: ").append(toIndentedString(cloudInstanceId)).append("\n");
    sb.append("    cloudPlatform: ").append(toIndentedString(cloudPlatform)).append("\n");
    sb.append("    cloudVolumeNum: ").append(toIndentedString(cloudVolumeNum)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    cores: ").append(toIndentedString(cores)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    memoryKbyte: ").append(toIndentedString(memoryKbyte)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rootDeviceType: ").append(toIndentedString(rootDeviceType)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
