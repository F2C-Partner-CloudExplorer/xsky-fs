/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * DfsGatewayGroupUpdateTypesReqGatewayGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsGatewayGroupUpdateTypesReqGatewayGroup {
  @SerializedName("ad_id")
  private Long adId = null;

  @SerializedName("encoding")
  private String encoding = null;

  @SerializedName("hdfs_securities")
  private List<String> hdfsSecurities = null;

  @SerializedName("ldap_id")
  private Long ldapId = null;

  @SerializedName("nfs_versions")
  private List<String> nfsVersions = null;

  @SerializedName("securities")
  private List<String> securities = null;

  @SerializedName("smb1_enabled")
  private Boolean smb1Enabled = null;

  @SerializedName("smb_browseable")
  private Boolean smbBrowseable = null;

  @SerializedName("smb_homes")
  private Boolean smbHomes = null;

  @SerializedName("smb_ports")
  private List<Long> smbPorts = null;

  @SerializedName("smb_type")
  private String smbType = null;

  @SerializedName("types")
  private List<String> types = null;

  public DfsGatewayGroupUpdateTypesReqGatewayGroup adId(Long adId) {
    this.adId = adId;
    return this;
  }

   /**
   * active directory id
   * @return adId
  **/
  @Schema(description = "active directory id")
  public Long getAdId() {
    return adId;
  }

  public void setAdId(Long adId) {
    this.adId = adId;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup encoding(String encoding) {
    this.encoding = encoding;
    return this;
  }

   /**
   * ftp encoding format, default is utf8
   * @return encoding
  **/
  @Schema(description = "ftp encoding format, default is utf8")
  public String getEncoding() {
    return encoding;
  }

  public void setEncoding(String encoding) {
    this.encoding = encoding;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup hdfsSecurities(List<String> hdfsSecurities) {
    this.hdfsSecurities = hdfsSecurities;
    return this;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup addHdfsSecuritiesItem(String hdfsSecuritiesItem) {
    if (this.hdfsSecurities == null) {
      this.hdfsSecurities = new ArrayList<String>();
    }
    this.hdfsSecurities.add(hdfsSecuritiesItem);
    return this;
  }

   /**
   * security type for hdfs (local, ldap)
   * @return hdfsSecurities
  **/
  @Schema(description = "security type for hdfs (local, ldap)")
  public List<String> getHdfsSecurities() {
    return hdfsSecurities;
  }

  public void setHdfsSecurities(List<String> hdfsSecurities) {
    this.hdfsSecurities = hdfsSecurities;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup ldapId(Long ldapId) {
    this.ldapId = ldapId;
    return this;
  }

   /**
   * ldap id
   * @return ldapId
  **/
  @Schema(description = "ldap id")
  public Long getLdapId() {
    return ldapId;
  }

  public void setLdapId(Long ldapId) {
    this.ldapId = ldapId;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup nfsVersions(List<String> nfsVersions) {
    this.nfsVersions = nfsVersions;
    return this;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup addNfsVersionsItem(String nfsVersionsItem) {
    if (this.nfsVersions == null) {
      this.nfsVersions = new ArrayList<String>();
    }
    this.nfsVersions.add(nfsVersionsItem);
    return this;
  }

   /**
   * nfs versions supported
   * @return nfsVersions
  **/
  @Schema(description = "nfs versions supported")
  public List<String> getNfsVersions() {
    return nfsVersions;
  }

  public void setNfsVersions(List<String> nfsVersions) {
    this.nfsVersions = nfsVersions;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup securities(List<String> securities) {
    this.securities = securities;
    return this;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup addSecuritiesItem(String securitiesItem) {
    if (this.securities == null) {
      this.securities = new ArrayList<String>();
    }
    this.securities.add(securitiesItem);
    return this;
  }

   /**
   * security type for smb/quota (local, ad, ldap)
   * @return securities
  **/
  @Schema(description = "security type for smb/quota (local, ad, ldap)")
  public List<String> getSecurities() {
    return securities;
  }

  public void setSecurities(List<String> securities) {
    this.securities = securities;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup smb1Enabled(Boolean smb1Enabled) {
    this.smb1Enabled = smb1Enabled;
    return this;
  }

   /**
   * smb version 1.0 enabled
   * @return smb1Enabled
  **/
  @Schema(description = "smb version 1.0 enabled")
  public Boolean isSmb1Enabled() {
    return smb1Enabled;
  }

  public void setSmb1Enabled(Boolean smb1Enabled) {
    this.smb1Enabled = smb1Enabled;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup smbBrowseable(Boolean smbBrowseable) {
    this.smbBrowseable = smbBrowseable;
    return this;
  }

   /**
   * smb browseable enable
   * @return smbBrowseable
  **/
  @Schema(description = "smb browseable enable")
  public Boolean isSmbBrowseable() {
    return smbBrowseable;
  }

  public void setSmbBrowseable(Boolean smbBrowseable) {
    this.smbBrowseable = smbBrowseable;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup smbHomes(Boolean smbHomes) {
    this.smbHomes = smbHomes;
    return this;
  }

   /**
   * smb Homes share enable
   * @return smbHomes
  **/
  @Schema(description = "smb Homes share enable")
  public Boolean isSmbHomes() {
    return smbHomes;
  }

  public void setSmbHomes(Boolean smbHomes) {
    this.smbHomes = smbHomes;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup smbPorts(List<Long> smbPorts) {
    this.smbPorts = smbPorts;
    return this;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup addSmbPortsItem(Long smbPortsItem) {
    if (this.smbPorts == null) {
      this.smbPorts = new ArrayList<Long>();
    }
    this.smbPorts.add(smbPortsItem);
    return this;
  }

   /**
   * smb ports
   * @return smbPorts
  **/
  @Schema(description = "smb ports")
  public List<Long> getSmbPorts() {
    return smbPorts;
  }

  public void setSmbPorts(List<Long> smbPorts) {
    this.smbPorts = smbPorts;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup smbType(String smbType) {
    this.smbType = smbType;
    return this;
  }

   /**
   * smb service type (smb, xsmb)
   * @return smbType
  **/
  @Schema(description = "smb service type (smb, xsmb)")
  public String getSmbType() {
    return smbType;
  }

  public void setSmbType(String smbType) {
    this.smbType = smbType;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup types(List<String> types) {
    this.types = types;
    return this;
  }

  public DfsGatewayGroupUpdateTypesReqGatewayGroup addTypesItem(String typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<String>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * types of supported
   * @return types
  **/
  @Schema(description = "types of supported")
  public List<String> getTypes() {
    return types;
  }

  public void setTypes(List<String> types) {
    this.types = types;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsGatewayGroupUpdateTypesReqGatewayGroup dfsGatewayGroupUpdateTypesReqGatewayGroup = (DfsGatewayGroupUpdateTypesReqGatewayGroup) o;
    return Objects.equals(this.adId, dfsGatewayGroupUpdateTypesReqGatewayGroup.adId) &&
        Objects.equals(this.encoding, dfsGatewayGroupUpdateTypesReqGatewayGroup.encoding) &&
        Objects.equals(this.hdfsSecurities, dfsGatewayGroupUpdateTypesReqGatewayGroup.hdfsSecurities) &&
        Objects.equals(this.ldapId, dfsGatewayGroupUpdateTypesReqGatewayGroup.ldapId) &&
        Objects.equals(this.nfsVersions, dfsGatewayGroupUpdateTypesReqGatewayGroup.nfsVersions) &&
        Objects.equals(this.securities, dfsGatewayGroupUpdateTypesReqGatewayGroup.securities) &&
        Objects.equals(this.smb1Enabled, dfsGatewayGroupUpdateTypesReqGatewayGroup.smb1Enabled) &&
        Objects.equals(this.smbBrowseable, dfsGatewayGroupUpdateTypesReqGatewayGroup.smbBrowseable) &&
        Objects.equals(this.smbHomes, dfsGatewayGroupUpdateTypesReqGatewayGroup.smbHomes) &&
        Objects.equals(this.smbPorts, dfsGatewayGroupUpdateTypesReqGatewayGroup.smbPorts) &&
        Objects.equals(this.smbType, dfsGatewayGroupUpdateTypesReqGatewayGroup.smbType) &&
        Objects.equals(this.types, dfsGatewayGroupUpdateTypesReqGatewayGroup.types);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adId, encoding, hdfsSecurities, ldapId, nfsVersions, securities, smb1Enabled, smbBrowseable, smbHomes, smbPorts, smbType, types);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsGatewayGroupUpdateTypesReqGatewayGroup {\n");
    
    sb.append("    adId: ").append(toIndentedString(adId)).append("\n");
    sb.append("    encoding: ").append(toIndentedString(encoding)).append("\n");
    sb.append("    hdfsSecurities: ").append(toIndentedString(hdfsSecurities)).append("\n");
    sb.append("    ldapId: ").append(toIndentedString(ldapId)).append("\n");
    sb.append("    nfsVersions: ").append(toIndentedString(nfsVersions)).append("\n");
    sb.append("    securities: ").append(toIndentedString(securities)).append("\n");
    sb.append("    smb1Enabled: ").append(toIndentedString(smb1Enabled)).append("\n");
    sb.append("    smbBrowseable: ").append(toIndentedString(smbBrowseable)).append("\n");
    sb.append("    smbHomes: ").append(toIndentedString(smbHomes)).append("\n");
    sb.append("    smbPorts: ").append(toIndentedString(smbPorts)).append("\n");
    sb.append("    smbType: ").append(toIndentedString(smbType)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
