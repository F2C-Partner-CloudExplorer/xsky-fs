/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
/**
 * OSZonePair contains relation info from source zone to target zone +X:model:generate;order_by&#x3D;ID; +X:benchmark:
 */
@Schema(description = "OSZonePair contains relation info from source zone to target zone +X:model:generate;order_by=ID; +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OSZonePair {
  @SerializedName("ID")
  private Long ID = null;

  @SerializedName("clock_diff")
  private Long clockDiff = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("source_zone_uuid")
  private String sourceZoneUuid = null;

  @SerializedName("target_zone_uuid")
  private String targetZoneUuid = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public OSZonePair ID(Long ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public Long getID() {
    return ID;
  }

  public void setID(Long ID) {
    this.ID = ID;
  }

  public OSZonePair clockDiff(Long clockDiff) {
    this.clockDiff = clockDiff;
    return this;
  }

   /**
   * Get clockDiff
   * @return clockDiff
  **/
  @Schema(description = "")
  public Long getClockDiff() {
    return clockDiff;
  }

  public void setClockDiff(Long clockDiff) {
    this.clockDiff = clockDiff;
  }

  public OSZonePair cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public OSZonePair create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public OSZonePair sourceZoneUuid(String sourceZoneUuid) {
    this.sourceZoneUuid = sourceZoneUuid;
    return this;
  }

   /**
   * Get sourceZoneUuid
   * @return sourceZoneUuid
  **/
  @Schema(description = "")
  public String getSourceZoneUuid() {
    return sourceZoneUuid;
  }

  public void setSourceZoneUuid(String sourceZoneUuid) {
    this.sourceZoneUuid = sourceZoneUuid;
  }

  public OSZonePair targetZoneUuid(String targetZoneUuid) {
    this.targetZoneUuid = targetZoneUuid;
    return this;
  }

   /**
   * Get targetZoneUuid
   * @return targetZoneUuid
  **/
  @Schema(description = "")
  public String getTargetZoneUuid() {
    return targetZoneUuid;
  }

  public void setTargetZoneUuid(String targetZoneUuid) {
    this.targetZoneUuid = targetZoneUuid;
  }

  public OSZonePair update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSZonePair osZonePair = (OSZonePair) o;
    return Objects.equals(this.ID, osZonePair.ID) &&
        Objects.equals(this.clockDiff, osZonePair.clockDiff) &&
        Objects.equals(this.cluster, osZonePair.cluster) &&
        Objects.equals(this.create, osZonePair.create) &&
        Objects.equals(this.sourceZoneUuid, osZonePair.sourceZoneUuid) &&
        Objects.equals(this.targetZoneUuid, osZonePair.targetZoneUuid) &&
        Objects.equals(this.update, osZonePair.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, clockDiff, cluster, create, sourceZoneUuid, targetZoneUuid, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSZonePair {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    clockDiff: ").append(toIndentedString(clockDiff)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    sourceZoneUuid: ").append(toIndentedString(sourceZoneUuid)).append("\n");
    sb.append("    targetZoneUuid: ").append(toIndentedString(targetZoneUuid)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
