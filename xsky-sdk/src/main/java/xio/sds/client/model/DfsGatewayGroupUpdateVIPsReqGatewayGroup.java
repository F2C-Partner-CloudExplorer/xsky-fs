/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * DfsGatewayGroupUpdateVIPsReqGatewayGroup
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsGatewayGroupUpdateVIPsReqGatewayGroup {
  @SerializedName("dfs_gateway_zone_id")
  private Long dfsGatewayZoneId = null;

  @SerializedName("dfs_vip_gateways")
  private List<String> dfsVipGateways = null;

  @SerializedName("dfs_vips")
  private List<String> dfsVips = null;

  public DfsGatewayGroupUpdateVIPsReqGatewayGroup dfsGatewayZoneId(Long dfsGatewayZoneId) {
    this.dfsGatewayZoneId = dfsGatewayZoneId;
    return this;
  }

   /**
   * gateway zone to which the VIP belongs
   * @return dfsGatewayZoneId
  **/
  @Schema(description = "gateway zone to which the VIP belongs")
  public Long getDfsGatewayZoneId() {
    return dfsGatewayZoneId;
  }

  public void setDfsGatewayZoneId(Long dfsGatewayZoneId) {
    this.dfsGatewayZoneId = dfsGatewayZoneId;
  }

  public DfsGatewayGroupUpdateVIPsReqGatewayGroup dfsVipGateways(List<String> dfsVipGateways) {
    this.dfsVipGateways = dfsVipGateways;
    return this;
  }

  public DfsGatewayGroupUpdateVIPsReqGatewayGroup addDfsVipGatewaysItem(String dfsVipGatewaysItem) {
    if (this.dfsVipGateways == null) {
      this.dfsVipGateways = new ArrayList<String>();
    }
    this.dfsVipGateways.add(dfsVipGatewaysItem);
    return this;
  }

   /**
   * all gateways used in VIP networks
   * @return dfsVipGateways
  **/
  @Schema(description = "all gateways used in VIP networks")
  public List<String> getDfsVipGateways() {
    return dfsVipGateways;
  }

  public void setDfsVipGateways(List<String> dfsVipGateways) {
    this.dfsVipGateways = dfsVipGateways;
  }

  public DfsGatewayGroupUpdateVIPsReqGatewayGroup dfsVips(List<String> dfsVips) {
    this.dfsVips = dfsVips;
    return this;
  }

  public DfsGatewayGroupUpdateVIPsReqGatewayGroup addDfsVipsItem(String dfsVipsItem) {
    if (this.dfsVips == null) {
      this.dfsVips = new ArrayList<String>();
    }
    this.dfsVips.add(dfsVipsItem);
    return this;
  }

   /**
   * vip info of dfs gateway group
   * @return dfsVips
  **/
  @Schema(description = "vip info of dfs gateway group")
  public List<String> getDfsVips() {
    return dfsVips;
  }

  public void setDfsVips(List<String> dfsVips) {
    this.dfsVips = dfsVips;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsGatewayGroupUpdateVIPsReqGatewayGroup dfsGatewayGroupUpdateVIPsReqGatewayGroup = (DfsGatewayGroupUpdateVIPsReqGatewayGroup) o;
    return Objects.equals(this.dfsGatewayZoneId, dfsGatewayGroupUpdateVIPsReqGatewayGroup.dfsGatewayZoneId) &&
        Objects.equals(this.dfsVipGateways, dfsGatewayGroupUpdateVIPsReqGatewayGroup.dfsVipGateways) &&
        Objects.equals(this.dfsVips, dfsGatewayGroupUpdateVIPsReqGatewayGroup.dfsVips);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dfsGatewayZoneId, dfsVipGateways, dfsVips);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsGatewayGroupUpdateVIPsReqGatewayGroup {\n");
    
    sb.append("    dfsGatewayZoneId: ").append(toIndentedString(dfsGatewayZoneId)).append("\n");
    sb.append("    dfsVipGateways: ").append(toIndentedString(dfsVipGateways)).append("\n");
    sb.append("    dfsVips: ").append(toIndentedString(dfsVips)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
