/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.Cluster;
import xio.sds.client.model.CryptoKeyNestview;
import xio.sds.client.model.DpSiteConfig;
import xio.sds.client.model.RemoteClusterNestview;
/**
 * DpSite is a site to storage data protection data
 */
@Schema(description = "DpSite is a site to storage data protection data")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DpSite {
  @SerializedName("address")
  private String address = null;

  @SerializedName("cluster")
  private Cluster cluster = null;

  @SerializedName("config")
  private DpSiteConfig config = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("crypto_key")
  private CryptoKeyNestview cryptoKey = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("platform")
  private String platform = null;

  @SerializedName("protection_type")
  private String protectionType = null;

  @SerializedName("remote_cluster")
  private RemoteClusterNestview remoteCluster = null;

  @SerializedName("service")
  private String service = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DpSite address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public DpSite cluster(Cluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public Cluster getCluster() {
    return cluster;
  }

  public void setCluster(Cluster cluster) {
    this.cluster = cluster;
  }

  public DpSite config(DpSiteConfig config) {
    this.config = config;
    return this;
  }

   /**
   * Get config
   * @return config
  **/
  @Schema(description = "")
  public DpSiteConfig getConfig() {
    return config;
  }

  public void setConfig(DpSiteConfig config) {
    this.config = config;
  }

  public DpSite create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DpSite cryptoKey(CryptoKeyNestview cryptoKey) {
    this.cryptoKey = cryptoKey;
    return this;
  }

   /**
   * Get cryptoKey
   * @return cryptoKey
  **/
  @Schema(description = "")
  public CryptoKeyNestview getCryptoKey() {
    return cryptoKey;
  }

  public void setCryptoKey(CryptoKeyNestview cryptoKey) {
    this.cryptoKey = cryptoKey;
  }

  public DpSite id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DpSite name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DpSite platform(String platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @Schema(description = "")
  public String getPlatform() {
    return platform;
  }

  public void setPlatform(String platform) {
    this.platform = platform;
  }

  public DpSite protectionType(String protectionType) {
    this.protectionType = protectionType;
    return this;
  }

   /**
   * Get protectionType
   * @return protectionType
  **/
  @Schema(description = "")
  public String getProtectionType() {
    return protectionType;
  }

  public void setProtectionType(String protectionType) {
    this.protectionType = protectionType;
  }

  public DpSite remoteCluster(RemoteClusterNestview remoteCluster) {
    this.remoteCluster = remoteCluster;
    return this;
  }

   /**
   * Get remoteCluster
   * @return remoteCluster
  **/
  @Schema(description = "")
  public RemoteClusterNestview getRemoteCluster() {
    return remoteCluster;
  }

  public void setRemoteCluster(RemoteClusterNestview remoteCluster) {
    this.remoteCluster = remoteCluster;
  }

  public DpSite service(String service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @Schema(description = "")
  public String getService() {
    return service;
  }

  public void setService(String service) {
    this.service = service;
  }

  public DpSite status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DpSite update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DpSite dpSite = (DpSite) o;
    return Objects.equals(this.address, dpSite.address) &&
        Objects.equals(this.cluster, dpSite.cluster) &&
        Objects.equals(this.config, dpSite.config) &&
        Objects.equals(this.create, dpSite.create) &&
        Objects.equals(this.cryptoKey, dpSite.cryptoKey) &&
        Objects.equals(this.id, dpSite.id) &&
        Objects.equals(this.name, dpSite.name) &&
        Objects.equals(this.platform, dpSite.platform) &&
        Objects.equals(this.protectionType, dpSite.protectionType) &&
        Objects.equals(this.remoteCluster, dpSite.remoteCluster) &&
        Objects.equals(this.service, dpSite.service) &&
        Objects.equals(this.status, dpSite.status) &&
        Objects.equals(this.update, dpSite.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, cluster, config, create, cryptoKey, id, name, platform, protectionType, remoteCluster, service, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DpSite {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    cryptoKey: ").append(toIndentedString(cryptoKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    protectionType: ").append(toIndentedString(protectionType)).append("\n");
    sb.append("    remoteCluster: ").append(toIndentedString(remoteCluster)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
