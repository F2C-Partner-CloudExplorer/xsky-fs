/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OspDataBackendParams
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspDataBackendParams {
  @SerializedName("access_key")
  private String accessKey = null;

  @SerializedName("follow_redirect")
  private Boolean followRedirect = null;

  @SerializedName("admin_user_name")
  private String adminUserName = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("attr_enabled")
  private Boolean attrEnabled = null;

  @SerializedName("admin_endpoint")
  private String adminEndpoint = null;

  @SerializedName("zonegroup_uuid")
  private String zonegroupUuid = null;

  @SerializedName("authentication")
  private String authentication = null;

  @SerializedName("storage_class")
  private String storageClass = null;

  @SerializedName("admin_password")
  private String adminPassword = null;

  @SerializedName("host_style")
  private String hostStyle = null;

  @SerializedName("keep_alive_timeout")
  private Long keepAliveTimeout = null;

  @SerializedName("secret_key")
  private String secretKey = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("user_name")
  private String userName = null;

  public OspDataBackendParams accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Get accessKey
   * @return accessKey
  **/
  @Schema(description = "")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public OspDataBackendParams followRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
    return this;
  }

   /**
   * Get followRedirect
   * @return followRedirect
  **/
  @Schema(description = "")
  public Boolean isFollowRedirect() {
    return followRedirect;
  }

  public void setFollowRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
  }

  public OspDataBackendParams adminUserName(String adminUserName) {
    this.adminUserName = adminUserName;
    return this;
  }

   /**
   * Get adminUserName
   * @return adminUserName
  **/
  @Schema(description = "")
  public String getAdminUserName() {
    return adminUserName;
  }

  public void setAdminUserName(String adminUserName) {
    this.adminUserName = adminUserName;
  }

  public OspDataBackendParams region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public OspDataBackendParams attrEnabled(Boolean attrEnabled) {
    this.attrEnabled = attrEnabled;
    return this;
  }

   /**
   * Get attrEnabled
   * @return attrEnabled
  **/
  @Schema(description = "")
  public Boolean isAttrEnabled() {
    return attrEnabled;
  }

  public void setAttrEnabled(Boolean attrEnabled) {
    this.attrEnabled = attrEnabled;
  }

  public OspDataBackendParams adminEndpoint(String adminEndpoint) {
    this.adminEndpoint = adminEndpoint;
    return this;
  }

   /**
   * Get adminEndpoint
   * @return adminEndpoint
  **/
  @Schema(description = "")
  public String getAdminEndpoint() {
    return adminEndpoint;
  }

  public void setAdminEndpoint(String adminEndpoint) {
    this.adminEndpoint = adminEndpoint;
  }

  public OspDataBackendParams zonegroupUuid(String zonegroupUuid) {
    this.zonegroupUuid = zonegroupUuid;
    return this;
  }

   /**
   * Get zonegroupUuid
   * @return zonegroupUuid
  **/
  @Schema(description = "")
  public String getZonegroupUuid() {
    return zonegroupUuid;
  }

  public void setZonegroupUuid(String zonegroupUuid) {
    this.zonegroupUuid = zonegroupUuid;
  }

  public OspDataBackendParams authentication(String authentication) {
    this.authentication = authentication;
    return this;
  }

   /**
   * Get authentication
   * @return authentication
  **/
  @Schema(description = "")
  public String getAuthentication() {
    return authentication;
  }

  public void setAuthentication(String authentication) {
    this.authentication = authentication;
  }

  public OspDataBackendParams storageClass(String storageClass) {
    this.storageClass = storageClass;
    return this;
  }

   /**
   * Get storageClass
   * @return storageClass
  **/
  @Schema(description = "")
  public String getStorageClass() {
    return storageClass;
  }

  public void setStorageClass(String storageClass) {
    this.storageClass = storageClass;
  }

  public OspDataBackendParams adminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
    return this;
  }

   /**
   * Get adminPassword
   * @return adminPassword
  **/
  @Schema(description = "")
  public String getAdminPassword() {
    return adminPassword;
  }

  public void setAdminPassword(String adminPassword) {
    this.adminPassword = adminPassword;
  }

  public OspDataBackendParams hostStyle(String hostStyle) {
    this.hostStyle = hostStyle;
    return this;
  }

   /**
   * Get hostStyle
   * @return hostStyle
  **/
  @Schema(description = "")
  public String getHostStyle() {
    return hostStyle;
  }

  public void setHostStyle(String hostStyle) {
    this.hostStyle = hostStyle;
  }

  public OspDataBackendParams keepAliveTimeout(Long keepAliveTimeout) {
    this.keepAliveTimeout = keepAliveTimeout;
    return this;
  }

   /**
   * Get keepAliveTimeout
   * @return keepAliveTimeout
  **/
  @Schema(description = "")
  public Long getKeepAliveTimeout() {
    return keepAliveTimeout;
  }

  public void setKeepAliveTimeout(Long keepAliveTimeout) {
    this.keepAliveTimeout = keepAliveTimeout;
  }

  public OspDataBackendParams secretKey(String secretKey) {
    this.secretKey = secretKey;
    return this;
  }

   /**
   * Get secretKey
   * @return secretKey
  **/
  @Schema(description = "")
  public String getSecretKey() {
    return secretKey;
  }

  public void setSecretKey(String secretKey) {
    this.secretKey = secretKey;
  }

  public OspDataBackendParams password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public OspDataBackendParams userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspDataBackendParams ospDataBackendParams = (OspDataBackendParams) o;
    return Objects.equals(this.accessKey, ospDataBackendParams.accessKey) &&
        Objects.equals(this.followRedirect, ospDataBackendParams.followRedirect) &&
        Objects.equals(this.adminUserName, ospDataBackendParams.adminUserName) &&
        Objects.equals(this.region, ospDataBackendParams.region) &&
        Objects.equals(this.attrEnabled, ospDataBackendParams.attrEnabled) &&
        Objects.equals(this.adminEndpoint, ospDataBackendParams.adminEndpoint) &&
        Objects.equals(this.zonegroupUuid, ospDataBackendParams.zonegroupUuid) &&
        Objects.equals(this.authentication, ospDataBackendParams.authentication) &&
        Objects.equals(this.storageClass, ospDataBackendParams.storageClass) &&
        Objects.equals(this.adminPassword, ospDataBackendParams.adminPassword) &&
        Objects.equals(this.hostStyle, ospDataBackendParams.hostStyle) &&
        Objects.equals(this.keepAliveTimeout, ospDataBackendParams.keepAliveTimeout) &&
        Objects.equals(this.secretKey, ospDataBackendParams.secretKey) &&
        Objects.equals(this.password, ospDataBackendParams.password) &&
        Objects.equals(this.userName, ospDataBackendParams.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessKey, followRedirect, adminUserName, region, attrEnabled, adminEndpoint, zonegroupUuid, authentication, storageClass, adminPassword, hostStyle, keepAliveTimeout, secretKey, password, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspDataBackendParams {\n");
    
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    followRedirect: ").append(toIndentedString(followRedirect)).append("\n");
    sb.append("    adminUserName: ").append(toIndentedString(adminUserName)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    attrEnabled: ").append(toIndentedString(attrEnabled)).append("\n");
    sb.append("    adminEndpoint: ").append(toIndentedString(adminEndpoint)).append("\n");
    sb.append("    zonegroupUuid: ").append(toIndentedString(zonegroupUuid)).append("\n");
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    storageClass: ").append(toIndentedString(storageClass)).append("\n");
    sb.append("    adminPassword: ").append(toIndentedString(adminPassword)).append("\n");
    sb.append("    hostStyle: ").append(toIndentedString(hostStyle)).append("\n");
    sb.append("    keepAliveTimeout: ").append(toIndentedString(keepAliveTimeout)).append("\n");
    sb.append("    secretKey: ").append(toIndentedString(secretKey)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
