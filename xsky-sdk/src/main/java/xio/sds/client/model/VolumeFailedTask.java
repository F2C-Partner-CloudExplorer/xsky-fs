/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * VolumeFailedTask
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class VolumeFailedTask {
  @SerializedName("abort")
  private Double abort = null;

  @SerializedName("busy")
  private Double busy = null;

  @SerializedName("check_cond")
  private Double checkCond = null;

  @SerializedName("resv_conflict")
  private Double resvConflict = null;

  public VolumeFailedTask abort(Double abort) {
    this.abort = abort;
    return this;
  }

   /**
   * Get abort
   * @return abort
  **/
  @Schema(description = "")
  public Double getAbort() {
    return abort;
  }

  public void setAbort(Double abort) {
    this.abort = abort;
  }

  public VolumeFailedTask busy(Double busy) {
    this.busy = busy;
    return this;
  }

   /**
   * Get busy
   * @return busy
  **/
  @Schema(description = "")
  public Double getBusy() {
    return busy;
  }

  public void setBusy(Double busy) {
    this.busy = busy;
  }

  public VolumeFailedTask checkCond(Double checkCond) {
    this.checkCond = checkCond;
    return this;
  }

   /**
   * Get checkCond
   * @return checkCond
  **/
  @Schema(description = "")
  public Double getCheckCond() {
    return checkCond;
  }

  public void setCheckCond(Double checkCond) {
    this.checkCond = checkCond;
  }

  public VolumeFailedTask resvConflict(Double resvConflict) {
    this.resvConflict = resvConflict;
    return this;
  }

   /**
   * Get resvConflict
   * @return resvConflict
  **/
  @Schema(description = "")
  public Double getResvConflict() {
    return resvConflict;
  }

  public void setResvConflict(Double resvConflict) {
    this.resvConflict = resvConflict;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VolumeFailedTask volumeFailedTask = (VolumeFailedTask) o;
    return Objects.equals(this.abort, volumeFailedTask.abort) &&
        Objects.equals(this.busy, volumeFailedTask.busy) &&
        Objects.equals(this.checkCond, volumeFailedTask.checkCond) &&
        Objects.equals(this.resvConflict, volumeFailedTask.resvConflict);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abort, busy, checkCond, resvConflict);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VolumeFailedTask {\n");
    
    sb.append("    abort: ").append(toIndentedString(abort)).append("\n");
    sb.append("    busy: ").append(toIndentedString(busy)).append("\n");
    sb.append("    checkCond: ").append(toIndentedString(checkCond)).append("\n");
    sb.append("    resvConflict: ").append(toIndentedString(resvConflict)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
