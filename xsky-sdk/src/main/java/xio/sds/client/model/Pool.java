/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.OsdGroupNestview;
import xio.sds.client.model.OsdQos;
import xio.sds.client.model.PlacementNodeNestview;
import xio.sds.client.model.PoolGCPolicyPlan;
import xio.sds.client.model.PoolNestview;
import xio.sds.client.model.ProtectionDomainNestview;
/**
 * Pool contains information of a pool and it&#x27;s stats.
 */
@Schema(description = "Pool contains information of a pool and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class Pool {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("allocated_size")
  private Long allocatedSize = null;

  @SerializedName("bind_osd_num")
  private Long bindOsdNum = null;

  @SerializedName("block_volume_num")
  private Long blockVolumeNum = null;

  @SerializedName("cache_pool")
  private PoolNestview cachePool = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("coding_chunk_num")
  private Long codingChunkNum = null;

  @SerializedName("compress_algorithm")
  private String compressAlgorithm = null;

  @SerializedName("compressed")
  private Boolean compressed = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("data_chunk_num")
  private Long dataChunkNum = null;

  @SerializedName("data_pool")
  private PoolNestview dataPool = null;

  @SerializedName("default_managed_volume_format")
  private Long defaultManagedVolumeFormat = null;

  @SerializedName("device_type")
  private String deviceType = null;

  @SerializedName("device_type_check_disabled")
  private Boolean deviceTypeCheckDisabled = null;

  @SerializedName("failure_domain_type")
  private String failureDomainType = null;

  @SerializedName("gc_qos_plan")
  private PoolGCPolicyPlan gcQosPlan = null;

  @SerializedName("hidden")
  private Boolean hidden = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("inner_pool_id")
  private Integer innerPoolId = null;

  @SerializedName("io_bypass_enabled")
  private Boolean ioBypassEnabled = null;

  @SerializedName("io_bypass_mode")
  private String ioBypassMode = null;

  @SerializedName("io_bypass_threshold")
  private Long ioBypassThreshold = null;

  @SerializedName("min_alloc_size")
  private Long minAllocSize = null;

  @SerializedName("min_osd_num")
  private Long minOsdNum = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("numa_apply_policy")
  private String numaApplyPolicy = null;

  @SerializedName("numa_bind_balanced")
  private Boolean numaBindBalanced = null;

  @SerializedName("numa_bind_policy")
  private String numaBindPolicy = null;

  @SerializedName("numa_enabled")
  private Boolean numaEnabled = null;

  @SerializedName("osd_group")
  private OsdGroupNestview osdGroup = null;

  @SerializedName("osd_num")
  private Long osdNum = null;

  @SerializedName("osd_num_per_host")
  private Long osdNumPerHost = null;

  @SerializedName("out_failure_domain_num")
  private Long outFailureDomainNum = null;

  @SerializedName("pool_id")
  private Integer poolId = null;

  @SerializedName("pool_mode")
  private String poolMode = null;

  @SerializedName("pool_name")
  private String poolName = null;

  @SerializedName("pool_role")
  private String poolRole = null;

  @SerializedName("pool_type")
  private String poolType = null;

  @SerializedName("primary_placement_node")
  private PlacementNodeNestview primaryPlacementNode = null;

  @SerializedName("product_type")
  private String productType = null;

  @SerializedName("property")
  private Map<String, Object> property = null;

  @SerializedName("protection_domain")
  private ProtectionDomainNestview protectionDomain = null;

  @SerializedName("qos")
  private OsdQos qos = null;

  @SerializedName("replicate_size")
  private Long replicateSize = null;

  @SerializedName("reserved_percent")
  private Double reservedPercent = null;

  @SerializedName("size_per_osd")
  private Long sizePerOsd = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("stretched")
  private Boolean stretched = null;

  @SerializedName("stripe_unit")
  private Long stripeUnit = null;

  @SerializedName("sub_failure_domain_type")
  private String subFailureDomainType = null;

  @SerializedName("suggested_omap_size")
  private Long suggestedOmapSize = null;

  @SerializedName("thin_provisioned")
  private Boolean thinProvisioned = null;

  @SerializedName("tier_status")
  private String tierStatus = null;

  @SerializedName("transport_mode")
  private String transportMode = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public Pool actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public Pool allocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
    return this;
  }

   /**
   * Get allocatedSize
   * @return allocatedSize
  **/
  @Schema(description = "")
  public Long getAllocatedSize() {
    return allocatedSize;
  }

  public void setAllocatedSize(Long allocatedSize) {
    this.allocatedSize = allocatedSize;
  }

  public Pool bindOsdNum(Long bindOsdNum) {
    this.bindOsdNum = bindOsdNum;
    return this;
  }

   /**
   * Get bindOsdNum
   * @return bindOsdNum
  **/
  @Schema(description = "")
  public Long getBindOsdNum() {
    return bindOsdNum;
  }

  public void setBindOsdNum(Long bindOsdNum) {
    this.bindOsdNum = bindOsdNum;
  }

  public Pool blockVolumeNum(Long blockVolumeNum) {
    this.blockVolumeNum = blockVolumeNum;
    return this;
  }

   /**
   * Get blockVolumeNum
   * @return blockVolumeNum
  **/
  @Schema(description = "")
  public Long getBlockVolumeNum() {
    return blockVolumeNum;
  }

  public void setBlockVolumeNum(Long blockVolumeNum) {
    this.blockVolumeNum = blockVolumeNum;
  }

  public Pool cachePool(PoolNestview cachePool) {
    this.cachePool = cachePool;
    return this;
  }

   /**
   * Get cachePool
   * @return cachePool
  **/
  @Schema(description = "")
  public PoolNestview getCachePool() {
    return cachePool;
  }

  public void setCachePool(PoolNestview cachePool) {
    this.cachePool = cachePool;
  }

  public Pool cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public Pool codingChunkNum(Long codingChunkNum) {
    this.codingChunkNum = codingChunkNum;
    return this;
  }

   /**
   * Get codingChunkNum
   * @return codingChunkNum
  **/
  @Schema(description = "")
  public Long getCodingChunkNum() {
    return codingChunkNum;
  }

  public void setCodingChunkNum(Long codingChunkNum) {
    this.codingChunkNum = codingChunkNum;
  }

  public Pool compressAlgorithm(String compressAlgorithm) {
    this.compressAlgorithm = compressAlgorithm;
    return this;
  }

   /**
   * Get compressAlgorithm
   * @return compressAlgorithm
  **/
  @Schema(description = "")
  public String getCompressAlgorithm() {
    return compressAlgorithm;
  }

  public void setCompressAlgorithm(String compressAlgorithm) {
    this.compressAlgorithm = compressAlgorithm;
  }

  public Pool compressed(Boolean compressed) {
    this.compressed = compressed;
    return this;
  }

   /**
   * Get compressed
   * @return compressed
  **/
  @Schema(description = "")
  public Boolean isCompressed() {
    return compressed;
  }

  public void setCompressed(Boolean compressed) {
    this.compressed = compressed;
  }

  public Pool create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public Pool dataChunkNum(Long dataChunkNum) {
    this.dataChunkNum = dataChunkNum;
    return this;
  }

   /**
   * Get dataChunkNum
   * @return dataChunkNum
  **/
  @Schema(description = "")
  public Long getDataChunkNum() {
    return dataChunkNum;
  }

  public void setDataChunkNum(Long dataChunkNum) {
    this.dataChunkNum = dataChunkNum;
  }

  public Pool dataPool(PoolNestview dataPool) {
    this.dataPool = dataPool;
    return this;
  }

   /**
   * Get dataPool
   * @return dataPool
  **/
  @Schema(description = "")
  public PoolNestview getDataPool() {
    return dataPool;
  }

  public void setDataPool(PoolNestview dataPool) {
    this.dataPool = dataPool;
  }

  public Pool defaultManagedVolumeFormat(Long defaultManagedVolumeFormat) {
    this.defaultManagedVolumeFormat = defaultManagedVolumeFormat;
    return this;
  }

   /**
   * Get defaultManagedVolumeFormat
   * @return defaultManagedVolumeFormat
  **/
  @Schema(description = "")
  public Long getDefaultManagedVolumeFormat() {
    return defaultManagedVolumeFormat;
  }

  public void setDefaultManagedVolumeFormat(Long defaultManagedVolumeFormat) {
    this.defaultManagedVolumeFormat = defaultManagedVolumeFormat;
  }

  public Pool deviceType(String deviceType) {
    this.deviceType = deviceType;
    return this;
  }

   /**
   * Get deviceType
   * @return deviceType
  **/
  @Schema(description = "")
  public String getDeviceType() {
    return deviceType;
  }

  public void setDeviceType(String deviceType) {
    this.deviceType = deviceType;
  }

  public Pool deviceTypeCheckDisabled(Boolean deviceTypeCheckDisabled) {
    this.deviceTypeCheckDisabled = deviceTypeCheckDisabled;
    return this;
  }

   /**
   * Get deviceTypeCheckDisabled
   * @return deviceTypeCheckDisabled
  **/
  @Schema(description = "")
  public Boolean isDeviceTypeCheckDisabled() {
    return deviceTypeCheckDisabled;
  }

  public void setDeviceTypeCheckDisabled(Boolean deviceTypeCheckDisabled) {
    this.deviceTypeCheckDisabled = deviceTypeCheckDisabled;
  }

  public Pool failureDomainType(String failureDomainType) {
    this.failureDomainType = failureDomainType;
    return this;
  }

   /**
   * Get failureDomainType
   * @return failureDomainType
  **/
  @Schema(description = "")
  public String getFailureDomainType() {
    return failureDomainType;
  }

  public void setFailureDomainType(String failureDomainType) {
    this.failureDomainType = failureDomainType;
  }

  public Pool gcQosPlan(PoolGCPolicyPlan gcQosPlan) {
    this.gcQosPlan = gcQosPlan;
    return this;
  }

   /**
   * Get gcQosPlan
   * @return gcQosPlan
  **/
  @Schema(description = "")
  public PoolGCPolicyPlan getGcQosPlan() {
    return gcQosPlan;
  }

  public void setGcQosPlan(PoolGCPolicyPlan gcQosPlan) {
    this.gcQosPlan = gcQosPlan;
  }

  public Pool hidden(Boolean hidden) {
    this.hidden = hidden;
    return this;
  }

   /**
   * Get hidden
   * @return hidden
  **/
  @Schema(description = "")
  public Boolean isHidden() {
    return hidden;
  }

  public void setHidden(Boolean hidden) {
    this.hidden = hidden;
  }

  public Pool id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Pool innerPoolId(Integer innerPoolId) {
    this.innerPoolId = innerPoolId;
    return this;
  }

   /**
   * Get innerPoolId
   * @return innerPoolId
  **/
  @Schema(description = "")
  public Integer getInnerPoolId() {
    return innerPoolId;
  }

  public void setInnerPoolId(Integer innerPoolId) {
    this.innerPoolId = innerPoolId;
  }

  public Pool ioBypassEnabled(Boolean ioBypassEnabled) {
    this.ioBypassEnabled = ioBypassEnabled;
    return this;
  }

   /**
   * Get ioBypassEnabled
   * @return ioBypassEnabled
  **/
  @Schema(description = "")
  public Boolean isIoBypassEnabled() {
    return ioBypassEnabled;
  }

  public void setIoBypassEnabled(Boolean ioBypassEnabled) {
    this.ioBypassEnabled = ioBypassEnabled;
  }

  public Pool ioBypassMode(String ioBypassMode) {
    this.ioBypassMode = ioBypassMode;
    return this;
  }

   /**
   * Get ioBypassMode
   * @return ioBypassMode
  **/
  @Schema(description = "")
  public String getIoBypassMode() {
    return ioBypassMode;
  }

  public void setIoBypassMode(String ioBypassMode) {
    this.ioBypassMode = ioBypassMode;
  }

  public Pool ioBypassThreshold(Long ioBypassThreshold) {
    this.ioBypassThreshold = ioBypassThreshold;
    return this;
  }

   /**
   * Get ioBypassThreshold
   * @return ioBypassThreshold
  **/
  @Schema(description = "")
  public Long getIoBypassThreshold() {
    return ioBypassThreshold;
  }

  public void setIoBypassThreshold(Long ioBypassThreshold) {
    this.ioBypassThreshold = ioBypassThreshold;
  }

  public Pool minAllocSize(Long minAllocSize) {
    this.minAllocSize = minAllocSize;
    return this;
  }

   /**
   * Get minAllocSize
   * @return minAllocSize
  **/
  @Schema(description = "")
  public Long getMinAllocSize() {
    return minAllocSize;
  }

  public void setMinAllocSize(Long minAllocSize) {
    this.minAllocSize = minAllocSize;
  }

  public Pool minOsdNum(Long minOsdNum) {
    this.minOsdNum = minOsdNum;
    return this;
  }

   /**
   * Get minOsdNum
   * @return minOsdNum
  **/
  @Schema(description = "")
  public Long getMinOsdNum() {
    return minOsdNum;
  }

  public void setMinOsdNum(Long minOsdNum) {
    this.minOsdNum = minOsdNum;
  }

  public Pool name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Pool numaApplyPolicy(String numaApplyPolicy) {
    this.numaApplyPolicy = numaApplyPolicy;
    return this;
  }

   /**
   * Get numaApplyPolicy
   * @return numaApplyPolicy
  **/
  @Schema(description = "")
  public String getNumaApplyPolicy() {
    return numaApplyPolicy;
  }

  public void setNumaApplyPolicy(String numaApplyPolicy) {
    this.numaApplyPolicy = numaApplyPolicy;
  }

  public Pool numaBindBalanced(Boolean numaBindBalanced) {
    this.numaBindBalanced = numaBindBalanced;
    return this;
  }

   /**
   * Get numaBindBalanced
   * @return numaBindBalanced
  **/
  @Schema(description = "")
  public Boolean isNumaBindBalanced() {
    return numaBindBalanced;
  }

  public void setNumaBindBalanced(Boolean numaBindBalanced) {
    this.numaBindBalanced = numaBindBalanced;
  }

  public Pool numaBindPolicy(String numaBindPolicy) {
    this.numaBindPolicy = numaBindPolicy;
    return this;
  }

   /**
   * Get numaBindPolicy
   * @return numaBindPolicy
  **/
  @Schema(description = "")
  public String getNumaBindPolicy() {
    return numaBindPolicy;
  }

  public void setNumaBindPolicy(String numaBindPolicy) {
    this.numaBindPolicy = numaBindPolicy;
  }

  public Pool numaEnabled(Boolean numaEnabled) {
    this.numaEnabled = numaEnabled;
    return this;
  }

   /**
   * Get numaEnabled
   * @return numaEnabled
  **/
  @Schema(description = "")
  public Boolean isNumaEnabled() {
    return numaEnabled;
  }

  public void setNumaEnabled(Boolean numaEnabled) {
    this.numaEnabled = numaEnabled;
  }

  public Pool osdGroup(OsdGroupNestview osdGroup) {
    this.osdGroup = osdGroup;
    return this;
  }

   /**
   * Get osdGroup
   * @return osdGroup
  **/
  @Schema(description = "")
  public OsdGroupNestview getOsdGroup() {
    return osdGroup;
  }

  public void setOsdGroup(OsdGroupNestview osdGroup) {
    this.osdGroup = osdGroup;
  }

  public Pool osdNum(Long osdNum) {
    this.osdNum = osdNum;
    return this;
  }

   /**
   * Get osdNum
   * @return osdNum
  **/
  @Schema(description = "")
  public Long getOsdNum() {
    return osdNum;
  }

  public void setOsdNum(Long osdNum) {
    this.osdNum = osdNum;
  }

  public Pool osdNumPerHost(Long osdNumPerHost) {
    this.osdNumPerHost = osdNumPerHost;
    return this;
  }

   /**
   * Get osdNumPerHost
   * @return osdNumPerHost
  **/
  @Schema(description = "")
  public Long getOsdNumPerHost() {
    return osdNumPerHost;
  }

  public void setOsdNumPerHost(Long osdNumPerHost) {
    this.osdNumPerHost = osdNumPerHost;
  }

  public Pool outFailureDomainNum(Long outFailureDomainNum) {
    this.outFailureDomainNum = outFailureDomainNum;
    return this;
  }

   /**
   * Get outFailureDomainNum
   * @return outFailureDomainNum
  **/
  @Schema(description = "")
  public Long getOutFailureDomainNum() {
    return outFailureDomainNum;
  }

  public void setOutFailureDomainNum(Long outFailureDomainNum) {
    this.outFailureDomainNum = outFailureDomainNum;
  }

  public Pool poolId(Integer poolId) {
    this.poolId = poolId;
    return this;
  }

   /**
   * Get poolId
   * @return poolId
  **/
  @Schema(description = "")
  public Integer getPoolId() {
    return poolId;
  }

  public void setPoolId(Integer poolId) {
    this.poolId = poolId;
  }

  public Pool poolMode(String poolMode) {
    this.poolMode = poolMode;
    return this;
  }

   /**
   * Get poolMode
   * @return poolMode
  **/
  @Schema(description = "")
  public String getPoolMode() {
    return poolMode;
  }

  public void setPoolMode(String poolMode) {
    this.poolMode = poolMode;
  }

  public Pool poolName(String poolName) {
    this.poolName = poolName;
    return this;
  }

   /**
   * Get poolName
   * @return poolName
  **/
  @Schema(description = "")
  public String getPoolName() {
    return poolName;
  }

  public void setPoolName(String poolName) {
    this.poolName = poolName;
  }

  public Pool poolRole(String poolRole) {
    this.poolRole = poolRole;
    return this;
  }

   /**
   * Get poolRole
   * @return poolRole
  **/
  @Schema(description = "")
  public String getPoolRole() {
    return poolRole;
  }

  public void setPoolRole(String poolRole) {
    this.poolRole = poolRole;
  }

  public Pool poolType(String poolType) {
    this.poolType = poolType;
    return this;
  }

   /**
   * Get poolType
   * @return poolType
  **/
  @Schema(description = "")
  public String getPoolType() {
    return poolType;
  }

  public void setPoolType(String poolType) {
    this.poolType = poolType;
  }

  public Pool primaryPlacementNode(PlacementNodeNestview primaryPlacementNode) {
    this.primaryPlacementNode = primaryPlacementNode;
    return this;
  }

   /**
   * Get primaryPlacementNode
   * @return primaryPlacementNode
  **/
  @Schema(description = "")
  public PlacementNodeNestview getPrimaryPlacementNode() {
    return primaryPlacementNode;
  }

  public void setPrimaryPlacementNode(PlacementNodeNestview primaryPlacementNode) {
    this.primaryPlacementNode = primaryPlacementNode;
  }

  public Pool productType(String productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Get productType
   * @return productType
  **/
  @Schema(description = "")
  public String getProductType() {
    return productType;
  }

  public void setProductType(String productType) {
    this.productType = productType;
  }

  public Pool property(Map<String, Object> property) {
    this.property = property;
    return this;
  }

  public Pool putPropertyItem(String key, Object propertyItem) {
    if (this.property == null) {
      this.property = new HashMap<String, Object>();
    }
    this.property.put(key, propertyItem);
    return this;
  }

   /**
   * Get property
   * @return property
  **/
  @Schema(description = "")
  public Map<String, Object> getProperty() {
    return property;
  }

  public void setProperty(Map<String, Object> property) {
    this.property = property;
  }

  public Pool protectionDomain(ProtectionDomainNestview protectionDomain) {
    this.protectionDomain = protectionDomain;
    return this;
  }

   /**
   * Get protectionDomain
   * @return protectionDomain
  **/
  @Schema(description = "")
  public ProtectionDomainNestview getProtectionDomain() {
    return protectionDomain;
  }

  public void setProtectionDomain(ProtectionDomainNestview protectionDomain) {
    this.protectionDomain = protectionDomain;
  }

  public Pool qos(OsdQos qos) {
    this.qos = qos;
    return this;
  }

   /**
   * Get qos
   * @return qos
  **/
  @Schema(description = "")
  public OsdQos getQos() {
    return qos;
  }

  public void setQos(OsdQos qos) {
    this.qos = qos;
  }

  public Pool replicateSize(Long replicateSize) {
    this.replicateSize = replicateSize;
    return this;
  }

   /**
   * Get replicateSize
   * @return replicateSize
  **/
  @Schema(description = "")
  public Long getReplicateSize() {
    return replicateSize;
  }

  public void setReplicateSize(Long replicateSize) {
    this.replicateSize = replicateSize;
  }

  public Pool reservedPercent(Double reservedPercent) {
    this.reservedPercent = reservedPercent;
    return this;
  }

   /**
   * Get reservedPercent
   * @return reservedPercent
  **/
  @Schema(description = "")
  public Double getReservedPercent() {
    return reservedPercent;
  }

  public void setReservedPercent(Double reservedPercent) {
    this.reservedPercent = reservedPercent;
  }

  public Pool sizePerOsd(Long sizePerOsd) {
    this.sizePerOsd = sizePerOsd;
    return this;
  }

   /**
   * Get sizePerOsd
   * @return sizePerOsd
  **/
  @Schema(description = "")
  public Long getSizePerOsd() {
    return sizePerOsd;
  }

  public void setSizePerOsd(Long sizePerOsd) {
    this.sizePerOsd = sizePerOsd;
  }

  public Pool status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Pool stretched(Boolean stretched) {
    this.stretched = stretched;
    return this;
  }

   /**
   * Get stretched
   * @return stretched
  **/
  @Schema(description = "")
  public Boolean isStretched() {
    return stretched;
  }

  public void setStretched(Boolean stretched) {
    this.stretched = stretched;
  }

  public Pool stripeUnit(Long stripeUnit) {
    this.stripeUnit = stripeUnit;
    return this;
  }

   /**
   * Get stripeUnit
   * @return stripeUnit
  **/
  @Schema(description = "")
  public Long getStripeUnit() {
    return stripeUnit;
  }

  public void setStripeUnit(Long stripeUnit) {
    this.stripeUnit = stripeUnit;
  }

  public Pool subFailureDomainType(String subFailureDomainType) {
    this.subFailureDomainType = subFailureDomainType;
    return this;
  }

   /**
   * Get subFailureDomainType
   * @return subFailureDomainType
  **/
  @Schema(description = "")
  public String getSubFailureDomainType() {
    return subFailureDomainType;
  }

  public void setSubFailureDomainType(String subFailureDomainType) {
    this.subFailureDomainType = subFailureDomainType;
  }

  public Pool suggestedOmapSize(Long suggestedOmapSize) {
    this.suggestedOmapSize = suggestedOmapSize;
    return this;
  }

   /**
   * Get suggestedOmapSize
   * @return suggestedOmapSize
  **/
  @Schema(description = "")
  public Long getSuggestedOmapSize() {
    return suggestedOmapSize;
  }

  public void setSuggestedOmapSize(Long suggestedOmapSize) {
    this.suggestedOmapSize = suggestedOmapSize;
  }

  public Pool thinProvisioned(Boolean thinProvisioned) {
    this.thinProvisioned = thinProvisioned;
    return this;
  }

   /**
   * Get thinProvisioned
   * @return thinProvisioned
  **/
  @Schema(description = "")
  public Boolean isThinProvisioned() {
    return thinProvisioned;
  }

  public void setThinProvisioned(Boolean thinProvisioned) {
    this.thinProvisioned = thinProvisioned;
  }

  public Pool tierStatus(String tierStatus) {
    this.tierStatus = tierStatus;
    return this;
  }

   /**
   * Get tierStatus
   * @return tierStatus
  **/
  @Schema(description = "")
  public String getTierStatus() {
    return tierStatus;
  }

  public void setTierStatus(String tierStatus) {
    this.tierStatus = tierStatus;
  }

  public Pool transportMode(String transportMode) {
    this.transportMode = transportMode;
    return this;
  }

   /**
   * Get transportMode
   * @return transportMode
  **/
  @Schema(description = "")
  public String getTransportMode() {
    return transportMode;
  }

  public void setTransportMode(String transportMode) {
    this.transportMode = transportMode;
  }

  public Pool update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Pool pool = (Pool) o;
    return Objects.equals(this.actionStatus, pool.actionStatus) &&
        Objects.equals(this.allocatedSize, pool.allocatedSize) &&
        Objects.equals(this.bindOsdNum, pool.bindOsdNum) &&
        Objects.equals(this.blockVolumeNum, pool.blockVolumeNum) &&
        Objects.equals(this.cachePool, pool.cachePool) &&
        Objects.equals(this.cluster, pool.cluster) &&
        Objects.equals(this.codingChunkNum, pool.codingChunkNum) &&
        Objects.equals(this.compressAlgorithm, pool.compressAlgorithm) &&
        Objects.equals(this.compressed, pool.compressed) &&
        Objects.equals(this.create, pool.create) &&
        Objects.equals(this.dataChunkNum, pool.dataChunkNum) &&
        Objects.equals(this.dataPool, pool.dataPool) &&
        Objects.equals(this.defaultManagedVolumeFormat, pool.defaultManagedVolumeFormat) &&
        Objects.equals(this.deviceType, pool.deviceType) &&
        Objects.equals(this.deviceTypeCheckDisabled, pool.deviceTypeCheckDisabled) &&
        Objects.equals(this.failureDomainType, pool.failureDomainType) &&
        Objects.equals(this.gcQosPlan, pool.gcQosPlan) &&
        Objects.equals(this.hidden, pool.hidden) &&
        Objects.equals(this.id, pool.id) &&
        Objects.equals(this.innerPoolId, pool.innerPoolId) &&
        Objects.equals(this.ioBypassEnabled, pool.ioBypassEnabled) &&
        Objects.equals(this.ioBypassMode, pool.ioBypassMode) &&
        Objects.equals(this.ioBypassThreshold, pool.ioBypassThreshold) &&
        Objects.equals(this.minAllocSize, pool.minAllocSize) &&
        Objects.equals(this.minOsdNum, pool.minOsdNum) &&
        Objects.equals(this.name, pool.name) &&
        Objects.equals(this.numaApplyPolicy, pool.numaApplyPolicy) &&
        Objects.equals(this.numaBindBalanced, pool.numaBindBalanced) &&
        Objects.equals(this.numaBindPolicy, pool.numaBindPolicy) &&
        Objects.equals(this.numaEnabled, pool.numaEnabled) &&
        Objects.equals(this.osdGroup, pool.osdGroup) &&
        Objects.equals(this.osdNum, pool.osdNum) &&
        Objects.equals(this.osdNumPerHost, pool.osdNumPerHost) &&
        Objects.equals(this.outFailureDomainNum, pool.outFailureDomainNum) &&
        Objects.equals(this.poolId, pool.poolId) &&
        Objects.equals(this.poolMode, pool.poolMode) &&
        Objects.equals(this.poolName, pool.poolName) &&
        Objects.equals(this.poolRole, pool.poolRole) &&
        Objects.equals(this.poolType, pool.poolType) &&
        Objects.equals(this.primaryPlacementNode, pool.primaryPlacementNode) &&
        Objects.equals(this.productType, pool.productType) &&
        Objects.equals(this.property, pool.property) &&
        Objects.equals(this.protectionDomain, pool.protectionDomain) &&
        Objects.equals(this.qos, pool.qos) &&
        Objects.equals(this.replicateSize, pool.replicateSize) &&
        Objects.equals(this.reservedPercent, pool.reservedPercent) &&
        Objects.equals(this.sizePerOsd, pool.sizePerOsd) &&
        Objects.equals(this.status, pool.status) &&
        Objects.equals(this.stretched, pool.stretched) &&
        Objects.equals(this.stripeUnit, pool.stripeUnit) &&
        Objects.equals(this.subFailureDomainType, pool.subFailureDomainType) &&
        Objects.equals(this.suggestedOmapSize, pool.suggestedOmapSize) &&
        Objects.equals(this.thinProvisioned, pool.thinProvisioned) &&
        Objects.equals(this.tierStatus, pool.tierStatus) &&
        Objects.equals(this.transportMode, pool.transportMode) &&
        Objects.equals(this.update, pool.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, allocatedSize, bindOsdNum, blockVolumeNum, cachePool, cluster, codingChunkNum, compressAlgorithm, compressed, create, dataChunkNum, dataPool, defaultManagedVolumeFormat, deviceType, deviceTypeCheckDisabled, failureDomainType, gcQosPlan, hidden, id, innerPoolId, ioBypassEnabled, ioBypassMode, ioBypassThreshold, minAllocSize, minOsdNum, name, numaApplyPolicy, numaBindBalanced, numaBindPolicy, numaEnabled, osdGroup, osdNum, osdNumPerHost, outFailureDomainNum, poolId, poolMode, poolName, poolRole, poolType, primaryPlacementNode, productType, property, protectionDomain, qos, replicateSize, reservedPercent, sizePerOsd, status, stretched, stripeUnit, subFailureDomainType, suggestedOmapSize, thinProvisioned, tierStatus, transportMode, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Pool {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    allocatedSize: ").append(toIndentedString(allocatedSize)).append("\n");
    sb.append("    bindOsdNum: ").append(toIndentedString(bindOsdNum)).append("\n");
    sb.append("    blockVolumeNum: ").append(toIndentedString(blockVolumeNum)).append("\n");
    sb.append("    cachePool: ").append(toIndentedString(cachePool)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    codingChunkNum: ").append(toIndentedString(codingChunkNum)).append("\n");
    sb.append("    compressAlgorithm: ").append(toIndentedString(compressAlgorithm)).append("\n");
    sb.append("    compressed: ").append(toIndentedString(compressed)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    dataChunkNum: ").append(toIndentedString(dataChunkNum)).append("\n");
    sb.append("    dataPool: ").append(toIndentedString(dataPool)).append("\n");
    sb.append("    defaultManagedVolumeFormat: ").append(toIndentedString(defaultManagedVolumeFormat)).append("\n");
    sb.append("    deviceType: ").append(toIndentedString(deviceType)).append("\n");
    sb.append("    deviceTypeCheckDisabled: ").append(toIndentedString(deviceTypeCheckDisabled)).append("\n");
    sb.append("    failureDomainType: ").append(toIndentedString(failureDomainType)).append("\n");
    sb.append("    gcQosPlan: ").append(toIndentedString(gcQosPlan)).append("\n");
    sb.append("    hidden: ").append(toIndentedString(hidden)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    innerPoolId: ").append(toIndentedString(innerPoolId)).append("\n");
    sb.append("    ioBypassEnabled: ").append(toIndentedString(ioBypassEnabled)).append("\n");
    sb.append("    ioBypassMode: ").append(toIndentedString(ioBypassMode)).append("\n");
    sb.append("    ioBypassThreshold: ").append(toIndentedString(ioBypassThreshold)).append("\n");
    sb.append("    minAllocSize: ").append(toIndentedString(minAllocSize)).append("\n");
    sb.append("    minOsdNum: ").append(toIndentedString(minOsdNum)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numaApplyPolicy: ").append(toIndentedString(numaApplyPolicy)).append("\n");
    sb.append("    numaBindBalanced: ").append(toIndentedString(numaBindBalanced)).append("\n");
    sb.append("    numaBindPolicy: ").append(toIndentedString(numaBindPolicy)).append("\n");
    sb.append("    numaEnabled: ").append(toIndentedString(numaEnabled)).append("\n");
    sb.append("    osdGroup: ").append(toIndentedString(osdGroup)).append("\n");
    sb.append("    osdNum: ").append(toIndentedString(osdNum)).append("\n");
    sb.append("    osdNumPerHost: ").append(toIndentedString(osdNumPerHost)).append("\n");
    sb.append("    outFailureDomainNum: ").append(toIndentedString(outFailureDomainNum)).append("\n");
    sb.append("    poolId: ").append(toIndentedString(poolId)).append("\n");
    sb.append("    poolMode: ").append(toIndentedString(poolMode)).append("\n");
    sb.append("    poolName: ").append(toIndentedString(poolName)).append("\n");
    sb.append("    poolRole: ").append(toIndentedString(poolRole)).append("\n");
    sb.append("    poolType: ").append(toIndentedString(poolType)).append("\n");
    sb.append("    primaryPlacementNode: ").append(toIndentedString(primaryPlacementNode)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    protectionDomain: ").append(toIndentedString(protectionDomain)).append("\n");
    sb.append("    qos: ").append(toIndentedString(qos)).append("\n");
    sb.append("    replicateSize: ").append(toIndentedString(replicateSize)).append("\n");
    sb.append("    reservedPercent: ").append(toIndentedString(reservedPercent)).append("\n");
    sb.append("    sizePerOsd: ").append(toIndentedString(sizePerOsd)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stretched: ").append(toIndentedString(stretched)).append("\n");
    sb.append("    stripeUnit: ").append(toIndentedString(stripeUnit)).append("\n");
    sb.append("    subFailureDomainType: ").append(toIndentedString(subFailureDomainType)).append("\n");
    sb.append("    suggestedOmapSize: ").append(toIndentedString(suggestedOmapSize)).append("\n");
    sb.append("    thinProvisioned: ").append(toIndentedString(thinProvisioned)).append("\n");
    sb.append("    tierStatus: ").append(toIndentedString(tierStatus)).append("\n");
    sb.append("    transportMode: ").append(toIndentedString(transportMode)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
