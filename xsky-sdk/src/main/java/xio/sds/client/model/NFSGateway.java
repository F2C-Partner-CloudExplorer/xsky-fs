/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.HostNestview;
/**
 * NFSGateway contains information of a nfs gateway and it&#x27;s stats.
 */
@Schema(description = "NFSGateway contains information of a nfs gateway and it's stats.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class NFSGateway {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("bucket_num")
  private Long bucketNum = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("gateway_ip")
  private String gatewayIp = null;

  @SerializedName("gateway_name")
  private String gatewayName = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("mount_clients")
  private String mountClients = null;

  @SerializedName("mount_num")
  private Long mountNum = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("osp_zone_id")
  private Long ospZoneId = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public NFSGateway actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public NFSGateway bucketNum(Long bucketNum) {
    this.bucketNum = bucketNum;
    return this;
  }

   /**
   * Get bucketNum
   * @return bucketNum
  **/
  @Schema(description = "")
  public Long getBucketNum() {
    return bucketNum;
  }

  public void setBucketNum(Long bucketNum) {
    this.bucketNum = bucketNum;
  }

  public NFSGateway cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public NFSGateway create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public NFSGateway description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public NFSGateway gatewayIp(String gatewayIp) {
    this.gatewayIp = gatewayIp;
    return this;
  }

   /**
   * Get gatewayIp
   * @return gatewayIp
  **/
  @Schema(description = "")
  public String getGatewayIp() {
    return gatewayIp;
  }

  public void setGatewayIp(String gatewayIp) {
    this.gatewayIp = gatewayIp;
  }

  public NFSGateway gatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
    return this;
  }

   /**
   * Get gatewayName
   * @return gatewayName
  **/
  @Schema(description = "")
  public String getGatewayName() {
    return gatewayName;
  }

  public void setGatewayName(String gatewayName) {
    this.gatewayName = gatewayName;
  }

  public NFSGateway host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public NFSGateway id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public NFSGateway mountClients(String mountClients) {
    this.mountClients = mountClients;
    return this;
  }

   /**
   * Get mountClients
   * @return mountClients
  **/
  @Schema(description = "")
  public String getMountClients() {
    return mountClients;
  }

  public void setMountClients(String mountClients) {
    this.mountClients = mountClients;
  }

  public NFSGateway mountNum(Long mountNum) {
    this.mountNum = mountNum;
    return this;
  }

   /**
   * Get mountNum
   * @return mountNum
  **/
  @Schema(description = "")
  public Long getMountNum() {
    return mountNum;
  }

  public void setMountNum(Long mountNum) {
    this.mountNum = mountNum;
  }

  public NFSGateway name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public NFSGateway ospZoneId(Long ospZoneId) {
    this.ospZoneId = ospZoneId;
    return this;
  }

   /**
   * Get ospZoneId
   * @return ospZoneId
  **/
  @Schema(description = "")
  public Long getOspZoneId() {
    return ospZoneId;
  }

  public void setOspZoneId(Long ospZoneId) {
    this.ospZoneId = ospZoneId;
  }

  public NFSGateway port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public NFSGateway status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public NFSGateway update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NFSGateway nfSGateway = (NFSGateway) o;
    return Objects.equals(this.actionStatus, nfSGateway.actionStatus) &&
        Objects.equals(this.bucketNum, nfSGateway.bucketNum) &&
        Objects.equals(this.cluster, nfSGateway.cluster) &&
        Objects.equals(this.create, nfSGateway.create) &&
        Objects.equals(this.description, nfSGateway.description) &&
        Objects.equals(this.gatewayIp, nfSGateway.gatewayIp) &&
        Objects.equals(this.gatewayName, nfSGateway.gatewayName) &&
        Objects.equals(this.host, nfSGateway.host) &&
        Objects.equals(this.id, nfSGateway.id) &&
        Objects.equals(this.mountClients, nfSGateway.mountClients) &&
        Objects.equals(this.mountNum, nfSGateway.mountNum) &&
        Objects.equals(this.name, nfSGateway.name) &&
        Objects.equals(this.ospZoneId, nfSGateway.ospZoneId) &&
        Objects.equals(this.port, nfSGateway.port) &&
        Objects.equals(this.status, nfSGateway.status) &&
        Objects.equals(this.update, nfSGateway.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, bucketNum, cluster, create, description, gatewayIp, gatewayName, host, id, mountClients, mountNum, name, ospZoneId, port, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NFSGateway {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    bucketNum: ").append(toIndentedString(bucketNum)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    gatewayIp: ").append(toIndentedString(gatewayIp)).append("\n");
    sb.append("    gatewayName: ").append(toIndentedString(gatewayName)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mountClients: ").append(toIndentedString(mountClients)).append("\n");
    sb.append("    mountNum: ").append(toIndentedString(mountNum)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ospZoneId: ").append(toIndentedString(ospZoneId)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
