/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.DfsFTPShareACLReq;
/**
 * DfsFTPShareCreateReqShare
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsFTPShareCreateReqShare {
  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_ftp_share_acls")
  private List<DfsFTPShareACLReq> dfsFtpShareAcls = null;

  @SerializedName("dfs_gateway_group_id")
  private Long dfsGatewayGroupId = null;

  @SerializedName("dfs_rootfs_id")
  private Long dfsRootfsId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("path")
  private String path = null;

  public DfsFTPShareCreateReqShare description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description of share
   * @return description
  **/
  @Schema(description = "description of share")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsFTPShareCreateReqShare dfsFtpShareAcls(List<DfsFTPShareACLReq> dfsFtpShareAcls) {
    this.dfsFtpShareAcls = dfsFtpShareAcls;
    return this;
  }

  public DfsFTPShareCreateReqShare addDfsFtpShareAclsItem(DfsFTPShareACLReq dfsFtpShareAclsItem) {
    if (this.dfsFtpShareAcls == null) {
      this.dfsFtpShareAcls = new ArrayList<DfsFTPShareACLReq>();
    }
    this.dfsFtpShareAcls.add(dfsFtpShareAclsItem);
    return this;
  }

   /**
   * access control array
   * @return dfsFtpShareAcls
  **/
  @Schema(description = "access control array")
  public List<DfsFTPShareACLReq> getDfsFtpShareAcls() {
    return dfsFtpShareAcls;
  }

  public void setDfsFtpShareAcls(List<DfsFTPShareACLReq> dfsFtpShareAcls) {
    this.dfsFtpShareAcls = dfsFtpShareAcls;
  }

  public DfsFTPShareCreateReqShare dfsGatewayGroupId(Long dfsGatewayGroupId) {
    this.dfsGatewayGroupId = dfsGatewayGroupId;
    return this;
  }

   /**
   * gateway group id
   * @return dfsGatewayGroupId
  **/
  @Schema(description = "gateway group id")
  public Long getDfsGatewayGroupId() {
    return dfsGatewayGroupId;
  }

  public void setDfsGatewayGroupId(Long dfsGatewayGroupId) {
    this.dfsGatewayGroupId = dfsGatewayGroupId;
  }

  public DfsFTPShareCreateReqShare dfsRootfsId(Long dfsRootfsId) {
    this.dfsRootfsId = dfsRootfsId;
    return this;
  }

   /**
   * rootfs id
   * @return dfsRootfsId
  **/
  @Schema(required = true, description = "rootfs id")
  public Long getDfsRootfsId() {
    return dfsRootfsId;
  }

  public void setDfsRootfsId(Long dfsRootfsId) {
    this.dfsRootfsId = dfsRootfsId;
  }

  public DfsFTPShareCreateReqShare name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name of share
   * @return name
  **/
  @Schema(required = true, description = "name of share")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsFTPShareCreateReqShare path(String path) {
    this.path = path;
    return this;
  }

   /**
   * diectrory path
   * @return path
  **/
  @Schema(required = true, description = "diectrory path")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsFTPShareCreateReqShare dfsFTPShareCreateReqShare = (DfsFTPShareCreateReqShare) o;
    return Objects.equals(this.description, dfsFTPShareCreateReqShare.description) &&
        Objects.equals(this.dfsFtpShareAcls, dfsFTPShareCreateReqShare.dfsFtpShareAcls) &&
        Objects.equals(this.dfsGatewayGroupId, dfsFTPShareCreateReqShare.dfsGatewayGroupId) &&
        Objects.equals(this.dfsRootfsId, dfsFTPShareCreateReqShare.dfsRootfsId) &&
        Objects.equals(this.name, dfsFTPShareCreateReqShare.name) &&
        Objects.equals(this.path, dfsFTPShareCreateReqShare.path);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, dfsFtpShareAcls, dfsGatewayGroupId, dfsRootfsId, name, path);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsFTPShareCreateReqShare {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsFtpShareAcls: ").append(toIndentedString(dfsFtpShareAcls)).append("\n");
    sb.append("    dfsGatewayGroupId: ").append(toIndentedString(dfsGatewayGroupId)).append("\n");
    sb.append("    dfsRootfsId: ").append(toIndentedString(dfsRootfsId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
