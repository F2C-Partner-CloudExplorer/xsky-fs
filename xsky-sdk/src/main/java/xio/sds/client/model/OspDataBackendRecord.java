/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.OspCluster;
import xio.sds.client.model.OspDataBackendBucketUsedResp;
import xio.sds.client.model.OspDataBackendParams;
import xio.sds.client.model.OspDataBackendPlatformInfo;
import xio.sds.client.model.OspDataBackendPlatformType;
import xio.sds.client.model.OspDataBackendStat;
import xio.sds.client.model.OspDataBackendStatus;
import xio.sds.client.model.OspDataBackendTarget;
/**
 * OspDataBackendRecord
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspDataBackendRecord {
  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private String update = null;

  @SerializedName("endpoint")
  private String endpoint = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("replication_used")
  private List<OspDataBackendBucketUsedResp> replicationUsed = null;

  @SerializedName("platform")
  private OspDataBackendPlatformInfo platform = null;

  @SerializedName("create")
  private String create = null;

  @SerializedName("quota_enabled")
  private Boolean quotaEnabled = null;

  @SerializedName("readonly")
  private Boolean readonly = null;

  @SerializedName("targets")
  private List<OspDataBackendTarget> targets = null;

  @SerializedName("origin_used")
  private List<OspDataBackendBucketUsedResp> originUsed = null;

  @SerializedName("outside")
  private Boolean outside = null;

  @SerializedName("share_path")
  private String sharePath = null;

  @SerializedName("params")
  private OspDataBackendParams params = null;

  @SerializedName("samples")
  private List<OspDataBackendStat> samples = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("storage_cluster")
  private OspCluster storageCluster = null;

  @SerializedName("backend_status")
  private OspDataBackendStatus backendStatus = null;

  @SerializedName("type")
  private OspDataBackendPlatformType type = null;

  @SerializedName("id")
  private Long id = null;

  public OspDataBackendRecord status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public OspDataBackendRecord update(String update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public String getUpdate() {
    return update;
  }

  public void setUpdate(String update) {
    this.update = update;
  }

  public OspDataBackendRecord endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Get endpoint
   * @return endpoint
  **/
  @Schema(description = "")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public OspDataBackendRecord name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OspDataBackendRecord replicationUsed(List<OspDataBackendBucketUsedResp> replicationUsed) {
    this.replicationUsed = replicationUsed;
    return this;
  }

  public OspDataBackendRecord addReplicationUsedItem(OspDataBackendBucketUsedResp replicationUsedItem) {
    if (this.replicationUsed == null) {
      this.replicationUsed = new ArrayList<OspDataBackendBucketUsedResp>();
    }
    this.replicationUsed.add(replicationUsedItem);
    return this;
  }

   /**
   * Get replicationUsed
   * @return replicationUsed
  **/
  @Schema(description = "")
  public List<OspDataBackendBucketUsedResp> getReplicationUsed() {
    return replicationUsed;
  }

  public void setReplicationUsed(List<OspDataBackendBucketUsedResp> replicationUsed) {
    this.replicationUsed = replicationUsed;
  }

  public OspDataBackendRecord platform(OspDataBackendPlatformInfo platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @Schema(description = "")
  public OspDataBackendPlatformInfo getPlatform() {
    return platform;
  }

  public void setPlatform(OspDataBackendPlatformInfo platform) {
    this.platform = platform;
  }

  public OspDataBackendRecord create(String create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public String getCreate() {
    return create;
  }

  public void setCreate(String create) {
    this.create = create;
  }

  public OspDataBackendRecord quotaEnabled(Boolean quotaEnabled) {
    this.quotaEnabled = quotaEnabled;
    return this;
  }

   /**
   * Get quotaEnabled
   * @return quotaEnabled
  **/
  @Schema(description = "")
  public Boolean isQuotaEnabled() {
    return quotaEnabled;
  }

  public void setQuotaEnabled(Boolean quotaEnabled) {
    this.quotaEnabled = quotaEnabled;
  }

  public OspDataBackendRecord readonly(Boolean readonly) {
    this.readonly = readonly;
    return this;
  }

   /**
   * Get readonly
   * @return readonly
  **/
  @Schema(description = "")
  public Boolean isReadonly() {
    return readonly;
  }

  public void setReadonly(Boolean readonly) {
    this.readonly = readonly;
  }

  public OspDataBackendRecord targets(List<OspDataBackendTarget> targets) {
    this.targets = targets;
    return this;
  }

  public OspDataBackendRecord addTargetsItem(OspDataBackendTarget targetsItem) {
    if (this.targets == null) {
      this.targets = new ArrayList<OspDataBackendTarget>();
    }
    this.targets.add(targetsItem);
    return this;
  }

   /**
   * Get targets
   * @return targets
  **/
  @Schema(description = "")
  public List<OspDataBackendTarget> getTargets() {
    return targets;
  }

  public void setTargets(List<OspDataBackendTarget> targets) {
    this.targets = targets;
  }

  public OspDataBackendRecord originUsed(List<OspDataBackendBucketUsedResp> originUsed) {
    this.originUsed = originUsed;
    return this;
  }

  public OspDataBackendRecord addOriginUsedItem(OspDataBackendBucketUsedResp originUsedItem) {
    if (this.originUsed == null) {
      this.originUsed = new ArrayList<OspDataBackendBucketUsedResp>();
    }
    this.originUsed.add(originUsedItem);
    return this;
  }

   /**
   * Get originUsed
   * @return originUsed
  **/
  @Schema(description = "")
  public List<OspDataBackendBucketUsedResp> getOriginUsed() {
    return originUsed;
  }

  public void setOriginUsed(List<OspDataBackendBucketUsedResp> originUsed) {
    this.originUsed = originUsed;
  }

  public OspDataBackendRecord outside(Boolean outside) {
    this.outside = outside;
    return this;
  }

   /**
   * Get outside
   * @return outside
  **/
  @Schema(description = "")
  public Boolean isOutside() {
    return outside;
  }

  public void setOutside(Boolean outside) {
    this.outside = outside;
  }

  public OspDataBackendRecord sharePath(String sharePath) {
    this.sharePath = sharePath;
    return this;
  }

   /**
   * Get sharePath
   * @return sharePath
  **/
  @Schema(description = "")
  public String getSharePath() {
    return sharePath;
  }

  public void setSharePath(String sharePath) {
    this.sharePath = sharePath;
  }

  public OspDataBackendRecord params(OspDataBackendParams params) {
    this.params = params;
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @Schema(description = "")
  public OspDataBackendParams getParams() {
    return params;
  }

  public void setParams(OspDataBackendParams params) {
    this.params = params;
  }

  public OspDataBackendRecord samples(List<OspDataBackendStat> samples) {
    this.samples = samples;
    return this;
  }

  public OspDataBackendRecord addSamplesItem(OspDataBackendStat samplesItem) {
    if (this.samples == null) {
      this.samples = new ArrayList<OspDataBackendStat>();
    }
    this.samples.add(samplesItem);
    return this;
  }

   /**
   * Get samples
   * @return samples
  **/
  @Schema(description = "")
  public List<OspDataBackendStat> getSamples() {
    return samples;
  }

  public void setSamples(List<OspDataBackendStat> samples) {
    this.samples = samples;
  }

  public OspDataBackendRecord region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public OspDataBackendRecord storageCluster(OspCluster storageCluster) {
    this.storageCluster = storageCluster;
    return this;
  }

   /**
   * Get storageCluster
   * @return storageCluster
  **/
  @Schema(description = "")
  public OspCluster getStorageCluster() {
    return storageCluster;
  }

  public void setStorageCluster(OspCluster storageCluster) {
    this.storageCluster = storageCluster;
  }

  public OspDataBackendRecord backendStatus(OspDataBackendStatus backendStatus) {
    this.backendStatus = backendStatus;
    return this;
  }

   /**
   * Get backendStatus
   * @return backendStatus
  **/
  @Schema(description = "")
  public OspDataBackendStatus getBackendStatus() {
    return backendStatus;
  }

  public void setBackendStatus(OspDataBackendStatus backendStatus) {
    this.backendStatus = backendStatus;
  }

  public OspDataBackendRecord type(OspDataBackendPlatformType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public OspDataBackendPlatformType getType() {
    return type;
  }

  public void setType(OspDataBackendPlatformType type) {
    this.type = type;
  }

  public OspDataBackendRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspDataBackendRecord ospDataBackendRecord = (OspDataBackendRecord) o;
    return Objects.equals(this.status, ospDataBackendRecord.status) &&
        Objects.equals(this.update, ospDataBackendRecord.update) &&
        Objects.equals(this.endpoint, ospDataBackendRecord.endpoint) &&
        Objects.equals(this.name, ospDataBackendRecord.name) &&
        Objects.equals(this.replicationUsed, ospDataBackendRecord.replicationUsed) &&
        Objects.equals(this.platform, ospDataBackendRecord.platform) &&
        Objects.equals(this.create, ospDataBackendRecord.create) &&
        Objects.equals(this.quotaEnabled, ospDataBackendRecord.quotaEnabled) &&
        Objects.equals(this.readonly, ospDataBackendRecord.readonly) &&
        Objects.equals(this.targets, ospDataBackendRecord.targets) &&
        Objects.equals(this.originUsed, ospDataBackendRecord.originUsed) &&
        Objects.equals(this.outside, ospDataBackendRecord.outside) &&
        Objects.equals(this.sharePath, ospDataBackendRecord.sharePath) &&
        Objects.equals(this.params, ospDataBackendRecord.params) &&
        Objects.equals(this.samples, ospDataBackendRecord.samples) &&
        Objects.equals(this.region, ospDataBackendRecord.region) &&
        Objects.equals(this.storageCluster, ospDataBackendRecord.storageCluster) &&
        Objects.equals(this.backendStatus, ospDataBackendRecord.backendStatus) &&
        Objects.equals(this.type, ospDataBackendRecord.type) &&
        Objects.equals(this.id, ospDataBackendRecord.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, update, endpoint, name, replicationUsed, platform, create, quotaEnabled, readonly, targets, originUsed, outside, sharePath, params, samples, region, storageCluster, backendStatus, type, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspDataBackendRecord {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    replicationUsed: ").append(toIndentedString(replicationUsed)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    quotaEnabled: ").append(toIndentedString(quotaEnabled)).append("\n");
    sb.append("    readonly: ").append(toIndentedString(readonly)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    originUsed: ").append(toIndentedString(originUsed)).append("\n");
    sb.append("    outside: ").append(toIndentedString(outside)).append("\n");
    sb.append("    sharePath: ").append(toIndentedString(sharePath)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    samples: ").append(toIndentedString(samples)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    storageCluster: ").append(toIndentedString(storageCluster)).append("\n");
    sb.append("    backendStatus: ").append(toIndentedString(backendStatus)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
