/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsPathNestview;
import xio.sds.client.model.DfsPolicyFilter;
import xio.sds.client.model.DfsRootfs;
import xio.sds.client.model.DfsTier;
import xio.sds.client.model.FSUser;
import xio.sds.client.model.FSUserGroup;
/**
 * DfsStoragePolicy defines model of dfs storage policy +X:model:generate;order_by&#x3D;-ID;plur&#x3D;DfsStoragePolicies; +X:benchmark:
 */
@Schema(description = "DfsStoragePolicy defines model of dfs storage policy +X:model:generate;order_by=-ID;plur=DfsStoragePolicies; +X:benchmark:")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsStoragePolicy {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_paths")
  private List<DfsPathNestview> dfsPaths = null;

  @SerializedName("dfs_rootfs")
  private DfsRootfs dfsRootfs = null;

  @SerializedName("dfs_storage_class")
  private DfsTier dfsStorageClass = null;

  @SerializedName("file_Create")
  private OffsetDateTime fileCreate = null;

  @SerializedName("file_name")
  private String fileName = null;

  @SerializedName("file_path")
  private String filePath = null;

  @SerializedName("filter")
  private DfsPolicyFilter filter = null;

  @SerializedName("fs_user")
  private FSUser fsUser = null;

  @SerializedName("fs_user_group")
  private FSUserGroup fsUserGroup = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("is_default")
  private Boolean isDefault = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("path_num")
  private Long pathNum = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("stretched")
  private Boolean stretched = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DfsStoragePolicy actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsStoragePolicy cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsStoragePolicy create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsStoragePolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsStoragePolicy dfsPaths(List<DfsPathNestview> dfsPaths) {
    this.dfsPaths = dfsPaths;
    return this;
  }

  public DfsStoragePolicy addDfsPathsItem(DfsPathNestview dfsPathsItem) {
    if (this.dfsPaths == null) {
      this.dfsPaths = new ArrayList<DfsPathNestview>();
    }
    this.dfsPaths.add(dfsPathsItem);
    return this;
  }

   /**
   * Get dfsPaths
   * @return dfsPaths
  **/
  @Schema(description = "")
  public List<DfsPathNestview> getDfsPaths() {
    return dfsPaths;
  }

  public void setDfsPaths(List<DfsPathNestview> dfsPaths) {
    this.dfsPaths = dfsPaths;
  }

  public DfsStoragePolicy dfsRootfs(DfsRootfs dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
    return this;
  }

   /**
   * Get dfsRootfs
   * @return dfsRootfs
  **/
  @Schema(description = "")
  public DfsRootfs getDfsRootfs() {
    return dfsRootfs;
  }

  public void setDfsRootfs(DfsRootfs dfsRootfs) {
    this.dfsRootfs = dfsRootfs;
  }

  public DfsStoragePolicy dfsStorageClass(DfsTier dfsStorageClass) {
    this.dfsStorageClass = dfsStorageClass;
    return this;
  }

   /**
   * Get dfsStorageClass
   * @return dfsStorageClass
  **/
  @Schema(description = "")
  public DfsTier getDfsStorageClass() {
    return dfsStorageClass;
  }

  public void setDfsStorageClass(DfsTier dfsStorageClass) {
    this.dfsStorageClass = dfsStorageClass;
  }

  public DfsStoragePolicy fileCreate(OffsetDateTime fileCreate) {
    this.fileCreate = fileCreate;
    return this;
  }

   /**
   * Get fileCreate
   * @return fileCreate
  **/
  @Schema(description = "")
  public OffsetDateTime getFileCreate() {
    return fileCreate;
  }

  public void setFileCreate(OffsetDateTime fileCreate) {
    this.fileCreate = fileCreate;
  }

  public DfsStoragePolicy fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * useless fields, for compatability
   * @return fileName
  **/
  @Schema(description = "useless fields, for compatability")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public DfsStoragePolicy filePath(String filePath) {
    this.filePath = filePath;
    return this;
  }

   /**
   * Get filePath
   * @return filePath
  **/
  @Schema(description = "")
  public String getFilePath() {
    return filePath;
  }

  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }

  public DfsStoragePolicy filter(DfsPolicyFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @Schema(description = "")
  public DfsPolicyFilter getFilter() {
    return filter;
  }

  public void setFilter(DfsPolicyFilter filter) {
    this.filter = filter;
  }

  public DfsStoragePolicy fsUser(FSUser fsUser) {
    this.fsUser = fsUser;
    return this;
  }

   /**
   * Get fsUser
   * @return fsUser
  **/
  @Schema(description = "")
  public FSUser getFsUser() {
    return fsUser;
  }

  public void setFsUser(FSUser fsUser) {
    this.fsUser = fsUser;
  }

  public DfsStoragePolicy fsUserGroup(FSUserGroup fsUserGroup) {
    this.fsUserGroup = fsUserGroup;
    return this;
  }

   /**
   * Get fsUserGroup
   * @return fsUserGroup
  **/
  @Schema(description = "")
  public FSUserGroup getFsUserGroup() {
    return fsUserGroup;
  }

  public void setFsUserGroup(FSUserGroup fsUserGroup) {
    this.fsUserGroup = fsUserGroup;
  }

  public DfsStoragePolicy id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsStoragePolicy isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

   /**
   * common properties
   * @return isDefault
  **/
  @Schema(description = "common properties")
  public Boolean isIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }

  public DfsStoragePolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsStoragePolicy pathNum(Long pathNum) {
    this.pathNum = pathNum;
    return this;
  }

   /**
   * Get pathNum
   * @return pathNum
  **/
  @Schema(description = "")
  public Long getPathNum() {
    return pathNum;
  }

  public void setPathNum(Long pathNum) {
    this.pathNum = pathNum;
  }

  public DfsStoragePolicy status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsStoragePolicy stretched(Boolean stretched) {
    this.stretched = stretched;
    return this;
  }

   /**
   * indicate that all pools under this policy is stretched pool
   * @return stretched
  **/
  @Schema(description = "indicate that all pools under this policy is stretched pool")
  public Boolean isStretched() {
    return stretched;
  }

  public void setStretched(Boolean stretched) {
    this.stretched = stretched;
  }

  public DfsStoragePolicy type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DfsStoragePolicy update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsStoragePolicy dfsStoragePolicy = (DfsStoragePolicy) o;
    return Objects.equals(this.actionStatus, dfsStoragePolicy.actionStatus) &&
        Objects.equals(this.cluster, dfsStoragePolicy.cluster) &&
        Objects.equals(this.create, dfsStoragePolicy.create) &&
        Objects.equals(this.description, dfsStoragePolicy.description) &&
        Objects.equals(this.dfsPaths, dfsStoragePolicy.dfsPaths) &&
        Objects.equals(this.dfsRootfs, dfsStoragePolicy.dfsRootfs) &&
        Objects.equals(this.dfsStorageClass, dfsStoragePolicy.dfsStorageClass) &&
        Objects.equals(this.fileCreate, dfsStoragePolicy.fileCreate) &&
        Objects.equals(this.fileName, dfsStoragePolicy.fileName) &&
        Objects.equals(this.filePath, dfsStoragePolicy.filePath) &&
        Objects.equals(this.filter, dfsStoragePolicy.filter) &&
        Objects.equals(this.fsUser, dfsStoragePolicy.fsUser) &&
        Objects.equals(this.fsUserGroup, dfsStoragePolicy.fsUserGroup) &&
        Objects.equals(this.id, dfsStoragePolicy.id) &&
        Objects.equals(this.isDefault, dfsStoragePolicy.isDefault) &&
        Objects.equals(this.name, dfsStoragePolicy.name) &&
        Objects.equals(this.pathNum, dfsStoragePolicy.pathNum) &&
        Objects.equals(this.status, dfsStoragePolicy.status) &&
        Objects.equals(this.stretched, dfsStoragePolicy.stretched) &&
        Objects.equals(this.type, dfsStoragePolicy.type) &&
        Objects.equals(this.update, dfsStoragePolicy.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, cluster, create, description, dfsPaths, dfsRootfs, dfsStorageClass, fileCreate, fileName, filePath, filter, fsUser, fsUserGroup, id, isDefault, name, pathNum, status, stretched, type, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsStoragePolicy {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsPaths: ").append(toIndentedString(dfsPaths)).append("\n");
    sb.append("    dfsRootfs: ").append(toIndentedString(dfsRootfs)).append("\n");
    sb.append("    dfsStorageClass: ").append(toIndentedString(dfsStorageClass)).append("\n");
    sb.append("    fileCreate: ").append(toIndentedString(fileCreate)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    fsUser: ").append(toIndentedString(fsUser)).append("\n");
    sb.append("    fsUserGroup: ").append(toIndentedString(fsUserGroup)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pathNum: ").append(toIndentedString(pathNum)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stretched: ").append(toIndentedString(stretched)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
