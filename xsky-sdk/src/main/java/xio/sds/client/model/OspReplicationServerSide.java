/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OspReplicationServerSide
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class OspReplicationServerSide {
  @SerializedName("data_encryption")
  private String dataEncryption = null;

  @SerializedName("kms")
  private String kms = null;

  @SerializedName("bucket_key_enabled")
  private String bucketKeyEnabled = null;

  @SerializedName("kms_key_id")
  private String kmsKeyId = null;

  public OspReplicationServerSide dataEncryption(String dataEncryption) {
    this.dataEncryption = dataEncryption;
    return this;
  }

   /**
   * Get dataEncryption
   * @return dataEncryption
  **/
  @Schema(description = "")
  public String getDataEncryption() {
    return dataEncryption;
  }

  public void setDataEncryption(String dataEncryption) {
    this.dataEncryption = dataEncryption;
  }

  public OspReplicationServerSide kms(String kms) {
    this.kms = kms;
    return this;
  }

   /**
   * Get kms
   * @return kms
  **/
  @Schema(description = "")
  public String getKms() {
    return kms;
  }

  public void setKms(String kms) {
    this.kms = kms;
  }

  public OspReplicationServerSide bucketKeyEnabled(String bucketKeyEnabled) {
    this.bucketKeyEnabled = bucketKeyEnabled;
    return this;
  }

   /**
   * Get bucketKeyEnabled
   * @return bucketKeyEnabled
  **/
  @Schema(description = "")
  public String getBucketKeyEnabled() {
    return bucketKeyEnabled;
  }

  public void setBucketKeyEnabled(String bucketKeyEnabled) {
    this.bucketKeyEnabled = bucketKeyEnabled;
  }

  public OspReplicationServerSide kmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
    return this;
  }

   /**
   * Get kmsKeyId
   * @return kmsKeyId
  **/
  @Schema(description = "")
  public String getKmsKeyId() {
    return kmsKeyId;
  }

  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OspReplicationServerSide ospReplicationServerSide = (OspReplicationServerSide) o;
    return Objects.equals(this.dataEncryption, ospReplicationServerSide.dataEncryption) &&
        Objects.equals(this.kms, ospReplicationServerSide.kms) &&
        Objects.equals(this.bucketKeyEnabled, ospReplicationServerSide.bucketKeyEnabled) &&
        Objects.equals(this.kmsKeyId, ospReplicationServerSide.kmsKeyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataEncryption, kms, bucketKeyEnabled, kmsKeyId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OspReplicationServerSide {\n");
    
    sb.append("    dataEncryption: ").append(toIndentedString(dataEncryption)).append("\n");
    sb.append("    kms: ").append(toIndentedString(kms)).append("\n");
    sb.append("    bucketKeyEnabled: ").append(toIndentedString(bucketKeyEnabled)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
