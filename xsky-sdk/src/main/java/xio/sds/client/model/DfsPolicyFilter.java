/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import xio.sds.client.model.DfsStoragePolicyNestview;
import xio.sds.client.model.DomainUser;
import xio.sds.client.model.DomainUserGroup;
/**
 * DfsPolicyFilter defines filter for DfsStoragePolicy +X:model:generate;order_by&#x3D;-ID;
 */
@Schema(description = "DfsPolicyFilter defines filter for DfsStoragePolicy +X:model:generate;order_by=-ID;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsPolicyFilter {
  @SerializedName("ad_domain_user_groups")
  private List<DomainUserGroup> adDomainUserGroups = null;

  @SerializedName("ad_domain_users")
  private List<DomainUser> adDomainUsers = null;

  @SerializedName("ad_user_group_ids")
  private List<Long> adUserGroupIds = null;

  @SerializedName("ad_user_ids")
  private List<Long> adUserIds = null;

  @SerializedName("dfs_storage_policy")
  private DfsStoragePolicyNestview dfsStoragePolicy = null;

  @SerializedName("exclude_file_name")
  private Boolean excludeFileName = null;

  @SerializedName("exclude_user_name")
  private Boolean excludeUserName = null;

  @SerializedName("file_names")
  private String fileNames = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("ldap_domain_user_groups")
  private List<DomainUserGroup> ldapDomainUserGroups = null;

  @SerializedName("ldap_domain_users")
  private List<DomainUser> ldapDomainUsers = null;

  @SerializedName("ldap_user_group_ids")
  private List<Long> ldapUserGroupIds = null;

  @SerializedName("ldap_user_ids")
  private List<Long> ldapUserIds = null;

  @SerializedName("user_group_names")
  private List<String> userGroupNames = null;

  @SerializedName("user_names")
  private List<String> userNames = null;

  public DfsPolicyFilter adDomainUserGroups(List<DomainUserGroup> adDomainUserGroups) {
    this.adDomainUserGroups = adDomainUserGroups;
    return this;
  }

  public DfsPolicyFilter addAdDomainUserGroupsItem(DomainUserGroup adDomainUserGroupsItem) {
    if (this.adDomainUserGroups == null) {
      this.adDomainUserGroups = new ArrayList<DomainUserGroup>();
    }
    this.adDomainUserGroups.add(adDomainUserGroupsItem);
    return this;
  }

   /**
   * Get adDomainUserGroups
   * @return adDomainUserGroups
  **/
  @Schema(description = "")
  public List<DomainUserGroup> getAdDomainUserGroups() {
    return adDomainUserGroups;
  }

  public void setAdDomainUserGroups(List<DomainUserGroup> adDomainUserGroups) {
    this.adDomainUserGroups = adDomainUserGroups;
  }

  public DfsPolicyFilter adDomainUsers(List<DomainUser> adDomainUsers) {
    this.adDomainUsers = adDomainUsers;
    return this;
  }

  public DfsPolicyFilter addAdDomainUsersItem(DomainUser adDomainUsersItem) {
    if (this.adDomainUsers == null) {
      this.adDomainUsers = new ArrayList<DomainUser>();
    }
    this.adDomainUsers.add(adDomainUsersItem);
    return this;
  }

   /**
   * Get adDomainUsers
   * @return adDomainUsers
  **/
  @Schema(description = "")
  public List<DomainUser> getAdDomainUsers() {
    return adDomainUsers;
  }

  public void setAdDomainUsers(List<DomainUser> adDomainUsers) {
    this.adDomainUsers = adDomainUsers;
  }

  public DfsPolicyFilter adUserGroupIds(List<Long> adUserGroupIds) {
    this.adUserGroupIds = adUserGroupIds;
    return this;
  }

  public DfsPolicyFilter addAdUserGroupIdsItem(Long adUserGroupIdsItem) {
    if (this.adUserGroupIds == null) {
      this.adUserGroupIds = new ArrayList<Long>();
    }
    this.adUserGroupIds.add(adUserGroupIdsItem);
    return this;
  }

   /**
   * Get adUserGroupIds
   * @return adUserGroupIds
  **/
  @Schema(description = "")
  public List<Long> getAdUserGroupIds() {
    return adUserGroupIds;
  }

  public void setAdUserGroupIds(List<Long> adUserGroupIds) {
    this.adUserGroupIds = adUserGroupIds;
  }

  public DfsPolicyFilter adUserIds(List<Long> adUserIds) {
    this.adUserIds = adUserIds;
    return this;
  }

  public DfsPolicyFilter addAdUserIdsItem(Long adUserIdsItem) {
    if (this.adUserIds == null) {
      this.adUserIds = new ArrayList<Long>();
    }
    this.adUserIds.add(adUserIdsItem);
    return this;
  }

   /**
   * Get adUserIds
   * @return adUserIds
  **/
  @Schema(description = "")
  public List<Long> getAdUserIds() {
    return adUserIds;
  }

  public void setAdUserIds(List<Long> adUserIds) {
    this.adUserIds = adUserIds;
  }

  public DfsPolicyFilter dfsStoragePolicy(DfsStoragePolicyNestview dfsStoragePolicy) {
    this.dfsStoragePolicy = dfsStoragePolicy;
    return this;
  }

   /**
   * Get dfsStoragePolicy
   * @return dfsStoragePolicy
  **/
  @Schema(description = "")
  public DfsStoragePolicyNestview getDfsStoragePolicy() {
    return dfsStoragePolicy;
  }

  public void setDfsStoragePolicy(DfsStoragePolicyNestview dfsStoragePolicy) {
    this.dfsStoragePolicy = dfsStoragePolicy;
  }

  public DfsPolicyFilter excludeFileName(Boolean excludeFileName) {
    this.excludeFileName = excludeFileName;
    return this;
  }

   /**
   * Get excludeFileName
   * @return excludeFileName
  **/
  @Schema(description = "")
  public Boolean isExcludeFileName() {
    return excludeFileName;
  }

  public void setExcludeFileName(Boolean excludeFileName) {
    this.excludeFileName = excludeFileName;
  }

  public DfsPolicyFilter excludeUserName(Boolean excludeUserName) {
    this.excludeUserName = excludeUserName;
    return this;
  }

   /**
   * Get excludeUserName
   * @return excludeUserName
  **/
  @Schema(description = "")
  public Boolean isExcludeUserName() {
    return excludeUserName;
  }

  public void setExcludeUserName(Boolean excludeUserName) {
    this.excludeUserName = excludeUserName;
  }

  public DfsPolicyFilter fileNames(String fileNames) {
    this.fileNames = fileNames;
    return this;
  }

   /**
   * Get fileNames
   * @return fileNames
  **/
  @Schema(description = "")
  public String getFileNames() {
    return fileNames;
  }

  public void setFileNames(String fileNames) {
    this.fileNames = fileNames;
  }

  public DfsPolicyFilter id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsPolicyFilter ldapDomainUserGroups(List<DomainUserGroup> ldapDomainUserGroups) {
    this.ldapDomainUserGroups = ldapDomainUserGroups;
    return this;
  }

  public DfsPolicyFilter addLdapDomainUserGroupsItem(DomainUserGroup ldapDomainUserGroupsItem) {
    if (this.ldapDomainUserGroups == null) {
      this.ldapDomainUserGroups = new ArrayList<DomainUserGroup>();
    }
    this.ldapDomainUserGroups.add(ldapDomainUserGroupsItem);
    return this;
  }

   /**
   * Get ldapDomainUserGroups
   * @return ldapDomainUserGroups
  **/
  @Schema(description = "")
  public List<DomainUserGroup> getLdapDomainUserGroups() {
    return ldapDomainUserGroups;
  }

  public void setLdapDomainUserGroups(List<DomainUserGroup> ldapDomainUserGroups) {
    this.ldapDomainUserGroups = ldapDomainUserGroups;
  }

  public DfsPolicyFilter ldapDomainUsers(List<DomainUser> ldapDomainUsers) {
    this.ldapDomainUsers = ldapDomainUsers;
    return this;
  }

  public DfsPolicyFilter addLdapDomainUsersItem(DomainUser ldapDomainUsersItem) {
    if (this.ldapDomainUsers == null) {
      this.ldapDomainUsers = new ArrayList<DomainUser>();
    }
    this.ldapDomainUsers.add(ldapDomainUsersItem);
    return this;
  }

   /**
   * Get ldapDomainUsers
   * @return ldapDomainUsers
  **/
  @Schema(description = "")
  public List<DomainUser> getLdapDomainUsers() {
    return ldapDomainUsers;
  }

  public void setLdapDomainUsers(List<DomainUser> ldapDomainUsers) {
    this.ldapDomainUsers = ldapDomainUsers;
  }

  public DfsPolicyFilter ldapUserGroupIds(List<Long> ldapUserGroupIds) {
    this.ldapUserGroupIds = ldapUserGroupIds;
    return this;
  }

  public DfsPolicyFilter addLdapUserGroupIdsItem(Long ldapUserGroupIdsItem) {
    if (this.ldapUserGroupIds == null) {
      this.ldapUserGroupIds = new ArrayList<Long>();
    }
    this.ldapUserGroupIds.add(ldapUserGroupIdsItem);
    return this;
  }

   /**
   * Get ldapUserGroupIds
   * @return ldapUserGroupIds
  **/
  @Schema(description = "")
  public List<Long> getLdapUserGroupIds() {
    return ldapUserGroupIds;
  }

  public void setLdapUserGroupIds(List<Long> ldapUserGroupIds) {
    this.ldapUserGroupIds = ldapUserGroupIds;
  }

  public DfsPolicyFilter ldapUserIds(List<Long> ldapUserIds) {
    this.ldapUserIds = ldapUserIds;
    return this;
  }

  public DfsPolicyFilter addLdapUserIdsItem(Long ldapUserIdsItem) {
    if (this.ldapUserIds == null) {
      this.ldapUserIds = new ArrayList<Long>();
    }
    this.ldapUserIds.add(ldapUserIdsItem);
    return this;
  }

   /**
   * Get ldapUserIds
   * @return ldapUserIds
  **/
  @Schema(description = "")
  public List<Long> getLdapUserIds() {
    return ldapUserIds;
  }

  public void setLdapUserIds(List<Long> ldapUserIds) {
    this.ldapUserIds = ldapUserIds;
  }

  public DfsPolicyFilter userGroupNames(List<String> userGroupNames) {
    this.userGroupNames = userGroupNames;
    return this;
  }

  public DfsPolicyFilter addUserGroupNamesItem(String userGroupNamesItem) {
    if (this.userGroupNames == null) {
      this.userGroupNames = new ArrayList<String>();
    }
    this.userGroupNames.add(userGroupNamesItem);
    return this;
  }

   /**
   * Get userGroupNames
   * @return userGroupNames
  **/
  @Schema(description = "")
  public List<String> getUserGroupNames() {
    return userGroupNames;
  }

  public void setUserGroupNames(List<String> userGroupNames) {
    this.userGroupNames = userGroupNames;
  }

  public DfsPolicyFilter userNames(List<String> userNames) {
    this.userNames = userNames;
    return this;
  }

  public DfsPolicyFilter addUserNamesItem(String userNamesItem) {
    if (this.userNames == null) {
      this.userNames = new ArrayList<String>();
    }
    this.userNames.add(userNamesItem);
    return this;
  }

   /**
   * Get userNames
   * @return userNames
  **/
  @Schema(description = "")
  public List<String> getUserNames() {
    return userNames;
  }

  public void setUserNames(List<String> userNames) {
    this.userNames = userNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsPolicyFilter dfsPolicyFilter = (DfsPolicyFilter) o;
    return Objects.equals(this.adDomainUserGroups, dfsPolicyFilter.adDomainUserGroups) &&
        Objects.equals(this.adDomainUsers, dfsPolicyFilter.adDomainUsers) &&
        Objects.equals(this.adUserGroupIds, dfsPolicyFilter.adUserGroupIds) &&
        Objects.equals(this.adUserIds, dfsPolicyFilter.adUserIds) &&
        Objects.equals(this.dfsStoragePolicy, dfsPolicyFilter.dfsStoragePolicy) &&
        Objects.equals(this.excludeFileName, dfsPolicyFilter.excludeFileName) &&
        Objects.equals(this.excludeUserName, dfsPolicyFilter.excludeUserName) &&
        Objects.equals(this.fileNames, dfsPolicyFilter.fileNames) &&
        Objects.equals(this.id, dfsPolicyFilter.id) &&
        Objects.equals(this.ldapDomainUserGroups, dfsPolicyFilter.ldapDomainUserGroups) &&
        Objects.equals(this.ldapDomainUsers, dfsPolicyFilter.ldapDomainUsers) &&
        Objects.equals(this.ldapUserGroupIds, dfsPolicyFilter.ldapUserGroupIds) &&
        Objects.equals(this.ldapUserIds, dfsPolicyFilter.ldapUserIds) &&
        Objects.equals(this.userGroupNames, dfsPolicyFilter.userGroupNames) &&
        Objects.equals(this.userNames, dfsPolicyFilter.userNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adDomainUserGroups, adDomainUsers, adUserGroupIds, adUserIds, dfsStoragePolicy, excludeFileName, excludeUserName, fileNames, id, ldapDomainUserGroups, ldapDomainUsers, ldapUserGroupIds, ldapUserIds, userGroupNames, userNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsPolicyFilter {\n");
    
    sb.append("    adDomainUserGroups: ").append(toIndentedString(adDomainUserGroups)).append("\n");
    sb.append("    adDomainUsers: ").append(toIndentedString(adDomainUsers)).append("\n");
    sb.append("    adUserGroupIds: ").append(toIndentedString(adUserGroupIds)).append("\n");
    sb.append("    adUserIds: ").append(toIndentedString(adUserIds)).append("\n");
    sb.append("    dfsStoragePolicy: ").append(toIndentedString(dfsStoragePolicy)).append("\n");
    sb.append("    excludeFileName: ").append(toIndentedString(excludeFileName)).append("\n");
    sb.append("    excludeUserName: ").append(toIndentedString(excludeUserName)).append("\n");
    sb.append("    fileNames: ").append(toIndentedString(fileNames)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ldapDomainUserGroups: ").append(toIndentedString(ldapDomainUserGroups)).append("\n");
    sb.append("    ldapDomainUsers: ").append(toIndentedString(ldapDomainUsers)).append("\n");
    sb.append("    ldapUserGroupIds: ").append(toIndentedString(ldapUserGroupIds)).append("\n");
    sb.append("    ldapUserIds: ").append(toIndentedString(ldapUserIds)).append("\n");
    sb.append("    userGroupNames: ").append(toIndentedString(userGroupNames)).append("\n");
    sb.append("    userNames: ").append(toIndentedString(userNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
