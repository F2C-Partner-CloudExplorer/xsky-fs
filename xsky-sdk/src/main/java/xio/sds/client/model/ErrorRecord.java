/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ActionLogNestview;
import xio.sds.client.model.AlertInfoNestview;
import xio.sds.client.model.AlertNestview;
import xio.sds.client.model.HostNestview;
/**
 * ErrorRecord defines the error record attributes. +X:model:generate&#x3D;RUL
 */
@Schema(description = "ErrorRecord defines the error record attributes. +X:model:generate=RUL")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class ErrorRecord {
  @SerializedName("action_log")
  private ActionLogNestview actionLog = null;

  @SerializedName("alert")
  private AlertNestview alert = null;

  @SerializedName("alert_info")
  private AlertInfoNestview alertInfo = null;

  @SerializedName("code")
  private String code = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("details")
  private String details = null;

  @SerializedName("extra_data")
  private Object extraData = null;

  @SerializedName("host")
  private HostNestview host = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("message")
  private String message = null;

  public ErrorRecord actionLog(ActionLogNestview actionLog) {
    this.actionLog = actionLog;
    return this;
  }

   /**
   * Get actionLog
   * @return actionLog
  **/
  @Schema(description = "")
  public ActionLogNestview getActionLog() {
    return actionLog;
  }

  public void setActionLog(ActionLogNestview actionLog) {
    this.actionLog = actionLog;
  }

  public ErrorRecord alert(AlertNestview alert) {
    this.alert = alert;
    return this;
  }

   /**
   * Get alert
   * @return alert
  **/
  @Schema(description = "")
  public AlertNestview getAlert() {
    return alert;
  }

  public void setAlert(AlertNestview alert) {
    this.alert = alert;
  }

  public ErrorRecord alertInfo(AlertInfoNestview alertInfo) {
    this.alertInfo = alertInfo;
    return this;
  }

   /**
   * Get alertInfo
   * @return alertInfo
  **/
  @Schema(description = "")
  public AlertInfoNestview getAlertInfo() {
    return alertInfo;
  }

  public void setAlertInfo(AlertInfoNestview alertInfo) {
    this.alertInfo = alertInfo;
  }

  public ErrorRecord code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @Schema(description = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public ErrorRecord create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public ErrorRecord details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @Schema(description = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public ErrorRecord extraData(Object extraData) {
    this.extraData = extraData;
    return this;
  }

   /**
   * Get extraData
   * @return extraData
  **/
  @Schema(description = "")
  public Object getExtraData() {
    return extraData;
  }

  public void setExtraData(Object extraData) {
    this.extraData = extraData;
  }

  public ErrorRecord host(HostNestview host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public HostNestview getHost() {
    return host;
  }

  public void setHost(HostNestview host) {
    this.host = host;
  }

  public ErrorRecord id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public ErrorRecord message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorRecord errorRecord = (ErrorRecord) o;
    return Objects.equals(this.actionLog, errorRecord.actionLog) &&
        Objects.equals(this.alert, errorRecord.alert) &&
        Objects.equals(this.alertInfo, errorRecord.alertInfo) &&
        Objects.equals(this.code, errorRecord.code) &&
        Objects.equals(this.create, errorRecord.create) &&
        Objects.equals(this.details, errorRecord.details) &&
        Objects.equals(this.extraData, errorRecord.extraData) &&
        Objects.equals(this.host, errorRecord.host) &&
        Objects.equals(this.id, errorRecord.id) &&
        Objects.equals(this.message, errorRecord.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionLog, alert, alertInfo, code, create, details, extraData, host, id, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorRecord {\n");
    
    sb.append("    actionLog: ").append(toIndentedString(actionLog)).append("\n");
    sb.append("    alert: ").append(toIndentedString(alert)).append("\n");
    sb.append("    alertInfo: ").append(toIndentedString(alertInfo)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    extraData: ").append(toIndentedString(extraData)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
