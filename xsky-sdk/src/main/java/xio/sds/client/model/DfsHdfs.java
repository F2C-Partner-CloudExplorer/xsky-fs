/*
 * XMS API
 * XMS is the controller of distributed storage system
 *
 * OpenAPI spec version: XSCALEROS_6.2.000.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package xio.sds.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import xio.sds.client.model.ClusterNestview;
import xio.sds.client.model.DfsGatewayGroupNestview;
import xio.sds.client.model.DfsGatewayZoneNestview;
import xio.sds.client.model.DfsHdfsIPWhiteList;
import xio.sds.client.model.DfsPathNestview;
import xio.sds.client.model.FSKerberosNestview;
/**
 * DfsHdfs defines models of dfs hdfs +X:model:generate;plur&#x3D;DfsHdfses;with_detailed;etcd_lock;
 */
@Schema(description = "DfsHdfs defines models of dfs hdfs +X:model:generate;plur=DfsHdfses;with_detailed;etcd_lock;")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-01T09:00:29.487Z[GMT]")
public class DfsHdfs {
  @SerializedName("action_status")
  private String actionStatus = null;

  @SerializedName("auth_to_locals")
  private List<String> authToLocals = null;

  @SerializedName("auth_type")
  private String authType = null;

  @SerializedName("block_size")
  private Long blockSize = null;

  @SerializedName("checksum_type")
  private String checksumType = null;

  @SerializedName("cluster")
  private ClusterNestview cluster = null;

  @SerializedName("create")
  private OffsetDateTime create = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("dfs_gateway_group")
  private DfsGatewayGroupNestview dfsGatewayGroup = null;

  @SerializedName("dfs_gateway_zone")
  private DfsGatewayZoneNestview dfsGatewayZone = null;

  @SerializedName("dfs_hdfs_acl_num")
  private Long dfsHdfsAclNum = null;

  @SerializedName("dfs_hdfs_ip_white_lists")
  private List<DfsHdfsIPWhiteList> dfsHdfsIpWhiteLists = null;

  @SerializedName("dfs_hdfs_ip_white_lists_num")
  private Long dfsHdfsIpWhiteListsNum = null;

  @SerializedName("dfs_hdfs_proxy_user_num")
  private Long dfsHdfsProxyUserNum = null;

  @SerializedName("dfs_path")
  private DfsPathNestview dfsPath = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("kerberos")
  private FSKerberosNestview kerberos = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("port")
  private Long port = null;

  @SerializedName("principal_name")
  private String principalName = null;

  @SerializedName("ranger")
  private Boolean ranger = null;

  @SerializedName("ranger_ip")
  private String rangerIp = null;

  @SerializedName("ranger_service_name")
  private String rangerServiceName = null;

  @SerializedName("ranger_url")
  private String rangerUrl = null;

  @SerializedName("securities")
  private List<String> securities = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update")
  private OffsetDateTime update = null;

  public DfsHdfs actionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
    return this;
  }

   /**
   * Get actionStatus
   * @return actionStatus
  **/
  @Schema(description = "")
  public String getActionStatus() {
    return actionStatus;
  }

  public void setActionStatus(String actionStatus) {
    this.actionStatus = actionStatus;
  }

  public DfsHdfs authToLocals(List<String> authToLocals) {
    this.authToLocals = authToLocals;
    return this;
  }

  public DfsHdfs addAuthToLocalsItem(String authToLocalsItem) {
    if (this.authToLocals == null) {
      this.authToLocals = new ArrayList<String>();
    }
    this.authToLocals.add(authToLocalsItem);
    return this;
  }

   /**
   * Get authToLocals
   * @return authToLocals
  **/
  @Schema(description = "")
  public List<String> getAuthToLocals() {
    return authToLocals;
  }

  public void setAuthToLocals(List<String> authToLocals) {
    this.authToLocals = authToLocals;
  }

  public DfsHdfs authType(String authType) {
    this.authType = authType;
    return this;
  }

   /**
   * Get authType
   * @return authType
  **/
  @Schema(description = "")
  public String getAuthType() {
    return authType;
  }

  public void setAuthType(String authType) {
    this.authType = authType;
  }

  public DfsHdfs blockSize(Long blockSize) {
    this.blockSize = blockSize;
    return this;
  }

   /**
   * Get blockSize
   * @return blockSize
  **/
  @Schema(description = "")
  public Long getBlockSize() {
    return blockSize;
  }

  public void setBlockSize(Long blockSize) {
    this.blockSize = blockSize;
  }

  public DfsHdfs checksumType(String checksumType) {
    this.checksumType = checksumType;
    return this;
  }

   /**
   * Get checksumType
   * @return checksumType
  **/
  @Schema(description = "")
  public String getChecksumType() {
    return checksumType;
  }

  public void setChecksumType(String checksumType) {
    this.checksumType = checksumType;
  }

  public DfsHdfs cluster(ClusterNestview cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @Schema(description = "")
  public ClusterNestview getCluster() {
    return cluster;
  }

  public void setCluster(ClusterNestview cluster) {
    this.cluster = cluster;
  }

  public DfsHdfs create(OffsetDateTime create) {
    this.create = create;
    return this;
  }

   /**
   * Get create
   * @return create
  **/
  @Schema(description = "")
  public OffsetDateTime getCreate() {
    return create;
  }

  public void setCreate(OffsetDateTime create) {
    this.create = create;
  }

  public DfsHdfs description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DfsHdfs dfsGatewayGroup(DfsGatewayGroupNestview dfsGatewayGroup) {
    this.dfsGatewayGroup = dfsGatewayGroup;
    return this;
  }

   /**
   * Get dfsGatewayGroup
   * @return dfsGatewayGroup
  **/
  @Schema(description = "")
  public DfsGatewayGroupNestview getDfsGatewayGroup() {
    return dfsGatewayGroup;
  }

  public void setDfsGatewayGroup(DfsGatewayGroupNestview dfsGatewayGroup) {
    this.dfsGatewayGroup = dfsGatewayGroup;
  }

  public DfsHdfs dfsGatewayZone(DfsGatewayZoneNestview dfsGatewayZone) {
    this.dfsGatewayZone = dfsGatewayZone;
    return this;
  }

   /**
   * Get dfsGatewayZone
   * @return dfsGatewayZone
  **/
  @Schema(description = "")
  public DfsGatewayZoneNestview getDfsGatewayZone() {
    return dfsGatewayZone;
  }

  public void setDfsGatewayZone(DfsGatewayZoneNestview dfsGatewayZone) {
    this.dfsGatewayZone = dfsGatewayZone;
  }

  public DfsHdfs dfsHdfsAclNum(Long dfsHdfsAclNum) {
    this.dfsHdfsAclNum = dfsHdfsAclNum;
    return this;
  }

   /**
   * Get dfsHdfsAclNum
   * @return dfsHdfsAclNum
  **/
  @Schema(description = "")
  public Long getDfsHdfsAclNum() {
    return dfsHdfsAclNum;
  }

  public void setDfsHdfsAclNum(Long dfsHdfsAclNum) {
    this.dfsHdfsAclNum = dfsHdfsAclNum;
  }

  public DfsHdfs dfsHdfsIpWhiteLists(List<DfsHdfsIPWhiteList> dfsHdfsIpWhiteLists) {
    this.dfsHdfsIpWhiteLists = dfsHdfsIpWhiteLists;
    return this;
  }

  public DfsHdfs addDfsHdfsIpWhiteListsItem(DfsHdfsIPWhiteList dfsHdfsIpWhiteListsItem) {
    if (this.dfsHdfsIpWhiteLists == null) {
      this.dfsHdfsIpWhiteLists = new ArrayList<DfsHdfsIPWhiteList>();
    }
    this.dfsHdfsIpWhiteLists.add(dfsHdfsIpWhiteListsItem);
    return this;
  }

   /**
   * Get dfsHdfsIpWhiteLists
   * @return dfsHdfsIpWhiteLists
  **/
  @Schema(description = "")
  public List<DfsHdfsIPWhiteList> getDfsHdfsIpWhiteLists() {
    return dfsHdfsIpWhiteLists;
  }

  public void setDfsHdfsIpWhiteLists(List<DfsHdfsIPWhiteList> dfsHdfsIpWhiteLists) {
    this.dfsHdfsIpWhiteLists = dfsHdfsIpWhiteLists;
  }

  public DfsHdfs dfsHdfsIpWhiteListsNum(Long dfsHdfsIpWhiteListsNum) {
    this.dfsHdfsIpWhiteListsNum = dfsHdfsIpWhiteListsNum;
    return this;
  }

   /**
   * Get dfsHdfsIpWhiteListsNum
   * @return dfsHdfsIpWhiteListsNum
  **/
  @Schema(description = "")
  public Long getDfsHdfsIpWhiteListsNum() {
    return dfsHdfsIpWhiteListsNum;
  }

  public void setDfsHdfsIpWhiteListsNum(Long dfsHdfsIpWhiteListsNum) {
    this.dfsHdfsIpWhiteListsNum = dfsHdfsIpWhiteListsNum;
  }

  public DfsHdfs dfsHdfsProxyUserNum(Long dfsHdfsProxyUserNum) {
    this.dfsHdfsProxyUserNum = dfsHdfsProxyUserNum;
    return this;
  }

   /**
   * Get dfsHdfsProxyUserNum
   * @return dfsHdfsProxyUserNum
  **/
  @Schema(description = "")
  public Long getDfsHdfsProxyUserNum() {
    return dfsHdfsProxyUserNum;
  }

  public void setDfsHdfsProxyUserNum(Long dfsHdfsProxyUserNum) {
    this.dfsHdfsProxyUserNum = dfsHdfsProxyUserNum;
  }

  public DfsHdfs dfsPath(DfsPathNestview dfsPath) {
    this.dfsPath = dfsPath;
    return this;
  }

   /**
   * Get dfsPath
   * @return dfsPath
  **/
  @Schema(description = "")
  public DfsPathNestview getDfsPath() {
    return dfsPath;
  }

  public void setDfsPath(DfsPathNestview dfsPath) {
    this.dfsPath = dfsPath;
  }

  public DfsHdfs id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public DfsHdfs kerberos(FSKerberosNestview kerberos) {
    this.kerberos = kerberos;
    return this;
  }

   /**
   * Get kerberos
   * @return kerberos
  **/
  @Schema(description = "")
  public FSKerberosNestview getKerberos() {
    return kerberos;
  }

  public void setKerberos(FSKerberosNestview kerberos) {
    this.kerberos = kerberos;
  }

  public DfsHdfs name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DfsHdfs port(Long port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Long getPort() {
    return port;
  }

  public void setPort(Long port) {
    this.port = port;
  }

  public DfsHdfs principalName(String principalName) {
    this.principalName = principalName;
    return this;
  }

   /**
   * Get principalName
   * @return principalName
  **/
  @Schema(description = "")
  public String getPrincipalName() {
    return principalName;
  }

  public void setPrincipalName(String principalName) {
    this.principalName = principalName;
  }

  public DfsHdfs ranger(Boolean ranger) {
    this.ranger = ranger;
    return this;
  }

   /**
   * Get ranger
   * @return ranger
  **/
  @Schema(description = "")
  public Boolean isRanger() {
    return ranger;
  }

  public void setRanger(Boolean ranger) {
    this.ranger = ranger;
  }

  public DfsHdfs rangerIp(String rangerIp) {
    this.rangerIp = rangerIp;
    return this;
  }

   /**
   * Get rangerIp
   * @return rangerIp
  **/
  @Schema(description = "")
  public String getRangerIp() {
    return rangerIp;
  }

  public void setRangerIp(String rangerIp) {
    this.rangerIp = rangerIp;
  }

  public DfsHdfs rangerServiceName(String rangerServiceName) {
    this.rangerServiceName = rangerServiceName;
    return this;
  }

   /**
   * Get rangerServiceName
   * @return rangerServiceName
  **/
  @Schema(description = "")
  public String getRangerServiceName() {
    return rangerServiceName;
  }

  public void setRangerServiceName(String rangerServiceName) {
    this.rangerServiceName = rangerServiceName;
  }

  public DfsHdfs rangerUrl(String rangerUrl) {
    this.rangerUrl = rangerUrl;
    return this;
  }

   /**
   * Get rangerUrl
   * @return rangerUrl
  **/
  @Schema(description = "")
  public String getRangerUrl() {
    return rangerUrl;
  }

  public void setRangerUrl(String rangerUrl) {
    this.rangerUrl = rangerUrl;
  }

  public DfsHdfs securities(List<String> securities) {
    this.securities = securities;
    return this;
  }

  public DfsHdfs addSecuritiesItem(String securitiesItem) {
    if (this.securities == null) {
      this.securities = new ArrayList<String>();
    }
    this.securities.add(securitiesItem);
    return this;
  }

   /**
   * Get securities
   * @return securities
  **/
  @Schema(description = "")
  public List<String> getSecurities() {
    return securities;
  }

  public void setSecurities(List<String> securities) {
    this.securities = securities;
  }

  public DfsHdfs status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DfsHdfs update(OffsetDateTime update) {
    this.update = update;
    return this;
  }

   /**
   * Get update
   * @return update
  **/
  @Schema(description = "")
  public OffsetDateTime getUpdate() {
    return update;
  }

  public void setUpdate(OffsetDateTime update) {
    this.update = update;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfsHdfs dfsHdfs = (DfsHdfs) o;
    return Objects.equals(this.actionStatus, dfsHdfs.actionStatus) &&
        Objects.equals(this.authToLocals, dfsHdfs.authToLocals) &&
        Objects.equals(this.authType, dfsHdfs.authType) &&
        Objects.equals(this.blockSize, dfsHdfs.blockSize) &&
        Objects.equals(this.checksumType, dfsHdfs.checksumType) &&
        Objects.equals(this.cluster, dfsHdfs.cluster) &&
        Objects.equals(this.create, dfsHdfs.create) &&
        Objects.equals(this.description, dfsHdfs.description) &&
        Objects.equals(this.dfsGatewayGroup, dfsHdfs.dfsGatewayGroup) &&
        Objects.equals(this.dfsGatewayZone, dfsHdfs.dfsGatewayZone) &&
        Objects.equals(this.dfsHdfsAclNum, dfsHdfs.dfsHdfsAclNum) &&
        Objects.equals(this.dfsHdfsIpWhiteLists, dfsHdfs.dfsHdfsIpWhiteLists) &&
        Objects.equals(this.dfsHdfsIpWhiteListsNum, dfsHdfs.dfsHdfsIpWhiteListsNum) &&
        Objects.equals(this.dfsHdfsProxyUserNum, dfsHdfs.dfsHdfsProxyUserNum) &&
        Objects.equals(this.dfsPath, dfsHdfs.dfsPath) &&
        Objects.equals(this.id, dfsHdfs.id) &&
        Objects.equals(this.kerberos, dfsHdfs.kerberos) &&
        Objects.equals(this.name, dfsHdfs.name) &&
        Objects.equals(this.port, dfsHdfs.port) &&
        Objects.equals(this.principalName, dfsHdfs.principalName) &&
        Objects.equals(this.ranger, dfsHdfs.ranger) &&
        Objects.equals(this.rangerIp, dfsHdfs.rangerIp) &&
        Objects.equals(this.rangerServiceName, dfsHdfs.rangerServiceName) &&
        Objects.equals(this.rangerUrl, dfsHdfs.rangerUrl) &&
        Objects.equals(this.securities, dfsHdfs.securities) &&
        Objects.equals(this.status, dfsHdfs.status) &&
        Objects.equals(this.update, dfsHdfs.update);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionStatus, authToLocals, authType, blockSize, checksumType, cluster, create, description, dfsGatewayGroup, dfsGatewayZone, dfsHdfsAclNum, dfsHdfsIpWhiteLists, dfsHdfsIpWhiteListsNum, dfsHdfsProxyUserNum, dfsPath, id, kerberos, name, port, principalName, ranger, rangerIp, rangerServiceName, rangerUrl, securities, status, update);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfsHdfs {\n");
    
    sb.append("    actionStatus: ").append(toIndentedString(actionStatus)).append("\n");
    sb.append("    authToLocals: ").append(toIndentedString(authToLocals)).append("\n");
    sb.append("    authType: ").append(toIndentedString(authType)).append("\n");
    sb.append("    blockSize: ").append(toIndentedString(blockSize)).append("\n");
    sb.append("    checksumType: ").append(toIndentedString(checksumType)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    create: ").append(toIndentedString(create)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dfsGatewayGroup: ").append(toIndentedString(dfsGatewayGroup)).append("\n");
    sb.append("    dfsGatewayZone: ").append(toIndentedString(dfsGatewayZone)).append("\n");
    sb.append("    dfsHdfsAclNum: ").append(toIndentedString(dfsHdfsAclNum)).append("\n");
    sb.append("    dfsHdfsIpWhiteLists: ").append(toIndentedString(dfsHdfsIpWhiteLists)).append("\n");
    sb.append("    dfsHdfsIpWhiteListsNum: ").append(toIndentedString(dfsHdfsIpWhiteListsNum)).append("\n");
    sb.append("    dfsHdfsProxyUserNum: ").append(toIndentedString(dfsHdfsProxyUserNum)).append("\n");
    sb.append("    dfsPath: ").append(toIndentedString(dfsPath)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    kerberos: ").append(toIndentedString(kerberos)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    principalName: ").append(toIndentedString(principalName)).append("\n");
    sb.append("    ranger: ").append(toIndentedString(ranger)).append("\n");
    sb.append("    rangerIp: ").append(toIndentedString(rangerIp)).append("\n");
    sb.append("    rangerServiceName: ").append(toIndentedString(rangerServiceName)).append("\n");
    sb.append("    rangerUrl: ").append(toIndentedString(rangerUrl)).append("\n");
    sb.append("    securities: ").append(toIndentedString(securities)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    update: ").append(toIndentedString(update)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
